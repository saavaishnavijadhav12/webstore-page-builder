//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

/* tslint:disable */
/* eslint-disable */
// ReSharper disable InconsistentNaming

export interface SelectListGroup {
  Disabled?: boolean;
  Name?: string | undefined;
}

export interface SelectListItem {
  Disabled?: boolean;
  Group?: SelectListGroup;
  Selected?: boolean;
  Text?: string | undefined;
  Value?: string | undefined;
}

export enum HttpStatusCode {
  _100 = 100,
  _101 = 101,
  _102 = 102,
  _103 = 103,
  _200 = 200,
  _201 = 201,
  _202 = 202,
  _203 = 203,
  _204 = 204,
  _205 = 205,
  _206 = 206,
  _207 = 207,
  _208 = 208,
  _226 = 226,
  _300 = 300,
  _301 = 301,
  _302 = 302,
  _303 = 303,
  _304 = 304,
  _305 = 305,
  _306 = 306,
  _307 = 307,
  _308 = 308,
  _400 = 400,
  _401 = 401,
  _402 = 402,
  _403 = 403,
  _404 = 404,
  _405 = 405,
  _406 = 406,
  _407 = 407,
  _408 = 408,
  _409 = 409,
  _410 = 410,
  _411 = 411,
  _412 = 412,
  _413 = 413,
  _414 = 414,
  _415 = 415,
  _416 = 416,
  _417 = 417,
  _421 = 421,
  _422 = 422,
  _423 = 423,
  _424 = 424,
  _426 = 426,
  _428 = 428,
  _429 = 429,
  _431 = 431,
  _451 = 451,
  _500 = 500,
  _501 = 501,
  _502 = 502,
  _503 = 503,
  _504 = 504,
  _505 = 505,
  _506 = 506,
  _507 = 507,
  _508 = 508,
  _510 = 510,
  _511 = 511,
}

/** Represents the request model for creating an order template. */
export interface CreateOrderTemplateRequestModel {
  /** The name of the order template to be created. */
  OrderTemplateName?: string | undefined;
  /** Identifier for the account associated with the cart. */
  AccountId?: number;
  /** The unique identifier of the user with the order template. */
  UserId: number;
  /** The list of SKU details associated with the order template. */
  SkuDetails?: SkuDetailsRequestModel[] | undefined;
  /** Represents the source or origin of the order. */
  OrderOrigin?: string | undefined;
  CatalogCode?: string | undefined;
}

/** Represents the response model for creating an order template. */
export interface CreateOrderTemplateResponseModel {
  /** The unique identifier of the created order template. */
  OrderTemplateNumber?: string | undefined;
  /** Indicates whether the creation of the order template was successful. */
  IsSuccess?: boolean;
}

export interface AddOnSkuListModel {
  /** The SKU code of the add-on SKU. */
  Sku?: string | undefined;
  /** The name of the product. */
  ProductName?: string | undefined;
  /** The name of the group to which the product belongs. */
  GroupName?: string | undefined;
  /** The unit price of the product. */
  UnitPrice?: number;
  /** The quantity of the product, represented as a nullable value. */
  Quantity?: number | undefined;
  /** The total price for the specified quantity of the product, represented as a nullable value. */
  Price?: number | undefined;
  /** The unique identifier for the product in the Znode system. */
  ZnodeProductId?: number;
  OrderProductId?: string | undefined;
  ValidationDetails?: ValidationDetailsModel[] | undefined;
}

export interface AdditionalCostModel {
  /** Gets or sets the code associated with the additional cost. */
  Code?: string | undefined;
  /** Gets or sets the value of the additional cost. */
  Value?: string | undefined;
}

/** Represents an approver in the approval process, including their order, name, status, and approval date. */
export interface ApproversModel {
  /** Specifies the sequence of the approver in the approval workflow. */
  ApproverOrder?: number;
  /** The name of the approver involved in the approval process. */
  ApproverName?: string | undefined;
  /** The current status of the approval, represented by a status code. */
  StatusCode?: string | undefined;
  /** The date and time when the approval was completed, if available. */
  ApprovalDate?: Date | undefined;
  /** Indicates whether the approval is part of a multi-level approval process. */
  IsMultiLevel?: boolean;
}

export interface AttributesModel {
  /** the value of the attribute. */
  AttributeValue?: string | undefined;
  /** the code of the attribute. */
  AttributeCode?: string | undefined;
  /** the list of selected values associated with the attribute. */
  SelectValues?: SelectValuesModel[] | undefined;
  /** a value indicating whether the product is configurable. */
  IsConfigurable?: boolean;
}

/** Represents a boolean response indicating the success or failure of an operation. */
export interface BooleanResponseModel {
  /** Gets or sets a value indicating whether the operation was successful. */
  IsSuccess?: boolean;
}

export interface CPAddressModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  ActionMode?: string | undefined;
  Custom1?: string | undefined;
  Custom2?: string | undefined;
  Custom3?: string | undefined;
  Custom4?: string | undefined;
  Custom5?: string | undefined;
  AddressId?: number;
  AccountId?: number;
  Address1?: string | undefined;
  Address2?: string | undefined;
  Address3?: string | undefined;
  DisplayName?: string | undefined;
  FirstName?: string | undefined;
  LastName?: string | undefined;
  CountryName?: string | undefined;
  StateName?: string | undefined;
  CityName?: string | undefined;
  StateCode?: string | undefined;
  PostalCode?: string | undefined;
  PhoneNumber?: string | undefined;
  IsDefaultBilling?: boolean;
  IsDefaultShipping?: boolean;
  IsActive?: boolean;
  IsGuest?: boolean;
  IsShipping?: boolean;
  IsBilling?: boolean;
  IsShippingBillingDifferent?: boolean;
  FromBillingShipping?: string | undefined;
  AccountAddressId?: number;
  UserId?: number;
  AspNetUserId?: string | undefined;
  UserAddressId?: number;
  Mobilenumber?: string | undefined;
  AlternateMobileNumber?: string | undefined;
  EmailAddress?: string | undefined;
  IsUseWareHouseAddress?: boolean | undefined;
  PortalId?: number;
  ExternalId?: string | undefined;
  CompanyName?: string | undefined;
  CountryCode?: string | undefined;
  OrderId?: number;
  OrderShipmentId?: number;
  PublishStateId?: number;
  IsAddressBook?: boolean;
}

export interface ChildItemListModel {
  ZnodeProductId?: number;
  ItemId?: string | undefined;
  CartItemId?: string | undefined;
  ProductName?: string | undefined;
  ProductDescription?: string | undefined;
  SKU?: string | undefined;
  HasAddOn?: boolean;
  Quantity?: number;
  UnitPrice?: number;
  PersonalizedDetails?: PersonalisationModel[] | undefined;
  Attributes?: DeserializeOrderProductAttributeValueModel[] | undefined;
  AddOnSkuList?: AddOnSkuListModel[] | undefined;
  CustomData?: CustomDataModel;
  ValidationDetails?: ValidationDetailsModel[] | undefined;
  AdditionalCost?: AdditionalCostModel[] | undefined;
  SEOUrl?: string | undefined;
  ProductType?: string | undefined;
  TotalPrice?: number;
  ItemPrice?: number;
}

export interface CouponDetailsEngineModel {
  Coupon?: string | undefined;
  DiscountType?: string | undefined;
  CouponValid?: boolean;
  CouponApplied?: boolean;
  CouponMessage?: string | undefined;
  PromotionName?: string | undefined;
}

export interface CustomDataModel {
  Custom1?: string | undefined;
  Custom2?: string | undefined;
  Custom3?: string | undefined;
  Custom4?: string | undefined;
  Custom5?: string | undefined;
}

export interface DeserializeOrderProductAttributeValueModel {
  AttributeCode?: string | undefined;
  AttributeValue?: string | undefined;
  IsConfigurable?: boolean;
  AttributeDefaultValueCode?: string | undefined;
  OrderProductId?: string | undefined;
  SelectValues?: SelectValuesModel[] | undefined;
}

export interface DiscountFactorModel {
  /** Gets or sets the name associated with the discount. */
  Name?: string | undefined;
  /** the discount type. */
  DiscountType?: string | undefined;
  /** Gets or sets the discount code. */
  DiscountCode?: string | undefined;
  /** Gets or sets a value indicating whether the discount is applied. */
  IsApplied?: string | undefined;
  /** Gets or sets a value indicating whether the discount is valid. */
  IsValid?: string | undefined;
  /** Gets or sets the expiry date of the discount. */
  ExpiryDate?: string | undefined;
  /** Gets or sets the message associated with the discount. */
  Message?: string | undefined;
  /** Gets or sets the amount applied as a discount. */
  AppliedAmount?: number;
  /** Gets or sets the total amount after applying the discount. */
  TotalAmount?: number;
}

export interface LineItemDetailsModel {
  /** the item identifier. */
  ItemId?: string | undefined;
  /** the name of the product. */
  ProductName?: string | undefined;
  /** the description of the product. */
  ProductDescription?: string | undefined;
  /** the personalized details associated with the product. */
  PersonalizedDetails?: PersonalisationModel[] | undefined;
  /** the quantity of the product. */
  Quantity?: number;
  /** the unit price of the product. */
  UnitPrice?: number;
  /** the list of add-on SKUs associated with the product. */
  AddOnSkuList?: AddOnSkuListModel[] | undefined;
  /** the SKU (Stock Keeping Unit) of the product. */
  Sku?: string | undefined;
  /** the list of child items associated with the product. */
  ChildItemList?: ChildItemListModel[] | undefined;
  /** the group code of the product. */
  GroupCode?: string | undefined;
  /** the attributes associated with the product. */
  Attributes?: AttributesModel[] | undefined;
  CustomData?: CustomDataModel;
  /** the list of validation details for the product in the cart. */
  ValidationDetails?: ValidationDetailsModel[] | undefined;
  /** the list of additional costs associated with the product. */
  AdditionalCost?: AdditionalCostModel[] | undefined;
  /** the image path of the product. */
  ProductImagePath?: string | undefined;
  /** the type of the product. */
  ProductType?: string | undefined;
  /** the SEO-friendly URL of the product. */
  SEOUrl?: string | undefined;
  /** the price of the item (may be different from unit price for pricing adjustments). */
  ItemPrice?: number;
  /** the total price of the line item (considering quantity and any adjustments). */
  TotalPrice?: number;
  /** the status code of the line item, which indicates its current state or progress in the processing lifecycle. */
  StatusCode?: string | undefined;
  /** Indicates whether the line item has any add-ons associated with it. */
  HasAddOn?: boolean;
}

export interface OrderLogCollectionDetailsModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  ActionMode?: string | undefined;
  Custom1?: string | undefined;
  Custom2?: string | undefined;
  Custom3?: string | undefined;
  Custom4?: string | undefined;
  Custom5?: string | undefined;
  /** Gets or sets the note. */
  Note?: string | undefined;
  /** Gets or sets the type of mapping. */
  PrefixNote?: string | undefined;
  /** Gets or sets the ID of the order note. */
  OrderNoteId?: string;
  /** Gets or sets the full name of the user who created the order history. */
  CreatedByFullName?: string | undefined;
  /** Gets or sets a value indicating whether the order history is system-defined. */
  IsSystemDefine?: boolean;
}

export interface SelectValuesModel {
  Value?: string | undefined;
  Code?: string | undefined;
}

export interface OrderAddressListModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  ActionMode?: string | undefined;
  Custom1?: string | undefined;
  Custom2?: string | undefined;
  Custom3?: string | undefined;
  Custom4?: string | undefined;
  Custom5?: string | undefined;
  PageIndex?: number | undefined;
  PageSize?: number | undefined;
  TotalResults?: number | undefined;
  readonly TotalPages?: number | undefined;
  OrderAddressModels?: OrderAddressModel[] | undefined;
}

export interface OrderAddressModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  ActionMode?: string | undefined;
  Custom1?: string | undefined;
  Custom2?: string | undefined;
  Custom3?: string | undefined;
  Custom4?: string | undefined;
  Custom5?: string | undefined;
  OrderAddressId?: string;
  OrderId?: string | undefined;
  ClassId?: number | undefined;
  FirstName?: string | undefined;
  LastName?: string | undefined;
  DisplayName?: string | undefined;
  CompanyName?: string | undefined;
  Address1?: string | undefined;
  Address2?: string | undefined;
  Address3?: string | undefined;
  CountryName?: string | undefined;
  StateName?: string | undefined;
  CityName?: string | undefined;
  PostalCode?: string | undefined;
  PhoneNumber?: string | undefined;
  Mobilenumber?: string | undefined;
  AlternateMobileNumber?: string | undefined;
  FaxNumber?: string | undefined;
  IsActive?: boolean;
  ExternalId?: string | undefined;
  IsShipping?: boolean;
  IsBilling?: boolean;
  EmailAddress?: string | undefined;
  UserId?: number;
  AddressId?: number;
  CPAddress?: CPAddressModel;
  OrderAddressListModel?: OrderAddressListModel;
}

export interface OrderClassButtonModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  ActionMode?: string | undefined;
  Custom1?: string | undefined;
  Custom2?: string | undefined;
  Custom3?: string | undefined;
  Custom4?: string | undefined;
  Custom5?: string | undefined;
  CPOrderClassButtonId?: number;
  ButtonText?: string | undefined;
  WhenOmsOrderStateId?: number;
  CPOrderClassId?: number;
  SetToOmsOrderStateId?: number;
  DisplayOrder?: number;
  OrderStateName?: string | undefined;
  ToClassId?: number | undefined;
  ToClass?: string | undefined;
  WhenStatusIs?: string | undefined;
  SetStatusTo?: string | undefined;
  OrderClassModels?: OrderClassModel[] | undefined;
  WhenOmsOrderStateIdList?: SelectListItem[] | undefined;
  CPOrderClassIdList?: SelectListItem[] | undefined;
  OrderClassButtonModels?: OrderClassButtonModel[] | undefined;
}

export interface OrderClassModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  ActionMode?: string | undefined;
  Custom1?: string | undefined;
  Custom2?: string | undefined;
  Custom3?: string | undefined;
  Custom4?: string | undefined;
  Custom5?: string | undefined;
  CPOrderClassId?: number;
  ClassCode: string;
  ClassName: string;
  NextNumber: number;
  NumberFormat: string;
  DigitLength: string;
}

export interface OrderDetailsModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  ActionMode?: string | undefined;
  Custom1?: string | undefined;
  Custom2?: string | undefined;
  Custom3?: string | undefined;
  Custom4?: string | undefined;
  Custom5?: string | undefined;
  OrderId?: string;
  ClassId?: number;
  ClassCode?: string | undefined;
  ClassNumber?: string | undefined;
  OmsOrderStateId?: number;
  OmsPaymentStateId?: number;
  OmsCookieMappingId?: number;
  UserId?: number;
  BillingAddressId?: string | undefined;
  OrderDetail?: string | undefined;
  AccountId?: number | undefined;
  PortalId?: number;
  OrderType?: string | undefined;
  OrderTypeId?: number | undefined;
  OrderOrigin?: string | undefined;
  ProductionDate?: Date | undefined;
  OrderDate?: Date | undefined;
  OrderStateName?: string | undefined;
  OrderPaymentState?: string | undefined;
  UserName?: string | undefined;
  StoreName?: string | undefined;
  OrderTotal?: string | undefined;
  Category?: string | undefined;
  Account?: string | undefined;
  OperatorClassNumber?: string | undefined;
  OperatorAccountName?: string | undefined;
  OperatorUserName?: string | undefined;
  OperatorOrderStateName?: string | undefined;
  OperatorOrderTotal?: string | undefined;
  AccountName?: string | undefined;
  FullName?: string | undefined;
  GlobalSearch?: string | undefined;
  CreatedByFullName?: string | undefined;
  ModifiedByFullName?: string | undefined;
  AssignToFullName?: string | undefined;
  AssignTo?: number | undefined;
  FinalizedDate?: Date | undefined;
  OrderTypeName?: string | undefined;
  LocaleId?: number;
  Age?: string | undefined;
  UserFullName?: string | undefined;
  OperatorAssignToFullName?: string | undefined;
  ColumnSorting?: string | undefined;
  OrderPermission?: string | undefined;
  CPBackColor?: string | undefined;
  CPTextColor?: string | undefined;
  OrderNumber?: string | undefined;
  SkuStatusList?: SkuStatusDetailsModel[] | undefined;
  PurchaseOrderNumber?: string | undefined;
  CultureCode?: string | undefined;
  OrderShipments?: OrderShipmentModel;
  OrderDiscounts?: DiscountFactorModel[] | undefined;
  Address?: OrderAddressModel[] | undefined;
  LineItemDetails?: LineItemDetailsModel[] | undefined;
  ExpirationDate?: Date;
  JobName?: string | undefined;
  PhoneNumber?: string | undefined;
  InHandDate?: Date;
  Name?: string | undefined;
  /** Contains a message describing any errors that occurred during the status update operation. */
  ErrorMessage?: string | undefined;
  /** Indicates whether the status update operation was successful. */
  Status?: boolean;
}

export interface OrderShipmentListModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  ActionMode?: string | undefined;
  Custom1?: string | undefined;
  Custom2?: string | undefined;
  Custom3?: string | undefined;
  Custom4?: string | undefined;
  Custom5?: string | undefined;
  PageIndex?: number | undefined;
  PageSize?: number | undefined;
  TotalResults?: number | undefined;
  readonly TotalPages?: number | undefined;
  OrderShipmentModels?: OrderShipmentModel[] | undefined;
}

export interface OrderShipmentModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  ActionMode?: string | undefined;
  Custom1?: string | undefined;
  Custom2?: string | undefined;
  Custom3?: string | undefined;
  Custom4?: string | undefined;
  Custom5?: string | undefined;
  OrderShipmentId?: string;
  OrderProductId?: string | undefined;
  OrderId?: string | undefined;
  ClassNumber?: string | undefined;
  OrderAddressId?: string | undefined;
  ClassId?: number | undefined;
  ShippingId?: number | undefined;
  ShippedQuantity?: number | undefined;
  TrackingNumber?: string | undefined;
  ShipDate?: Date | undefined;
  ShippingConstraintCode?: string | undefined;
  IsShipCompletely?: boolean | undefined;
  ShippingNotes?: string | undefined;
  UserId?: number;
  OrderNoteId?: string | undefined;
  ShippingAddressId?: number;
  AddressId?: number | undefined;
  PhoneNumber?: string | undefined;
  OrderDetail?: string | undefined;
  Status?: boolean;
  IsSuccess?: boolean;
  OrderShipmentListModel?: OrderShipmentListModel;
  ShippingAddress?: ShippingAddressModel[] | undefined;
  ShippingMethodName?: string | undefined;
  ShippingName?: string | undefined;
}

export interface PersonalisationModel {
  Code?: string | undefined;
  PersonalisationId?: string;
  Value?: string | undefined;
}

export interface ReceiptDetailsResponseModel {
  /** Gets or sets the message text returned from the checkout process.
This can include error messages, success confirmations, or other relevant information. */
  MessageText?: string | undefined;
  /** Gets or sets a value indicating the status of the checkout operation.
True if the checkout was successful, otherwise false. */
  Status?: boolean;
  /** Gets or sets the class number associated with this entity. */
  ClassNumber?: string | undefined;
}

/** Represents the response model for removing a shipping item. */
export interface RemoveShippingResponseModel {
  /** The class number of the shipping item being removed. */
  ClassNumber?: string | undefined;
  /** Indicates whether the shipping removal operation was successful. */
  IsSuccess?: boolean;
}

/** Represents the model for an additional SKU in a list of add-on products. */
export interface AddOnSkuListRequestModel {
  /** Gets or sets the SKU of the additional product. */
  Sku?: string | undefined;
  /** Gets or sets the group name. */
  GroupName?: string | undefined;
}

export interface AddToCartChildItemRequestModel {
  /** Gets or sets the SKU (stock keeping unit) of the item. */
  Sku?: string | undefined;
  /** Gets or sets the quantity of the item. */
  Quantity: number;
  /** Gets or sets the list of additional SKU details for add-on products. */
  AddOnSkuListModel?: AddOnSkuListRequestModel[] | undefined;
  /** Gets or sets the list of personalized details for the item. */
  PersonalizedDetails?: PersonalizedDetailsRequestModel[] | undefined;
  /** Gets or sets the additional cost associated with the item. */
  AdditionalCost?: AdditionalCostRequestModel[] | undefined;
  /** Gets or sets the custom data associated with the cart items. */
  CustomData?: CustomDataRequestModel[] | undefined;
}
export interface AddToCartRequestModel {
  /** Unique identifier assigned to the cart. */
  CartId?: string;
  /** Identifier for the user who owns or is linked to the cart. */
  UserId?: number;
  /** Identifier for the account associated with the cart. */
  AccountId?: number;
  /** Collection of SKU details for items intended to be added to the cart. */
  SkuDetails?: SkuDetailsRequestModel[] | undefined;
  /** Source or origin from where the cart was created or accessed. */
  OrderOrigin?: string | undefined;
  /** Additional comments or information related to the cart. */
  Notes?: string | undefined;
  /** This property is used to identify the catalog from which the order items are selected. */
  CatalogCode: string;
}

export interface AdditionalCostRequestModel {
  /** Gets or sets the code associated with the additional cost. */
  Code?: string | undefined;
  /** Gets or sets the value of the additional cost. */
  Value?: string | undefined;
}

/** Represents additional instructions or notes for a quote request. */
export interface AdditionalInstructionRequestModel {
  /** Gets or sets the name or title of the instruction. */
  Name?: string | undefined;
  /** Gets or sets the detailed information or content of the instruction. */
  Information?: string | undefined;
}

/** Represents the payment details for a request. */
export interface CalculateSummaryRequestModel {
  /** List of discount details applied to the payment. */
  DiscountDetails?: DiscountRequestModel[] | undefined;
  /** Indicates whether the payment is exempt from tax. */
  IsTaxExempt?: boolean;
  /** Represents the monetary value of the sub total. */
  SubTotal?: number;
  /** Represents the monetary value of the total. */
  Total?: number;
}

/** Represents a request for converting a class, including details necessary for the conversion. */
export interface ConvertClassRequestModel {
  /** The number assigned to the target class for the conversion process. */
  TargetClassNumber?: string | undefined;
  /** The name of the target class to which the item will be converted. */
  TargetClassName?: string | undefined;
  /** A unique identifier for the item being converted. */
  ItemId?: string;
  AdditionalInstructions?: AdditionalInstructionRequestModel;
  /** Represents the origin of the item, providing context about where it comes from. */
  Origin?: string | undefined;
}

/** Represents a request model used to convert some entity into an order. */
export interface ConvertToOrderRequestModel {
  /** Gets or sets the user ID associated with the order. */
  UserId: number;
  /** A string value that represents the status code for the order state. */
  StatusCode?: string | undefined;
  /** This property when set true then skip email send for place order */
  SkipSentEmail?: boolean | undefined;
  /** the type of the target class. 
This property can be null or empty if not applicable. */
  TargetClassType?: string | undefined;
  /** Indicates whether the order is finalized. */
  SkipReCalculation?: boolean | undefined;
  AdditionalInstruction?: AdditionalInstructionRequestModel;
  PaymentDetails?: PaymentDetailsRequestModel;
}

export interface CreateClassRequestModel {
  CreatedBy?: number;
  /** Gets or sets the unique identifier for a CP Order Class button. */
  CPOrderClassButtonId?: number;
  /** Gets or sets the text displayed on the button associated with the CP Order Class. */
  ButtonText?: string | undefined;
  /** Gets or sets the identifier for the Order State that triggers a specific action. */
  WhenOmsOrderStateId?: number;
  /** Gets or sets the identifier for the CP Order Class to which the button belongs. */
  CPOrderClassId?: number;
  /** Gets or sets the identifier for the Order State to which the system transitions when the button is activated. */
  SetToOmsOrderStateId?: number;
  /** Gets or sets the order in which the button is displayed, influencing its position relative to other buttons. */
  DisplayOrder?: number;
  OrderStateName?: string | undefined;
  /** Gets or sets the optional identifier for the Class associated with a transition. */
  ToClassId?: number | undefined;
  /** Gets or sets the name or description of the associated class for a transition. */
  ToClass?: string | undefined;
  /** Gets or sets the condition related to the Order State that triggers a specific action. */
  WhenStatusIs?: string | undefined;
  /** Gets or sets the status to which the system should be set when the associated action is triggered. */
  SetStatusTo?: string | undefined;
}

export interface CreateLogsRequestModel {
  CreatedBy?: number;
  /** Gets or sets the class number. */
  ClassNumber?: string | undefined;
  /** Gets or sets the class type. */
  ClassType?: string | undefined;
  /** Gets or sets the note. */
  Note?: string | undefined;
}

/** Represents the request model for creating an order flag. */
export interface CreateOrderFlagRequestModel {
  CreatedBy?: number;
  /** Gets or sets the flag code. */
  FlagCode: string;
  /** Gets or sets the name for unchecked status. */
  NameUnchecked: string;
  /** Gets or sets the name for checked status. */
  NameChecked: string;
  /** Gets or sets a value indicating whether the flag can be overridden. */
  IsCanOveride?: boolean;
  /** Gets or sets the name for overridden status. */
  NameOverridden?: string | undefined;
  /** Gets or sets the display order. */
  DisplayOrder: number;
}

/** Represents the request for creating an order type, derived from the base creation request. */
export interface CreateOrderTypeRequestModel {
  /** Represents a unique code associated with a Commerce Portal order type. */
  TypeCode: string;
  /** Represents the name or description of a Commerce Portal order type. */
  TypeName: string;
}

export interface CreateStatusButtonRequestModel {
  CreatedBy?: number;
  OmsOrderStateId?: number;
  /** Gets or sets the text displayed on the status button. */
  ButtonText: string;
  /** Gets or sets the display order of the status button. */
  DisplayOrder: number;
  /** Gets or sets the status of the status button. */
  Status: string;
  /** Gets or sets the required permission for the status button. */
  RequiredPermission: string;
}

export interface CreateStatusRequestModel {
  CreatedBy?: number;
  /** Gets or sets the name of the order state. */
  OrderStateName: string;
  /** Gets or sets the status code of the order state. */
  StatusCode: string;
  /** Gets or sets a value indicating whether the order state is shown to the customer. */
  IsShowToCustomer?: boolean;
  /** Gets or sets the display order of the order state. */
  DisplayOrder: number;
  /** Gets or sets a value indicating whether the order state is editable. */
  IsEdit?: boolean;
  /** Gets or sets a value indicating whether an email is sent for this order state. */
  IsSendEmail?: boolean;
  /** Gets or sets a value indicating whether the order state is for orders. */
  IsOrderState?: boolean;
  /** Gets or sets a value indicating whether the order state is for order line items. */
  IsOrderLineItemState?: boolean;
  /** Gets or sets the background color of the order state in the control panel (CP). */
  CPBackColor: string;
  /** Gets or sets the text color of the order state in the control panel (CP). */
  CPTextColor: string;
  /** Gets or sets a value indicating whether completeness is required for the order state in the control panel (CP). */
  IsCPRequireCompleteness?: boolean;
  /** Gets or sets a value indicating whether the order state is considered as "working" if not shipped in the control panel (CP). */
  IsCPWorkingNotShipped?: boolean;
  /** Gets or sets a value indicating whether the timeline is displayed only if the order state is active in the control panel (CP). */
  IsCPTimeLineOnlyIfActive?: boolean;
  /** Gets or sets a value of Display (CP). */
  WillDisplayAs?: string | undefined;
  /** Gets or sets a value indicating whether fulfilled data is triggered for the order state in the control panel (CP). */
  IsCPTriggerFulfilledData?: boolean;
}

/** Represents a request model for creating a user group. */
export interface CreateUserGroupRequestModel {
  CreatedBy?: number;
  /** Gets or sets the code of the user group. */
  GroupCode: string;
  /** Gets or sets the name of the user group. */
  GroupName: string;
}

export interface CustomDataRequestModel {
  Custom1?: string | undefined;
  Custom2?: string | undefined;
  Custom3?: string | undefined;
  Custom4?: string | undefined;
  Custom5?: string | undefined;
}

/** Represents a model for requesting discounts. */
export interface DiscountRequestModel {
  /** the discount type. */
  DiscountType: string;
  /** the value associated with the discount. */
  DiscountCode?: string | undefined;
  /** Represents the monetary value of the discount. */
  Amount?: number;
}

/** Represents the  entity details request model. */
export interface EntityDetailsRequestModel {
  /** The parent key associated with the entity. */
  ParentKey?: string | undefined;
  /** Key-value pairs associated with the entity. */
  KeyValueDetails?: KeyValueEntityRequestModel[] | undefined;
}

/** Represents the request model for parameters related to user groups. */
export interface FlagAndUserGroupRequestModel {
  /** Gets or sets the comma-separated user group IDs. */
  CPUserGroupIds?: string | undefined;
  /** Gets or sets the identifier of the order flags. */
  CPOrderFlagId?: number;
}

/** Represents the key value entity request model. */
export interface KeyValueEntityRequestModel {
  /** The key for the key-value pair. */
  Key?: string | undefined;
  /** The value for the key-value pair. */
  Value?: string | undefined;
  /** The key for any linked item. */
  LinkedItemKey?: string | undefined;
}

/** /// <summary> Represents a request model for line litem details. </summary> */
export interface LineItemDetailsStatusRequestModel {
  /** Unique identifier assigned to the line item of an return order. */
  ItemId?: string;
  /** Represents The status code to be assigned to the line item. */
  StatusCode?: string | undefined;
}

/** Represents a request model for merging two shopping carts. */
export interface MergeCartRequestModel {
  /** Gets or sets the cart number of the old shopping cart to be merged. */
  GuestUserCartNumber: string;
  /** Gets or sets the cart number shopping cart where the items from the old cart will be merged. */
  LoginUserCartNumber?: string | undefined;
}

/** Represents a request model for providing discount details related to order payments. */
export interface OrderPaymentDetailsDiscountRequestModel {
  /** Gets or sets the unique identifier of the order associated with the payment details. */
  OrderId?: string | undefined;
  /** Gets or sets the class identifier associated with the payment details. */
  ClassId?: number;
  /** Gets or sets a list of discount data models related to the order payment. */
  DiscountData?: OrderPaymentDiscountsRequestModel[] | undefined;
  /** Gets or sets the user identifier associated with the payment details. */
  UserId?: number;
  /** Gets or sets a flag indicating whether tax exemption is applicable for the order payment. */
  IsTaxExemption?: boolean | undefined;
}

/** Represents a request model for providing details of discounts associated with an order payment. */
export interface OrderPaymentDiscountsRequestModel {
  /** The unique identifier of the order discount. */
  OrderDiscountId?: string | undefined;
  /** The code associated with the discount. */
  Code?: string | undefined;
  /** The value associated with the discount. */
  Value?: string | undefined;
  /** The amount of the discount. */
  Amount?: number;
  /** flag indicating whether the discount has been deleted. */
  IsDeleted?: boolean | undefined;
}

/** Represents a request model for parameter order flags. */
export interface ParameterOrderFlagRequestModel {
  /** Comma-separated string of Commerce portal order flag IDs. */
  CPOrderFlagIds: string;
  /** Commerce portal order type ID. */
  CPOrderTypeId: number;
}

/** Represents a request model for parameter user groups. */
export interface ParameterUserGroupRequestModel {
  /** Commerce portal order flag ID. */
  CPOrderFlagId: number;
  /** Comma-separated string of Commerce portal user group IDs. */
  CPUserGroupIds: string;
  /** Commerce portal order type ID. */
  CPOrderTypeId: number;
  /** User ID. */
  UserId: number;
}

/** Represents the details of a payment request. */
export interface PaymentDetailsRequestModel {
  /** The code of the payment type. */
  PaymentSubTypeCode?: string | undefined;
  /** The identifier of the payment setting. */
  ConfigurationSetCode?: string | undefined;
  /** The token of the payment transaction. */
  PaymentTransactionToken?: string | undefined;
  /** The identifier of the payment setting. */
  PaymentStatusCode?: string | undefined;
  /** Represents the unique identifier for a purchase order. */
  PurchaseOrderNumber?: string | undefined;
  PurchaseOrderDocumentFilePath?: string | undefined;
  ExternalTransactionId?: string | undefined;
}

/** Model representing personalized details for an item. */
export interface PersonalizedDetailsRequestModel {
  /** Gets or sets the code associated with the personalized detail. */
  Code?: string | undefined;
  /** Gets or sets the value of the personalized detail. */
  Value?: string | undefined;
}

export interface ReorderRequestModel {
  /** Represents the identifier for the order. */
  OrderNumber?: string | undefined;
  /** Origin of the order, indicating where the operation. */
  OrderOrigin?: string | undefined;
  /** The unique identifier for the item. */
  ItemId?: string | undefined;
}

/** Represents a request model for calculating returns for individual line items. */
export interface ReturnCalculateLineItemRequestModel {
  /** Gets or sets the order product ID. */
  OrderProductId?: string | undefined;
  /** Gets or sets the quantity of the product being returned. */
  Quantity?: number;
  /** Gets or sets the ID for the reason of return. */
  ReasonForReturnId?: number;
  /** Gets or sets the reason for the return. */
  ReasonForReturn?: string | undefined;
}

/** Return line item details. */
export interface ReturnLineItemRequestModel {
  /** Status code. */
  StatusCode?: string | undefined;
  /** Line items details. */
  LineItemDetails?: ValidateReturnRequestModel[] | undefined;
}

/** Represents a model for a return request line item in the commerce portal. */
export interface ReturnRequestLineItemModel {
  /** Gets or sets the order product ID. */
  OrderProductId?: string | undefined;
  /** Gets or sets the quantity of the product being returned. */
  Quantity?: number;
  /** Gets or sets the ID for the reason of return. */
  ReasonForReturnId?: number;
  /** Gets or sets the reason for the return. */
  ReasonForReturn?: string | undefined;
}

/** Represents a model for a return request in the commerce portal. */
export interface ReturnRequestModel {
  /** Gets or sets the unique identifier for the order. */
  OrderId?: string;
  /** Gets or sets the unique identifier for the user. */
  UserId?: number;
  /** Gets or sets the ID representing the return state. */
  ReturnStateId?: number;
  /** Gets or sets the culture code associated with the return request. */
  CultureCode?: string | undefined;
  /** Gets or sets the list of return request line items. */
  ReturnlineItems?: ReturnRequestLineItemModel[] | undefined;
}

/** Represents the shipping details for a quote request. */
export interface ShippingDetailsRequestModel {
  /** Address identifier for shipping. */
  AddressId: string;
  /** Shipping constraint code. */
  ShippingConstraintCode?: string | undefined;
  /** Shipping identifier. */
  ShippingId: number;
  /** Shipping date. */
  ShipDate?: string | undefined;
  /** Tracking number for the shipment. */
  TrackingNumber?: string | undefined;
}

/** Represents the model for SKU details of a product to be added to the cart. */
export interface SkuDetailsRequestModel {
  /** Gets or sets the SKU of the product. */
  Sku: string;
  /** Gets or sets the quantity of the product to be added to the cart. */
  Quantity: number;
  /** Gets or sets the list of additional SKU details for add-on products. */
  AddOnSkuListModel?: AddOnSkuListRequestModel[] | undefined;
  /** Gets or sets the list of personalized details for the item. */
  PersonalizedDetails?: PersonalizedDetailsRequestModel[] | undefined;
  AddToCartChildItems?: AddToCartChildItemRequestModel[] | undefined;
  /** Gets or sets the custom data associated with the cart items. */
  CustomData?: CustomDataRequestModel[] | undefined;
  /** Gets or sets the group code associated with the item. */
  GroupCode?: string | undefined;
  /** Gets or sets the additional cost associated with the item. */
  AdditionalCost?: AdditionalCostRequestModel[] | undefined;
}

/** Represents a request model for updating status class information. */
export interface StatusClassRequestModel {
  CreatedBy?: number;
  /** Gets or sets the comma-separated list of CP order class IDs. */
  CPOrderClassIds?: string | undefined;
  /** Gets or sets the ID of the OMS order state. */
  OmsOrderStateId?: number;
}

/** Represents the request model for updating all class details. */
export interface UpdateAllClassDetailRequestModel {
  /** Number associated with the class. */
  ClassNumber: string;
  /** Date when the class information expires. */
  ExpirationDate?: Date;
  /** Status code representing the current state of the class. */
  ClassStatusCode?: string | undefined;
  ShippingDetails?: ShippingDetailsRequestModel;
  /** List of line item details to be updated. */
  LineItemDetails?: UpdateLineItemDetailsRequestModel[] | undefined;
  CalculateSummary?: CalculateSummaryRequestModel;
  AdditionalInstructions?: AdditionalInstructionRequestModel;
}

export interface UpdateClassButtonRequestModel {
  ModifiedBy?: number;
  /** Gets or sets the unique identifier for a CP (Custom Process) Order Class button. */
  CPOrderClassButtonId?: number;
  /** Gets or sets the text displayed on the button associated with the CP Order Class. */
  ButtonText?: string | undefined;
  /** Gets or sets the identifier for the Order State that triggers a specific action. */
  WhenOmsOrderStateId?: number;
  /** Gets or sets the identifier for the CP Order Class to which the button belongs. */
  CPOrderClassId?: number;
  /** Gets or sets the identifier for the Order State to which the system transitions when the button is activated. */
  SetToOmsOrderStateId?: number;
  /** Gets or sets the order in which the button is displayed, influencing its position relative to other buttons. */
  DisplayOrder?: number;
  /** Gets or sets the name associated with the Order State linked to the CP Order Class. */
  OrderStateName?: string | undefined;
  /** Gets or sets the optional identifier for the Class associated with a transition. */
  ToClassId?: number | undefined;
  /** Gets or sets the name or description of the associated class for a transition. */
  ToClass?: string | undefined;
  /** Gets or sets the condition related to the Order State that triggers a specific action. */
  WhenStatusIs?: string | undefined;
  /** Gets or sets the status to which the system should be set when the associated action is triggered. */
  SetStatusTo?: string | undefined;
}

/** Represents a request model for updating the quantity of a class item. */
export interface UpdateClassItemQuantityRequestModel {
  /** The Stock Keeping Unit (SKU) of the item to be updated. */
  Sku: string;
  /** The new quantity to set for the item. */
  Quantity: number;
  /** The unique identifier for the item. */
  ItemId?: string | undefined;
}

export interface UpdateClassRequestModel {
  ModifiedBy?: number;
  CPOrderClassId?: number;
  /** Code representing the order class. */
  ClassCode: string;
  /** Name of the order class. */
  ClassName: string;
  NextNumber: number;
  /** Format for displaying the order class number. */
  NumberFormat: string;
  DigitLength: string;
}

/** Represents a request to update the status of a class. */
export interface UpdateClassStatusRequestModel {
  /** The status code to be assigned to the class. */
  StatusCode: string;
}

/** Represents the update entity request model. */
export interface UpdateEntityRequestModel {
  /** Details of the entity to update. */
  EntityDetails?: EntityDetailsRequestModel[] | undefined;
}

/** Represents the details for updating a line item in a request. */
export interface UpdateLineItemDetailsRequestModel {
  /** Unique identifier for the line item. */
  ItemId?: string;
  /** Quantity of the item being updated. */
  Quantity?: number | undefined;
  /** Unit price of the item. */
  UnitPrice?: number | undefined;
  /** Shipping price associated with the item. */
  ShippingPrice?: number | undefined;
  /** Status code of the line item. */
  LineItemStatusCode?: string | undefined;
}

/** Represents a request model used to update the status of line items. */
export interface UpdateLineItemStatusRequestModel {
  /** Represents line item details. */
  LineItemDetailsStatuses?: LineItemDetailsStatusRequestModel[] | undefined;
}

export interface UpdateOrderFlagRequestModel {
  ModifiedBy?: number;
  CPOrderFlagId?: number;
  /** Gets or sets the flag code. */
  FlagCode: string;
  /** Gets or sets the name for unchecked status. */
  NameUnchecked: string;
  /** Gets or sets the name for checked status. */
  NameChecked: string;
  /** Gets or sets a value indicating whether the flag can be overridden. */
  IsCanOveride?: boolean;
  /** Gets or sets the name for overridden status. */
  NameOverridden?: string | undefined;
  /** Gets or sets the display order. */
  DisplayOrder: number;
}

/** Represents a request model for processing payments associated with an order. */
export interface UpdateOrderPaymentRequestModel {
  ModifiedBy?: number;
  /** The unique identifier of the order for which the payment is processed. */
  ClassNumber: string;
  /** The identifier of the address associated with the order payment. */
  BillingAddressId?: number;
  /** The user identifier associated with the payment details. */
  UserId?: number;
  PaymentDetails?: PaymentDetailsRequestModel;
  /** A flag indicating whether tax exemption is applicable for the order payment. */
  IsTaxExemption?: boolean | undefined;
}

/** Represents the request model for updating an order shipment. */
export interface UpdateOrderShipmentRequestModel {
  /** The unique identifier of the order associated with the shipment. */
  ClassNumber?: string | undefined;
  /** The unique identifier of the address associated with the order shipment. */
  OrderAddressId?: string | undefined;
  /** The shipping identifier associated with the order shipment. */
  ShippingId?: number | undefined;
  /** The date when the shipment is to be made. */
  ShipDate?: Date | undefined;
  /** The shipping constraint code associated with the order shipment. */
  ShippingConstraintCode?: string | undefined;
  /** A value indicating whether the order shipment is completely shipped. */
  IsShipCompletely?: boolean | undefined;
  /** The user identifier associated with the order shipment. */
  UserId?: number;
  /** The address identifier associated with the order shipment. */
  ShippingAddressId?: number | undefined;
  /** The tracking number associated with the shipment. */
  TrackingNumber?: string | undefined;
  /** Additional notes or instructions related to shipping. */
  ShippingNotes?: string | undefined;
  /** The phone number associated with the shipment. */
  PhoneNumber?: string | undefined;
  /** Gets or sets the in hand date of the order.. */
  InHandDate?: Date | undefined;
}

/** Represents the  update request model details of an order template. */
export interface UpdateOrderTemplateRequestModel {
  OrderTemplateNumber: string;
  /** Identifier for the account associated with the cart. */
  AccountId?: number;
  /** The unique identifier of the user with the order template. */
  UserId: number;
  /** The list of SKU details associated with the order template. */
  SkuDetails?: SkuDetailsRequestModel[] | undefined;
  /** Represents the source or origin of the order. */
  OrderOrigin?: string | undefined;
}

/** Represents a request model for updating Commerce Portal order types. */
export interface UpdateOrderTypeRequestModel {
  ModifiedBy?: number;
  /** Commerce Portal order type ID. */
  CPOrderTypeId: number;
  /** The code associated with the Commerce Portal order type. */
  TypeCode: string;
  /** The name of the Commerce Portal order type. */
  TypeName: string;
}

export interface UpdateStatusButtonRequestModel {
  ModifiedBy?: number;
  CPOrderStatusButtonId?: number;
  OmsOrderStateId?: number;
  /** Gets or sets the text displayed on the status button. */
  ButtonText: string;
  /** Gets or sets the display order of the status button. */
  DisplayOrder: number;
  /** Gets or sets the status of the status button. */
  Status: string;
  /** Gets or sets the required permission for the status button. */
  RequiredPermission: string;
}

export interface UpdateStatusRequestModel {
  ModifiedBy?: number;
  OmsOrderStateId?: number;
  /** Gets or sets the name of the order state. */
  OrderStateName: string;
  /** Gets or sets the status code of the order state. */
  StatusCode: string;
  /** Gets or sets a value indicating whether the order state is shown to the customer. */
  IsShowToCustomer?: boolean;
  /** Gets or sets the display order of the order state. */
  DisplayOrder: number;
  /** Gets or sets a value indicating whether the order state is editable. */
  IsEdit?: boolean;
  /** Gets or sets a value indicating whether an email is sent for this order state. */
  IsSendEmail?: boolean;
  /** Gets or sets a value indicating whether the order state is for orders. */
  IsOrderState?: boolean;
  /** Gets or sets a value indicating whether the order state is for order line items. */
  IsOrderLineItemState?: boolean;
  /** Gets or sets the background color of the order state in the control panel (CP). */
  CPBackColor: string;
  /** Gets or sets the text color of the order state in the control panel (CP). */
  CPTextColor: string;
  /** Gets or sets a value indicating whether completeness is required for the order state in the control panel (CP). */
  IsCPRequireCompleteness?: boolean;
  /** Gets or sets a value indicating whether the order state is considered as "working" if not shipped in the control panel (CP). */
  IsCPWorkingNotShipped?: boolean;
  /** Gets or sets a value indicating whether the timeline is displayed only if the order state is active in the control panel (CP). */
  IsCPTimeLineOnlyIfActive?: boolean;
  /** Gets or sets a value of Display (CP). */
  WillDisplayAs?: string | undefined;
  /** Gets or sets a value indicating whether fulfilled data is triggered for the order state in the control panel (CP). */
  IsCPTriggerFulfilledData?: boolean;
}

export interface UpdateUserGroupRequestModel {
  ModifiedBy?: number;
  CPUserGroupId?: number;
  /** Gets or sets the code of the user group. */
  GroupCode: string;
  /** Gets or sets the name of the user group. */
  GroupName: string;
}

/** Represents the request model for updating a user in a group. */
export interface UpdateUserInGroupRequestModel {
  ModifiedBy?: number;
  /** Gets or sets the identifier of the user in the group. */
  CPUsersInGroupId?: number;
  /** Gets or sets the identifier of the user group. */
  CPUserGroupId?: number;
  /** Gets or sets the identifier of the user. */
  UserId?: number;
  /** Gets or sets the priority of the user in the group. */
  Priority?: number;
}

/** Represents a model used for requesting user profile information along with associated roles. */
export interface UserProfileCpRoleListRequestModel {
  /** Gets or sets the unique identifier of the user. */
  UserId?: number;
  /** Gets or sets the name of the user. */
  UserName?: string | undefined;
  /** Gets or sets the name of the role associated with the user. */
  RoleName?: string | undefined;
}

/** Represents the request model for parameters related to user groups. */
export interface UsersAndUserGroupsRequestModel {
  /** Gets or sets the comma-separated user group IDs. */
  CPUserGroupIds?: string | undefined;
  /** Gets or sets the identifier of the user. */
  UserId?: number;
}

/** validate rturn line item. */
export interface ValidateReturnRequestModel {
  /** Line item Id */
  ItemId?: string;
  /** Line item quantity to be return. */
  Quantity?: number;
}

/** Represents the response model containing details about an action button. */
export interface ActionButtonDetailsResponseModel {
  ActionButtonResultResponseModel?: ActionButtonResultResponseModel;
}

/** Represents the response model for a list of action buttons, including pagination details. */
export interface ActionButtonListResponseModel {
  PaginationDetail?: ZnodePaginationDetail;
  /** The list of action buttons in the response. */
  ActionButtonResponseModel?: ActionButtonResponseModel[] | undefined;
}

/** Represents the response model for an action button, providing information about its attributes. */
export interface ActionButtonResponseModel {
  /** The unique identifier for the button. */
  ButtonId?: number;
  /** The text displayed on the button. */
  ButtonText?: string | undefined;
  /** The identifier for the order management system (OMS) order state associated with the button. */
  OmsOrderStateId?: number;
  /** The permission code required for the button's functionality. */
  PermissionCode?: string | undefined;
  /** The type of permission required for the button's functionality. */
  TypeOfPermission?: string | undefined;
  /** The display order of the button. */
  DisplayOrder?: number;
  /** A flag indicating whether the button represents a class-specific action. */
  IsClassButton?: boolean;
}

/** Represents the response model for an action button, providing result information. */
export interface ActionButtonResultResponseModel {
  /** The unique identifier for the button. */
  ButtonId?: number;
  /** The text displayed on the button. */
  ButtonText?: string | undefined;
  /** The identifier for the order management system (OMS) order state associated with the button. */
  OmsOrderStateId?: number;
  /** The permission code required for the button's functionality. */
  PermissionCode?: string | undefined;
  /** The type of permission required for the button's functionality. */
  TypeOfPermission?: string | undefined;
  /** The display order of the button. */
  DisplayOrder?: number;
  /** A flag indicating whether the button represents a class-specific action. */
  IsClassButton?: boolean;
}

/** Represents the response model for an active cart in the commerce portal. */
export interface ActiveClassResponseModel {
  /** Number representing the class associated with the active cart. */
  ClassNumber?: string | undefined;
  /** The response message associated with the cart, if any. */
  ResponseMessage?: string | undefined;
}

/** Represents a response model for an add-on SKU associated with a product. */
export interface AddOnSkuResponseModel {
  /** the SKU (Stock Keeping Unit) of the add-on. */
  Sku?: string | undefined;
  /** the name of the add-on product. */
  ProductName?: string | undefined;
  /** the group name of the add-on. */
  GroupName?: string | undefined;
  /** the unit price of the add-on. */
  UnitPrice?: number | undefined;
  ValidationDetails?: ValidationsResponseModel[] | undefined;
}
export interface AddToCartResponseModel {
  /** Gets or sets the unique identifier of the cart. */
  CartId?: string;
  /** The unique identifier associated with the cart item. */
  CartItemId?: string;
  /** The status value indicating the result.
It can be a boolean value, representing success or failure,
or null if the status is undetermined. */
  Status?: boolean | undefined;
  /** Stores the unique identifier for the cart. */
  CartNumber?: string | undefined;
}
export interface AdditionalCostResponseModel {
  /** The code associated with the additional cost. */
  Code?: string | undefined;
  /** The value of the additional cost. */
  Value?: string | undefined;
}

/** Represents additional instructions or information related to a specific entity or process. */
export interface AdditionalInstructionResponseModel {
  /** Gets or sets the name or title of the additional instruction. */
  Name?: string | undefined;
  /** Gets or sets the detailed information or content of the additional instruction. */
  Information?: string | undefined;
}

/** Represents detailed information about an address. */
export interface AddressDetailsResponseModel {
  /** The unique identifier for the address. */
  AddressId?: number;
  /** First name associated with the address. */
  FirstName?: string | undefined;
  /** Last name associated with the address. */
  LastName?: string | undefined;
  /** Name of the city where the address is located. */
  CityName?: string | undefined;
  /** Name of the state or region where the address is located. */
  StateName?: string | undefined;
  /** The code representing the state or region of the address. */
  StateCode?: number;
  /** Postal code or ZIP code of the address. */
  PostalCode?: string | undefined;
  /** Company name associated with the address. */
  CompanyName?: string | undefined;
  /** Phone number associated with the address. */
  PhoneNumber?: string | undefined;
  /** Name of the country where the address is located. */
  CountryName?: string | undefined;
  /** First line of the address. */
  Address1?: string | undefined;
  /** Second line of the address. */
  Address2?: string | undefined;
  /** Indicates whether the address is used for billing purposes. */
  IsBilling?: boolean;
  /** Indicates whether the address is used for shipping purposes. */
  IsShipping?: boolean;
  /** The name or label used to display the address. */
  DisplayName?: string | undefined;
}

export interface ApproversResponseModel {
  ApproverList?: ApproversModel[] | undefined;
}

/** Represents a response model for attributes associated with a product. */
export interface AttributesResponseModel {
  /** the value of the attribute. */
  AttributeValue?: string | undefined;
  /** the code of the attribute. */
  AttributeCode?: string | undefined;
  /** the list of selected values associated with the attribute. */
  SelectValues?: SelectedValueResponseModel[] | undefined;
  /** a value indicating whether the product is configurable. */
  IsConfigurable?: boolean;
  /** The default value code assigned to the product's attribute, which may determine initial settings or choices. */
  AttributeDefaultValueCode?: string | undefined;
  /** Unique identifier for the product in the order, used to track or reference the product within an order. */
  OrderProductId?: string | undefined;
}

/** Represents the response model for the 'Calculate' API endpoint, providing calculated details for an order. */
export interface CalculateResponseModel {
  /** Gets or sets the discount amount. */
  Discount?: number;
  /** Gets or sets the order-level discount amount. */
  OrderLevelDiscount?: number;
  /** Gets or sets the order-level shipping cost. */
  OrderLevelShipping?: number;
  /** Gets or sets the order-level taxes. */
  OrderLevelTaxes?: number;
  /** Gets or sets the shipping cost. */
  ShippingCost?: number;
  /** Gets or sets the discount applied to shipping. */
  ShippingDiscount?: number;
  /** Gets or sets the difference in shipping costs. */
  ShippingDifference?: number;
  /** Gets or sets the total tax cost. */
  TaxCost?: number;
  /** Gets or sets the tax rate applied. */
  TaxRate?: number;
  /** Gets or sets the sales tax amount. */
  SalesTax?: number;
  /** Gets or sets the discount amount applied by customer service representatives. */
  CSRDiscountAmount?: number;
  /** Gets or sets a flag indicating whether the customer service discount is applied. */
  CSRDiscountApplied?: boolean;
  /** Gets or sets a message associated with the customer service discount. */
  CSRDiscountMessage?: string | undefined;
  /** Gets or sets the subtotal amount. */
  SubTotal?: number | undefined;
  /** Gets or sets the total order amount. */
  Total?: number | undefined;
  /** Gets or sets the handling fee for the order. */
  HandlingFee?: number;
  /** Gets or sets the voucher amount applied. */
  VoucherAmount?: number;
  /** Gets or sets the details of vouchers applied to the order. */
  VoucherDetails?: VoucherDetailsEngineModel[] | undefined;
  /** Gets or sets the details of coupons applied to the order. */
  CouponDetails?: CouponDetailsEngineModel[] | undefined;
}

/** Represents a response containing cart information along with additional and discount factors. */
export interface CalculateSummeryResponseModel {
  /** Gets or sets the identifier of the cart. */
  CartId?: string | undefined;
  /** Gets or sets the additional cost factors associated with the cart. */
  CostFactorResponse?: CostFactorResponse[] | undefined;
  /** Gets or sets the discount factors associated with the cart. */
  DiscountFactorResponse?: DiscountFactorResponse[] | undefined;
  /** Gets or sets the subtotal of the cart. */
  SubTotal?: number;
  /** Gets or sets the total amount of the cart after applying discounts and additional costs. */
  Total?: number;
}

/** Represents the response model for cart count information. */
export interface CartCountResponseModel {
  /** Gets or sets the unique identifier of the cart. */
  ClassNumber?: string | undefined;
  /** Gets or sets the count of items in the cart. */
  CartCount?: number;
  /** Indicates whether the update operation was successful. */
  IsSuccess?: boolean;
  /** Contains a message describing any errors that occurred during the status update operation. */
  ErrorMessage?: string | undefined;
}

/** Defines a model for representing an item in a shopping cart with comprehensive details. */
export interface CartItemListResponseModel {
  /** Unique identifier for the product in the Znode system. */
  ZnodeProductId?: number;
  /** Unique identifier for the item within the cart. */
  CartItemId?: string | undefined;
  /** The name of the product as it appears in the catalog. */
  ProductName?: string | undefined;
  /** A description providing more details about the product. */
  ProductDescription?: string | undefined;
  /** The SKU (Stock Keeping Unit) code used to identify the product. */
  Sku?: string | undefined;
  /** Indicates whether the product includes add-ons. */
  HasAddOn?: boolean;
  /** The quantity of the product included in the cart. */
  Quantity?: number;
  /** The price of a single unit of the product, which may be null. */
  UnitPrice?: number | undefined;
  /** Details about any personalization options selected for the product. */
  PersonalizedDetails?: PersonalizedDetailResponseModel[] | undefined;
  /** Attributes associated with the product, such as size, color, etc. */
  Attributes?: AttributesResponseModel[] | undefined;
  /** A list of SKUs for any add-ons related to the product. */
  AddOnSkuList?: AddOnSkuResponseModel[] | undefined;
  CustomData?: CustomDataResponseModel;
  /** A collection of child items that are associated with this product. */
  ChildItemList?: ChildItemListResponseModel[] | undefined;
  /** A list of validation details for the product to ensure it meets certain criteria. */
  ValidationDetails?: ValidationsResponseModel[] | undefined;
  /** Represents additional costs that may apply to the product. */
  AdditionalCost?: AdditionalCostResponseModel[] | undefined;
  /** The SEO-friendly URL used for accessing the product's page. */
  SEOUrl?: string | undefined;
  /** Indicates the type or category of the product. */
  ProductType?: string | undefined;
  /** Total cost of the product in the cart, calculated based on quantity and unit price. */
  TotalPrice?: number;
  /** The price of the product before considering any discounts or additional costs. */
  ItemPrice?: number;
  /** The URL or path to the image representing the product. */
  ProductImagePath?: string | undefined;
}

/** Represents the response model for a shopping cart, including its basic details and contents. */
export interface CartListResponseModel {
  /** Unique identifier for the cart. */
  CartId?: string | undefined;
  /** A number or code associated with the cart, often used for tracking or reference purposes. */
  CartNumber?: string | undefined;
  /** A list of items that are currently in the cart, including detailed information about each item. */
  CartItemList?: CartItemListResponseModel[] | undefined;
}

/** Represents a response model used for cart validation. */
export interface CartValidationResponseModel {
  /** Error code associated with the validation result. */
  readonly ErrorCode?: string | undefined;
  /** Error message explaining the validation failure. */
  readonly ErrorMessage?: string | undefined;
  /** Stock Keeping Unit (SKU) of the item being validated. */
  readonly Sku?: string | undefined;
  /** Priority of the validation rule. Lower values indicate higher priority. */
  readonly Priority?: number;
}

export interface ChildItemDetailsResponseModel {
  /** the unique identifier for the child item. */
  ItemId?: string | undefined;
  /** the Stock Keeping Unit (SKU) of the product. */
  SKU?: string | undefined;
  /** the name of the product. */
  ProductName?: string | undefined;
  /** the description of the product. */
  ProductDescription?: string | undefined;
  /** the quantity of the product. */
  Quantity?: number;
  /** the price of the product. */
  UnitPrice?: number | undefined;
  /** the Znode Product ID. */
  ZnodeProductId?: number;
  /** the list of add-on SKUs associated with the product. */
  AddOnSkuList?: AddOnSkuResponseModel[] | undefined;
  /** the list of personalized details associated with the product. */
  PersonalizedDetails?: PersonalizedDetailResponseModel[] | undefined;
  /** the list of attributes associated with the product. */
  Attributes?: AttributesResponseModel[] | undefined;
  CustomData?: CustomDataResponseModel;
  /** the list of validation details. */
  ValidationDetails?: ValidationsResponseModel[] | undefined;
  /** the additional cost associated with the item. */
  AdditionalCost?: AdditionalCostResponseModel[] | undefined;
  /** Seo url will return in case of bundle, simple and group product */
  SEOUrl?: string | undefined;
  /** the type of the product. */
  ProductType?: string | undefined;
  /** the total price of the shopping cart item. */
  TotalPrice?: number;
  /** the price of a single item in the shopping cart. */
  ItemPrice?: number;
  /** The path or URL to the product image. */
  ProductImagePath?: string | undefined;
}

/** Represents an item in a child item list. */
export interface ChildItemListResponseModel {
  /** the unique identifier for the child item. */
  CartItemId?: string | undefined;
  /** the Stock Keeping Unit (SKU) of the product. */
  SKU?: string | undefined;
  /** the name of the product. */
  ProductName?: string | undefined;
  /** the description of the product. */
  ProductDescription?: string | undefined;
  /** the quantity of the product. */
  Quantity?: number;
  /** the price of the product. */
  UnitPrice?: number | undefined;
  /** the Znode Product ID. */
  ZnodeProductId?: number;
  /** the list of add-on SKUs associated with the product. */
  AddOnSkuList?: AddOnSkuResponseModel[] | undefined;
  /** the list of personalized details associated with the product. */
  PersonalizedDetails?: PersonalizedDetailResponseModel[] | undefined;
  /** the list of attributes associated with the product. */
  Attributes?: AttributesResponseModel[] | undefined;
  CustomData?: CustomDataResponseModel;
  /** the list of validation details. */
  ValidationDetails?: ValidationsResponseModel[] | undefined;
  /** the additional cost associated with the item. */
  AdditionalCost?: AdditionalCostResponseModel[] | undefined;
  /** Seo url will return in case of bundle, simple and group product */
  SEOUrl?: string | undefined;
  /** the type of the product. */
  ProductType?: string | undefined;
  /** the total price of the shopping cart item. */
  TotalPrice?: number;
  /** the price of a single item in the shopping cart. */
  ItemPrice?: number;
}

/** Represents a response model containing a list of class button details, extending the ZnodeBaseModel. */
export interface ClassButtonDetailsListResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** The list of class button result response models. */
  OrderClassButtonModel?: ClassButtonResultResponseModel[] | undefined;
}

/** Represents details of a class button, including identifiers, display properties, and state transitions. */
export interface ClassButtonDetailsResponseModel {
  /** The unique identifier for the class button. */
  CPOrderClassButtonId?: number;
  /** The text displayed on the button. */
  ButtonText?: string | undefined;
  /** The identifier for the OMS order state when the button is clicked. */
  WhenOmsOrderStateId?: number;
  /** The unique identifier for the associated order class. */
  CPOrderClassId?: number;
  /** The identifier for the OMS order state to which the order transitions. */
  SetToOmsOrderStateId?: number;
  /** The order in which the button is displayed. */
  DisplayOrder?: number;
  /** The name of the order state. */
  OrderStateName?: string | undefined;
  /** The optional target class identifier when transitioning to another class. */
  ToClassId?: number | undefined;
  /** The name of the target class when transitioning to another class. */
  ToClass?: string | undefined;
  /** The status condition for the button action. */
  WhenStatusIs?: string | undefined;
  /** The status to be set after the button action. */
  SetStatusTo?: string | undefined;
  OrderClassModels?: OrderClassModel[] | undefined;
  WhenOmsOrderStateIdList?: SelectListItem[] | undefined;
  CPOrderClassIdList?: SelectListItem[] | undefined;
  OrderClassButtonModels?: OrderClassButtonModel[] | undefined;
}

/** Represents a response model for a list of class buttons, including pagination details and class button details. */
export interface ClassButtonListResponseModel {
  PaginationDetail?: ZnodePaginationDetail;
  ClassButtonDetailsListResponseModel?: ClassButtonDetailsListResponseModel;
}

/** Represents a response model for a single class button, containing its details. */
export interface ClassButtonResponseModel {
  ClassButtonDetailsResponseModel?: ClassButtonDetailsResponseModel;
}

/** Represents the result details of a class button in a response, including identifiers, display properties, and state transitions. */
export interface ClassButtonResultResponseModel {
  /** The unique identifier for the class button. */
  CPOrderClassButtonId?: number;
  /** Gets or sets the text displayed on the button. */
  ButtonText?: string | undefined;
  /** Gets or sets the identifier for the OMS order state when the button is clicked. */
  WhenOmsOrderStateId?: number;
  /** The unique identifier for the associated order class. */
  CPOrderClassId?: number;
  /** The identifier for the OMS order state to which the order transitions. */
  SetToOmsOrderStateId?: number;
  /** The order in which the button is displayed. */
  DisplayOrder?: number;
  /** The name of the order state. */
  OrderStateName?: string | undefined;
  /** The optional target class identifier when transitioning to another class. */
  ToClassId?: number | undefined;
  /** The name of the target class when transitioning to another class. */
  ToClass?: string | undefined;
  /** The status condition for the button action. */
  WhenStatusIs?: string | undefined;
  /** The status to be set after the button action. */
  SetStatusTo?: string | undefined;
}

export interface ClassDetailsListResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  CPOrderClassId?: number;
  /** classCode representing the class. */
  ClassCode?: string | undefined;
  /** Name of the class. */
  ClassName?: string | undefined;
  /** Next available number for the class. */
  NextNumber?: number;
  /** Format for displaying the  class number. */
  NumberFormat?: string | undefined;
  /** Length of the  class number (number of digits). */
  DigitLength?: string | undefined;
}

/** Represents detailed information about an order class, including its unique identifier, code, name, next available number, number format, and digit length. */
export interface ClassDetailsResponseModel {
  /** The unique identifier for the order class. */
  CPOrderClassId?: number;
  /** The code representing the order class. */
  ClassCode?: string | undefined;
  /** The name of the order class. */
  ClassName?: string | undefined;
  /** The next available number for the order class. */
  NextNumber?: number;
  /** The format for displaying the order class number. */
  NumberFormat?: string | undefined;
  /** The length of the order class number (number of digits). */
  DigitLength?: string | undefined;
}

export interface ClassItemDetailsResponseModel {
  /** The unique identifier for the class item. */
  ItemId?: string | undefined;
  /** The name or title of the product. */
  ProductName?: string | undefined;
  /** A detailed description providing information about the product. */
  ProductDescription?: string | undefined;
  /** A collection of personalized details related to the product. */
  PersonalizedDetails?: PersonalizedDetailResponseModel[] | undefined;
  /** The quantity of the product available. */
  Quantity?: number;
  /** The unit price of the product. */
  UnitPrice?: number;
  /** A list of add-on SKUs that can be associated with the product. */
  AddOnSkuList?: AddOnSkuResponseModel[] | undefined;
  /** The Stock Keeping Unit (SKU) identifier for the product. */
  Sku?: string | undefined;
  /** A collection of child items associated with this product. */
  ChildItemList?: ChildItemDetailsResponseModel[] | undefined;
  /** The group code that categorizes the product. */
  GroupCode?: string | undefined;
  /** A list of attributes that describe the product. */
  Attributes?: AttributesResponseModel[] | undefined;
  CustomData?: CustomDataResponseModel;
  /** A collection of validation details for the product. */
  ValidationDetails?: ValidationsResponseModel[] | undefined;
  /** Additional costs associated with the product. */
  AdditionalCost?: AdditionalCostResponseModel[] | undefined;
  /** The path or URL to the product image. */
  ProductImagePath?: string | undefined;
  /** The category or type of the product. */
  ProductType?: string | undefined;
  /** An SEO-friendly URL associated with the product. */
  SEOUrl?: string | undefined;
  /** The price for a single unit of the product. */
  ItemPrice?: number;
  /** The total price of the product, including any additional costs. */
  TotalPrice?: number;
  /** Unique identifier for the product in the Znode system. */
  ZnodeProductId?: number;
}

/** Represents a response model containing a list of class items with their details. */
export interface ClassItemListResponseModel {
  /** The unique identifier for the class item list. */
  ClassNumber?: string | undefined;
  /** A collection of detailed information about the items in the class. */
  ItemList?: ClassItemDetailsResponseModel[] | undefined;
  /** The name of the class that these items belong to. */
  ClassName?: string | undefined;
}

export interface ClassListResponseModel {
  PaginationDetail?: ZnodePaginationDetail;
  /** Represents a list of class details response models. */
  ClassDetailsListResponseModels?: ClassDetailsListResponseModel[] | undefined;
}

export interface ClassNumberResponseModel {
  /** The unique identifier for the class number. */
  Id?: string;
}

/** Represents a response model for a class, containing details provided by the ClassDetailsResponseModel. */
export interface ClassResponseModel {
  classDetailsResponseModel?: ClassDetailsResponseModel;
}

/** Represents the response model for collection details within the commerce portal. */
export interface CollectionDetailsResponseModel {
  /** Quantity associated with the collection. */
  Quantity?: number;
  /** Date when the class was created. */
  CreatedDate?: Date;
  /** Date when the class was modified. */
  ModifiedDate?: Date;
  /** Total amount related to the collection. */
  Total?: number;
  /** Number representing the class associated with the collection. */
  ClassNumber?: string | undefined;
  /** Expiration date of the collection. */
  ExpirationDate?: Date;
  /** Status of the class associated with the collection. */
  ClassStatus?: string | undefined;
  /** Name of the customer associated with the collection. */
  CustomerName?: string | undefined;
  /** Name of the store associated with the collection. */
  StoreName?: string | undefined;
  /** Status of the payment related to the collection. */
  PaymentStatus?: string | undefined;
  /** Name of the payment method used for the collection. */
  PaymentName?: string | undefined;
  /** Type of application related to the collection. */
  ApplicationType?: string | undefined;
  /** Date when the order was created. */
  OrderDate?: Date;
  /** Class name of the collection. */
  ClassName?: string | undefined;
  /** Email id of the collection. */
  CreatedByEmailId?: string | undefined;
  /** Phone Number of the user collection. */
  PhoneNumber?: string | undefined;
  /** SubTotal of the collection. */
  SubTotal?: number;
  /** TaxCost of the collection. */
  TaxCost?: number;
  /** ShippingCost of the collection. */
  ShippingCost?: number;
  /** BillingPostalCode of the collection. */
  BillingPostalCode?: string | undefined;
  /** Publish State. */
  Origin?: string | undefined;
  /** EmailId of creation of the collection. */
  CreatedByName?: string | undefined;
  /** EmailId of modification of the collection. */
  ModifiedByName?: string | undefined;
  /** Represents the type of the order. */
  OrderType?: string | undefined;
  /** Represents the old class number. */
  LinkedClassNumber?: string | undefined;
  /** Represents the Culture Code. */
  CultureCode?: string | undefined;
}

/** Represents the response model for collections within the commerce portal. */
export interface CollectionResponseModel {
  PaginationDetail?: ZnodePaginationDetail;
  /** Represents the collection of order templates associated with the response. */
  CollectionDetails?: CollectionDetailsResponseModel[] | undefined;
}

export interface CommerceCollectionClassDetailListResponseModel {
  CommerceCollectionClassDetailList?: CommerceCollectionClassDetailResponseModel[] | undefined;
}

/** Represents detailed information about a commerce collection class. */
/** Represents detailed information about a commerce collection class. */
export interface CommerceCollectionClassDetailResponseModel {
  /** Class code associated with the order. */
  ClassTypeCode?: string | undefined;
  /** Order number or identifier. */
  ClassNumber?: string | undefined;
  /** Optional account ID associated with the order. */
  AccountId?: number | undefined;
  /** Type or category of the order. */
  Type?: string | undefined;
  /** Origin or source of the order. */
  Origin?: string | undefined;
  /** Date and time when the order was created. */
  CreatedDate?: Date;
  /** Name representing the current state of the order. */
  ClassStateName?: string | undefined;
  /** User name associated with the order. */
  UserName?: string | undefined;
  /** User name associated with the order. */
  CreatedByUserName?: string | undefined;
  /** Store name where the order was placed. */
  StoreName?: string | undefined;
  /** Total amount or cost of the order. */
  Total?: string | undefined;
  /** Full name of the user who created the order. */
  CreatedByFullName?: string | undefined;
  /** Full name of the user who last modified the order. */
  ModifiedByFullName?: string | undefined;
  /** Full name of the user to whom the order is assigned. */
  AssignToFullName?: string | undefined;
  /** Culture code associated with the order. */
  CultureCode?: string | undefined;
  /** List of line item details included in the order. */
  LineItemDetails?: LineItemDetailsResponseModel[] | undefined;
  OrderShipments?: ShipmentDetailsResponseModel;
  /** List of discounts applied to the order. */
  OrderDiscounts?: DiscountFactorResponse[] | undefined;
  /** List of cost factor applied to the order. */
  CostFactorResponse?: CostFactorResponse[] | undefined;
  /** List of Address details associated with the order. */
  Address?: AddressDetailsResponseModel[] | undefined;
  /** The expiration date of the order, indicating when the order will no longer be valid or active. */
  ExpirationDate?: Date;
  /** The phone number of the person associated with the order. */
  PhoneNumber?: string | undefined;
  /** The date when the order is expected to be available or fulfilled. This property is optional. */
  InHandDate?: Date | undefined;
  PaymentDetails?: PaymentDetailsResponseModel;
  AdditionalInstructions?: AdditionalInstructionResponseModel;
  /** AssignToUserId associated with the order. */
  AssignToUserId?: number;
  /** Represents the identifier or reference number for a linked class. */
  LinkedClassNumber?: string | undefined;
  /** Represents the converted version of the class number, possibly for compatibility with different formats. */
  ConvertedClassNumber?: string | undefined;
  CustomData?: CustomDataResponseModel;
  /** This identifier is used to track or reference the order. */
  ExternalId?: string | undefined;
  /** Get locale code */
  LocaleCode?: string | undefined;
  /** Get portal code */
  PortalCode?: string | undefined;
  /** Get publish catalog code */
  PublishCatalogCode?: string | undefined;
  /** Get publish catalog code */
  PublishCatalogName?: string | undefined;
  SubTotal?: number | undefined;
  /** Represents the Currency Suffix */
  CurrencySuffix?: string | undefined;
  /** Represents the Currency Code */
  CurrencyCode?: string | undefined;
}
/** Represents the response model for a converted class. */
export interface ConvertedClassResponseMode {
  /** The number associated with the converted class. */
  ConvertedClassNumber?: string | undefined;
  /** Indicates whether the conversion was successful. */
  IsSuccess?: boolean;
}

/** Represents the response model for placing an order, providing essential information about the order status. */
export interface ConvertedToOrderResponseModel {
  /** Gets or sets a value indicating whether the order placement was successful. */
  IsSuccess?: boolean;
  /** Gets or sets the order number assigned to the placed order for reference. */
  OrderNumber?: string | undefined;
  /** Represents the status code of the order, providing information about the current state of the order process. */
  OrderStatusCode?: string | undefined;
  ValidationDetails?: ValidationResponseModel;
}

/** Represents the response for an operation that involves copying a class or similar entity. */
export interface CopiedClassResponseModel {
  /** The specific number or identifier associated with the copied class. */
  CopiedClassNumber?: string | undefined;
  /** Indicates whether the copying operation was completed successfully. */
  IsSuccess?: boolean;
  /** Contains a message describing any errors that occurred during the status update operation. */
  ErrorMessage?: string | undefined;
}

/** Represents a response containing additional cost factors. */
export interface CostFactorResponse {
  /** Gets or sets the name of the additional cost factor. */
  Name?: string | undefined;
  /** Gets or sets the value of the additional cost factor. */
  Value?: string | undefined;
  /** Gets or sets the description of the additional cost factor. */
  Description?: string | undefined;
}

/** Represents the details of a newly created class button in a response, including identifiers, display properties, and state transitions. */
export interface CreateClassButtonDetailsResponseModel {
  /** The unique identifier for the newly created class button. */
  CPOrderClassButtonId?: number;
  /** The text displayed on the newly created button. */
  ButtonText?: string | undefined;
  /** The identifier for the OMS order state when the newly created button is clicked. */
  WhenOmsOrderStateId?: number;
  /** The unique identifier for the associated order class. */
  CPOrderClassId?: number;
  /** The identifier for the OMS order state to which the order transitions after clicking the newly created button. */
  SetToOmsOrderStateId?: number;
  /** The order in which the newly created button is displayed. */
  DisplayOrder?: number;
  /** The optional target class identifier when transitioning to another class after clicking the newly created button. */
  ToClassId?: number | undefined;
}

/** Represents a response model for creating a class button, extending the base create response. */
export interface CreateClassButtonResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  CreateClassButtonDetailsResponseModel?: CreateClassButtonDetailsResponseModel;
}

export interface CreateLogsResponseModel {
  ClassNumber?: string | undefined;
  IsSuccess?: boolean;
  ErrorMessage?: string | undefined;
}

/** Represents the Response model for created an order flag. */
export interface CreateOrderFlagResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  /** Gets or sets cp flag id. */
  CPOrderFlagId?: number;
  /** Gets or sets the flag code. */
  FlagCode?: string | undefined;
  /** Gets or sets the name for unchecked status. */
  NameUnchecked?: string | undefined;
  /** Gets or sets the name for checked status. */
  NameChecked?: string | undefined;
  /** Gets or sets a value indicating whether the flag can be overridden. */
  IsCanOveride?: boolean;
  /** Gets or sets the name for overridden status. */
  NameOverridden?: string | undefined;
  /** Gets or sets the display order. */
  DisplayOrder?: number | undefined;
}

/** Represents the response for creating an order type, derived from the base creation response. */
export interface CreateOrderTypeResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  OrderTypeResponseModel?: OrderTypeResponseModel;
}

export interface CreateStatusButtonResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  OmsOrderStateId?: number;
  /** Gets or sets the text displayed on the status button. */
  ButtonText?: string | undefined;
  /** Gets or sets the display order of the status button. */
  DisplayOrder?: number | undefined;
  /** Gets or sets the status of the status button. */
  Status?: string | undefined;
  /** Gets or sets the required permission for the status button. */
  RequiredPermission?: string | undefined;
}

export interface CreateStatusResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  OmsOrderStateId?: number;
  /** Gets or sets the name of the order state. */
  OrderStateName?: string | undefined;
  /** Gets or sets the status code of the order state. */
  StatusCode?: string | undefined;
  /** Gets or sets a value indicating whether the order state is shown to the customer. */
  IsShowToCustomer?: boolean;
  /** Gets or sets the display order of the order state. */
  DisplayOrder?: number;
  /** Gets or sets a value indicating whether the order state is editable. */
  IsEdit?: boolean;
  /** Gets or sets a value indicating whether an email is sent for this order state. */
  IsSendEmail?: boolean;
  /** Gets or sets a value indicating whether the order state is for orders. */
  IsOrderState?: boolean;
  /** Gets or sets a value indicating whether the order state is for order line items. */
  IsOrderLineItemState?: boolean;
  /** Gets or sets the background color of the order state in the control panel (CP). */
  CPBackColor?: string | undefined;
  /** Gets or sets the text color of the order state in the control panel (CP). */
  CPTextColor?: string | undefined;
  /** Gets or sets a value indicating whether completeness is required for the order state in the control panel (CP). */
  IsCPRequireCompleteness?: boolean;
  /** Gets or sets a value indicating whether the order state is considered as "working" if not shipped in the control panel (CP). */
  IsCPWorkingNotShipped?: boolean;
  /** Gets or sets a value indicating whether the timeline is displayed only if the order state is active in the control panel (CP). */
  IsCPTimeLineOnlyIfActive?: boolean;
  /** Gets or sets a value of Display (CP). */
  WillDisplayAs?: string | undefined;
  /** Gets or sets a value indicating whether fulfilled data is triggered for the order state in the control panel (CP). */
  IsCPTriggerFulfilledData?: boolean;
}

/** Represents a request model for creating a user group. */
export interface CreateUserGroupResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  /** Gets or sets the code of the user group. */
  GroupCode?: string | undefined;
  /** Gets or sets the name of the user group. */
  GroupName?: string | undefined;
}

/** Represents a response model for custom data associated with a product. */
export interface CustomDataResponseModel {
  /** the value of the first custom data field. */
  Custom1?: string | undefined;
  /** the value of the second custom data field. */
  Custom2?: string | undefined;
  /** the value of the third custom data field. */
  Custom3?: string | undefined;
  /** the value of the fourth custom data field. */
  Custom4?: string | undefined;
  /** the value of the fifth custom data field. */
  Custom5?: string | undefined;
}

/** Represents the response for a delete operation, including outcome and details. */
export interface DeleteResponseModel {
  /** Indicates whether the delete operation was successful. */
  IsSuccess?: boolean;
  /** An additional reference or classification number for the deleted entity. */
  ClassNumber?: string | undefined;
  /** Contains a message describing any errors that occurred during the status update operation. */
  ErrorMessage?: string | undefined;
}

/** Represents a response containing discount factors. */
export interface DiscountFactorResponse {
  /** Name associated with the discount. */
  Name?: string | undefined;
  /** the discount type. */
  DiscountType?: string | undefined;
  /** Represents an error message related to the discount. */
  ErrorMessage?: string | undefined;
  /** Discount code used to identify the discount. */
  DiscountCode?: string | undefined;
  /** Indicates whether the discount has been applied. */
  IsApplied?: string | undefined;
  /** Indicates whether the discount is currently valid. */
  IsValid?: string | undefined;
  /** Expiry date of the discount. */
  ExpiryDate?: string | undefined;
  /** Message associated with the discount. */
  Message?: string | undefined;
  /** Amount that has been applied as a discount. */
  AppliedAmount?: number;
  /** Total amount after applying the discount. */
  TotalAmount?: number;
}

/** Represents the response model for discount status. */
export interface DiscountStatusResponseModel {
  /** the unique identifier of the discount. */
  DiscountId?: string;
  /** a value indicating whether the discount application was successful. */
  IsSuccess?: boolean;
  /** a value indicating whether the discount is valid. */
  IsValid?: boolean;
  /** Represents an error message related to the discount. */
  ErrorMessage?: string | undefined;
}

/** Represents details of a response including discount status and calculated details. */
export interface DiscountedDetailsResponseModel {
  DiscountStatus?: DiscountStatusResponseModel;
  CalculatedDetails?: CalculateSummeryResponseModel;
}

/** Represents the details of item-level permissions. */
export interface ItemLevelPermissionDetailsResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** Gets or sets a value indicating whether the user has edit permission. */
  IsEdit?: boolean;
  /** Gets or sets a value indicating whether the user has view permission. */
  IsView?: boolean;
  /** Gets or sets a value indicating whether the user has delete permission. */
  IsDelete?: boolean;
  /** Gets or sets a value indicating whether the permission is delegated to the user. */
  IsDelegatedToMe?: boolean;
}

/** Represents a response model containing item-level permissions for a specific item. */
export interface ItemLevelPermissionResponseModel {
  ItemLevelPermissions?: ItemLevelPermissionDetailsResponseModel;
}

/** Represents detailed information about a line item in an order. */
export interface LineItemDetailsResponseModel {
  /** the item identifier. */
  ItemId?: string | undefined;
  /** the name of the product. */
  ProductName?: string | undefined;
  /** the description of the product. */
  ProductDescription?: string | undefined;
  /** the personalized details associated with the product. */
  PersonalizedDetails?: PersonalizedDetailResponseModel[] | undefined;
  /** the quantity of the product. */
  Quantity?: number;
  /** the unit price of the product. */
  UnitPrice?: number;
  /** the list of add-on SKUs associated with the product. */
  AddOnSkuList?: AddOnSkuResponseModel[] | undefined;
  /** the SKU (Stock Keeping Unit) of the product. */
  Sku?: string | undefined;
  /** the list of child items associated with the product. */
  ChildItemList?: ChildItemDetailsResponseModel[] | undefined;
  /** the group code of the product. */
  GroupCode?: string | undefined;
  /** the attributes associated with the product. */
  Attributes?: AttributesResponseModel[] | undefined;
  CustomData?: CustomDataResponseModel;
  /** the list of validation details for the product in the cart. */
  ValidationDetails?: ValidationsResponseModel[] | undefined;
  /** the list of additional costs associated with the product. */
  AdditionalCost?: AdditionalCostResponseModel[] | undefined;
  /** the image path of the product. */
  ProductImagePath?: string | undefined;
  /** the type of the product. */
  ProductType?: string | undefined;
  /** the SEO-friendly URL of the product. */
  SEOUrl?: string | undefined;
  /** the price of the item (may be different from unit price for pricing adjustments). */
  ItemPrice?: number;
  /** the total price of the line item (considering quantity and any adjustments). */
  TotalPrice?: number;
  /** the status code of the line item, which indicates its current state or progress in the processing lifecycle. */
  StatusCode?: string | undefined;
  /** Gets or sets the shipping cost for an Lineitem. */
  ShippingCost?: number;
}

/** This model is represents the line item response model. */
export interface LineItemPriceResponseModel {
  /** Gets or sets the unique identifier of the cart item. */
  Sku?: string | undefined;
  /** Gets or sets the price of the cart item. */
  CartItemPrice?: number;
  /** Gets or sets the total price including all applicable charges for the cart item. */
  TotalPrice?: number;
  /** Gets or sets the list of price details for the cart item broken down by SKU. */
  PriceBySkuDetails?: PriceBySkuResponseModel[] | undefined;
  /** Contains a message describing any errors that occurred during the status update operation. */
  ErrorMessage?: string | undefined;
}

/** Represents a response model for the result of merging shopping carts. */
export interface MergeCartResponseModel {
  /** Gets or sets the ID of the merged shopping cart. */
  MergedCartNumber?: string | undefined;
}

/** Represents the response model for multiple deletion operations. */
export interface MultipleDeleteResponseModel {
  /** Indicates whether the overall delete operation was successful. */
  IsSuccess?: boolean;
  /** A list of individual delete response models for each deleted item. */
  DeletedItems?: DeleteResponseModel[] | undefined;
  /** Contains a message describing any errors that occurred during the status update operation. */
  ErrorMessage?: string | undefined;
}

export interface NotesDetailsResponceModel {
  PaginationDetail?: ZnodePaginationDetail;
  /** Gets or sets the list of order logs. */
  Notes?: OrderLogCollectionDetailsModel[] | undefined;
}

/** Represents the response model for order details in the Commerce Portal. */
export interface OrderDetailsResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** the unique identifier for the order. */
  OrderId?: string;
  /** The unique identifier of a class. */
  ClassId?: number;
  /** the class number associated with the order. */
  ClassNumber?: string | undefined;
  OrderDetail?: string | undefined;
  /** The  optional account ID associated with the order. */
  AccountId?: number | undefined;
  /** The account name with the account id. */
  AccountName?: string | undefined;
  /** The  portal ID associated with the order. */
  PortalId?: number;
  /** The  type of the order. */
  OrderType?: string | undefined;
  /** The  origin of the order. */
  OrderOrigin?: string | undefined;
  /** The  order date. */
  OrderDate?: Date | undefined;
  /** The the name of the order state. */
  OrderStateName?: string | undefined;
  /** The  username associated with the order. */
  UserName?: string | undefined;
  /** The  store name associated with the order. */
  StoreName?: string | undefined;
  /** The  total cost of the order. */
  OrderTotal?: string | undefined;
  /** The  full name associated with the order. */
  FullName?: string | undefined;
  /** The the full name of the user who created the order. */
  CreatedByFullName?: string | undefined;
  /** The  full name of the user who modified the order. */
  ModifiedByFullName?: string | undefined;
  /** The  full name of the user to whom the order is assigned. */
  AssignToFullName?: string | undefined;
  /** The  type name of the order. */
  OrderTypeName?: string | undefined;
  /** The  locale ID associated with the order. */
  LocaleId?: number;
  /** The  order permission information associated with the order. */
  OrderPermission?: string | undefined;
  /** The background color for the control panel. */
  CPBackColor?: string | undefined;
  /** The text color for the control panel. */
  CPTextColor?: string | undefined;
  /** The unique identifier of the user. */
  UserId?: number;
  /** The identifier of the state of the OMS (Order Management System) order. */
  OmsOrderStateId?: number;
  /** The purchase order number associated with the order. */
  PurchaseOrderNumber?: string | undefined;
  /** The full name of the user. */
  UserFullName?: string | undefined;
}

export interface OrderFlagDetailsResponseModel {
  OrderFlagResponseModel?: OrderFlagResponseModel;
}

/** Represents a response model for a list of Commerce Portal order flags. */
export interface OrderFlagListResponseModel {
  PaginationDetail?: ZnodePaginationDetail;
  /** List of Commerce Portal order flag response models. */
  OrderFlagResponseModel?: OrderFlagResponseModel[] | undefined;
}

/** Represents a response model for a Commerce Portal order flag. */
export interface OrderFlagResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** Commerce Portal order flag ID. */
  CPOrderFlagId?: number;
  /** The code associated with the order flag. */
  FlagCode?: string | undefined;
  /** The unchecked name of the order flag. */
  NameUnchecked?: string | undefined;
  /** The checked name of the order flag. */
  NameChecked?: string | undefined;
  /** Indicates if the order flag can be overridden. */
  IsCanOveride?: boolean;
  /** The overridden name of the order flag. */
  NameOverridden?: string | undefined;
  /** The display order of the order flag. */
  DisplayOrder?: number;
}

/** Represents the response model for discounts applied to an order payment. */
export interface OrderPaymentDiscountsResponseModel {
  /** Gets or sets the ID of the order discount. */
  OrderDiscountId?: string | undefined;
  /** Gets or sets the code associated with the discount. */
  Code?: string | undefined;
  /** Gets or sets the value of the discount. */
  Value?: string | undefined;
  /** Gets or sets the amount of the discount. */
  Amount?: number;
  /** Gets or sets a value indicating whether the discount is deleted. */
  IsDeleted?: boolean | undefined;
}

/** Represents the response model for handling order payment. */
export interface OrderPaymentResponseModel {
  /** Gets or sets the ID of the order address. */
  OrderAddressId?: string;
  /** Gets or sets the ID of the order. */
  OrderId?: string | undefined;
  /** Gets or sets the ID of the class. */
  ClassId?: number;
  /** Gets or sets the list of discount data associated with the order payment. */
  DiscountData?: OrderPaymentDiscountsResponseModel[] | undefined;
  /** Gets or sets the ID of the user. */
  UserId?: number;
  /** Gets or sets the ID of the address. */
  AddressId?: number;
  /** Gets or sets a value indicating whether tax exemption is applied. */
  IsTaxExemption?: boolean | undefined;
  /** Gets or sets the order details. */
  OrderDetail?: string | undefined;
  /** Gets or sets the purchase order number. */
  PurchaseOrderNumber?: string | undefined;
  /** Gets or sets the list of status models associated with the order payment. */
  StatusModelList?: StatusResponseModel[] | undefined;
  /** Gets or sets the card number used for payment. */
  CardNumber?: string | undefined;
  /** Gets or sets the amount of payment. */
  Amount?: number | undefined;
  /** Gets or sets the expiration date of the payment method. */
  ExpirationDate?: Date;
  /** Gets or sets the promo code applied to the order. */
  PromoCode?: string | undefined;
  /** Gets or sets the discount amount applied to the order. */
  Discount?: number | undefined;
}

/** Represents the response model for order product catalog profile. */
export interface OrderProductCatalogProfileResponseModel {
  OrderProductCatalogProfileResultResponse?: OrderProductCatalogProfileResultResponseModel;
}

/** Represents the result response model for order product catalog profile. */
export interface OrderProductCatalogProfileResultResponseModel {
  /** Gets or sets the catalog ID. */
  CatalogId?: number;
  /** Gets or sets the profile ID. */
  ProfileId?: number;
}

export interface OrderResponseModel {
  PaginationDetail?: ZnodePaginationDetail;
  /** The  list of order details in the order list response. */
  OrderDetailsResponseModels?: OrderDetailsResponseModel[] | undefined;
}

/** Represents the response model containing details related to an order status. */
export interface OrderStatusDetailResponseModel {
  OrderStatusDetailResultResponseModel?: OrderStatusDetailResultResponseModel;
}

/** Represents the response model for detailed information about an order status. */
export interface OrderStatusDetailResultResponseModel {
  /** The unique identifier for the order management system (OMS) order state. */
  OmsOrderStateId?: number;
  /** The name of the order state. */
  OrderStateName?: string | undefined;
  /** A flag indicating whether the order status fulfills a trigger for CP (Custom Process). */
  IsCPTriggerFulfilledData?: boolean;
  /** A flag indicating whether CP requires completeness for the order status. */
  IsCPRequireCompleteness?: boolean;
  /** A flag indicating whether the order status allows editing. */
  IsEdit?: boolean;
  /** A flag indicating whether the order status applies to order line items. */
  IsOrderLineItemState?: boolean;
  /** A flag indicating whether an email should be sent for this order status. */
  IsSendEmail?: boolean;
  /** A flag indicating whether the order status is system-defined. */
  IsSystemDefined?: boolean;
}

/** Represents a response model for Commerce Portal order type details. */
export interface OrderTypeDetailResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  OrderTypeResponseModel?: OrderTypeResponseModel;
}

/** Represents a response model for a list of Commerce Portal order types. */
export interface OrderTypeListResponseModel {
  PaginationDetail?: ZnodePaginationDetail;
  /** List of Commerce Portal order type response models. */
  OrderTypeResponseModel?: OrderTypeResponseModel[] | undefined;
}

/** Represents the response model for a commerce portal order type. */
export interface OrderTypeResponseModel {
  /** Represents the identifier of a commerce portal order type. */
  CPOrderTypeId?: number;
  /** Represents a unique code associated with a commerce portal order type. */
  TypeCode: string | undefined;
  /** Represents the name or description of a commerce portal order type. */
  TypeName: string | undefined;
}

/** Represents the details of a payment response. */
export interface PaymentDetailsResponseModel {
  /** The subtype code for the payment, indicating the specific type or category. */
  PaymentSubTypeCode?: string | undefined;
  /** The code representing the configuration set used for the payment. */
  ConfigurationSetCode?: string | undefined;
  /** A token associated with the payment transaction, used for identifying or processing the transaction. */
  PaymentTransactionToken?: string | undefined;
  /** The status code of the payment, representing its current state or outcome. */
  PaymentStatusCode?: string | undefined;
  /** The unique identifier for the purchase order associated with the payment. */
  PurchaseOrderNumber?: string | undefined;
  /** The display name for the payment method. */
  PaymentName?: string | undefined;
}

/** Represents a response model for personalized details associated with a product. */
export interface PersonalizedDetailResponseModel {
  /** the unique identifier for the personalized detail. */
  PersonalizedId?: string;
  /** the value of the personalized detail. */
  Value?: string | undefined;
  /** the code of the personalized detail. */
  Code?: string | undefined;
}

/** Model for the response containing price by SKU. */
export interface PriceBySkuResponseModel {
  /** Represents the price associated with the SKU, expressed as a double. */
  Price?: number;
  /** The unique identifier for the SKU, used for tracking and identification. */
  Sku?: string | undefined;
  /** List of Contains validation details related to the SKU. */
  ValidationDetails?: ValidationDetailsModel[] | undefined;
}

/** Represents the response model indicating the result of a reorder. */
export interface ReorderResponseModel {
  /** Represents the identifier for the order. */
  OrderNumber?: string | undefined;
  /** Indicates whether the operation associated with the order was successful. */
  IsSuccess?: boolean;
  /** Represents the new class number related to the order. */
  NewClassNumber?: string | undefined;
  /** Indicates whether the  Error message */
  ErrorMessage?: string | undefined;
}

/** Represents the response model for return calculation line items. */
export interface ReturnCalculateLineItemSummeryResponseModel {
  /** Gets or sets the order product ID. */
  OrderProductId?: string | undefined;
  /** Gets or sets the ID for the reason for return. */
  ReasonForReturnId?: number;
  /** Gets or sets the reason for return. */
  ReasonForReturn?: string | undefined;
  /** Gets or sets the expected return quantity. */
  ExpectedReturnQuantity?: number;
  /** Gets or sets the unit price of the item. */
  UnitPrice?: number;
  /** Gets or sets the total line item price. */
  TotalLineItemPrice?: number;
  /** Gets or sets the OMS order line item ID. */
  OmsOrderLineItemId?: string;
  /** Gets or sets the error message, if any. */
  ErrorMessage?: string | undefined;
  /** Gets or sets a value indicating whether there is an error. */
  HasError?: boolean;
  /** Gets or sets the tax cost. */
  TaxCost?: number;
  /** Gets or sets the culture code. */
  CultureCode?: string | undefined;
  /** Gets or sets a value indicating whether this is a shipping return. */
  IsShippingReturn?: boolean;
  /** Gets or sets the shipping cost. */
  ShippingCost?: number | undefined;
  /** Gets or sets the returned quantity. */
  ReturnedQuantity?: number | undefined;
  /** Gets or sets the RMA return line items ID. */
  RmaReturnLineItemsId?: number;
  /** Gets or sets the per-quantity line item discount. */
  PerQuantityLineItemDiscount?: number;
  /** Gets or sets the per-quantity CSR discount. */
  PerQuantityCSRDiscount?: number;
  /** Gets or sets the per-quantity shipping discount. */
  PerQuantityShippingDiscount?: number;
  /** Gets or sets the per-quantity shipping cost. */
  PerQuantityShippingCost?: number;
  /** Gets or sets the per-quantity order level discount on line item. */
  PerQuantityOrderLevelDiscountOnLineItem?: number;
  /** Gets or sets the payment status ID. */
  PaymentStatusId?: number | undefined;
  /** Gets or sets the per-quantity voucher amount. */
  PerQuantityVoucherAmount?: number;
  /** Gets or sets the parent OMS order line items ID. */
  ParentOmsOrderLineItemsId?: number | undefined;
  /** Gets or sets the import duty. */
  ImportDuty?: number;
}

/** Represents the response model for return calculation. */
export interface ReturnCalculateSummeryResponseModel {
  /** Gets or sets the order ID. */
  OrderId?: string;
  /** Gets or sets the user ID. */
  UserId?: number;
  /** Gets or sets the list of return calculate line items. */
  returnCalculateLineItem?: ReturnCalculateLineItemSummeryResponseModel[] | undefined;
  /** Gets or sets the return subtotal. */
  ReturnSubTotal?: number;
  /** Gets or sets the return tax cost. */
  ReturnTaxCost?: number;
  /** Gets or sets the return shipping cost. */
  ReturnShippingCost?: number | undefined;
  /** Gets or sets the culture code. */
  CultureCode?: string | undefined;
  /** Gets or sets a value indicating whether the request is made by an admin. */
  IsAdminRequest?: boolean;
  /** Gets or sets the discount amount. */
  Discount?: number;
  /** Gets or sets the CSR discount amount. */
  CSRDiscount?: number;
  /** Gets or sets the return shipping discount amount. */
  ReturnShippingDiscount?: number;
  /** Gets or sets the return charges. */
  ReturnCharges?: number;
  /** Gets or sets the voucher amount. */
  VoucherAmount?: number;
  /** Gets the return total amount. */
  readonly ReturnTotal?: number;
  /** Gets or sets the payment status ID. */
  PaymentStatusId?: number;
  /** Gets or sets the return import duty amount. */
  ReturnImportDuty?: number;
}

export interface ReturnLineItemModel {
  ReturnLineItemsId?: number;
  ReturnDetailsId?: number;
  OrderLineItemsId: number;
  ReasonForReturnId?: number | undefined;
  OrderLineItemRelationshipTypeId?: number;
  ReasonForReturn?: string | undefined;
  Sku?: string | undefined;
  ProductName?: string | undefined;
  Description?: string | undefined;
  ExpectedReturnQuantity: number;
  ReturnedQuantity?: number | undefined;
  Price?: number;
  Weight?: number | undefined;
  DiscountAmount?: number;
  ShipSeparately?: boolean;
  ReturnDate?: Date | undefined;
  ShippingCost?: number | undefined;
  ReturnStateId?: number;
  IsActive?: boolean;
  IsShippingReturn?: boolean;
  RefundAmount?: number | undefined;
  ReturnTypeCode?: string | undefined;
  ReturnStatus?: string | undefined;
  ImagePath?: string | undefined;
  ShippedQuantity?: number;
  ErrorMessage?: string | undefined;
  HasError?: boolean;
  TaxCost?: number;
  OmsReturnOrderLineItemsId?: number | undefined;
  PerQuantityLineItemDiscount?: number;
  PerQuantityCSRDiscount?: number;
  PerQuantityShippingDiscount?: number;
  PerQuantityShippingCost?: number;
  PerQuantityOrderLevelDiscountOnLineItem?: number;
  PaymentStatusId?: number | undefined;
  PerQuantityVoucherAmount?: number;
  ParentOmsOrderLineItemsId?: number | undefined;
  ImportDuty?: number;
}

export interface ReturnSummaryResponceModel {
  ReturnDetailsId?: number;
  OrderId?: string;
  OrderNumber?: string | undefined;
  ReturnNumber?: string | undefined;
  ReturnDate?: Date | undefined;
  RmaReturnStateId?: number;
  TotalExpectedReturnQuantity?: number;
  EmailId?: string | undefined;
  PortalId: number;
  UserId: number;
  FirstName?: string | undefined;
  LastName?: string | undefined;
  AddressId?: number | undefined;
  ShippingId?: number | undefined;
  ShippingNumber?: string | undefined;
  IsTaxCostEdited?: boolean;
  SubTotal?: number;
  ReturnShippingCost?: number | undefined;
  DiscountAmount?: number;
  ReturnTaxCost?: number;
  CSRDiscount?: number;
  IsActive?: boolean;
  CurrencyCode?: string | undefined;
  CultureCode?: string | undefined;
  ReturnStatus?: string | undefined;
  UserName?: string | undefined;
  StoreName?: string | undefined;
  StoreLogo?: string | undefined;
  Notes?: string | undefined;
  IsSubmitReturn?: boolean;
  CreatedByName?: string | undefined;
  ReturnLineItems?: ReturnLineItemModel[] | undefined;
  BarcodeImage?: string | undefined;
  IsAdminRequest?: boolean;
  OverDueAmount?: number | undefined;
  IsRefundProcess?: boolean;
  ReturnShippingDiscount?: number;
  ReturnCharges?: number;
  readonly TotalReturnAmount?: number;
  IsCalculateTaxAfterDiscount?: boolean;
  IsPricesInclusiveOfTaxes?: boolean;
  VoucherAmount?: number | undefined;
  HasError?: boolean;
  ReturnImportDuty?: number;
  PhoneNumber?: string | undefined;
}

export interface RoleAndPermissionDetailsResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** Gets or sets the ID of the user. */
  UserId?: number;
  /** Gets or sets the object associated with the permission. */
  Object?: string | undefined;
  /** Gets or sets the code of the permission. */
  PermissionCode?: string | undefined;
  /** Gets or sets the name of the permission. */
  PermissionName?: string | undefined;
  /** Gets or sets a value indicating whether the permission is allowed. */
  IsAllowed?: boolean;
}

/** Represents the response model for a list of roles and permissions. */
export interface RoleAndPermissionListResponseModel {
  PaginationDetail?: ZnodePaginationDetail;
  /** Gets or sets the list of role and permission details. */
  RoleAndPermissionList?: RoleAndPermissionDetailsResponseModel[] | undefined;
}

/** Represents a response model for a selected value associated with an attribute. */
export interface SelectedValueResponseModel {
  /** the value of the selected value. */
  Value?: string | undefined;
  /** the code of the selected value. */
  Code?: string | undefined;
}

/** Represents details of a shipment associated with an order. */
export interface ShipmentDetailsResponseModel {
  /** Unique identifier of the shipment within the order. */
  OrderShipmentId?: string;
  /** Identifier of the address associated with the shipment. */
  OrderAddressId?: string;
  /** ID representing the shipping method used for the shipment. */
  ShippingId?: number;
  /** Date when the shipment was dispatched. */
  ShipDate?: string | undefined;
  /** Indicates whether the entire order has been shipped completely. */
  IsShipCompletely?: boolean;
  /** Code representing any shipping constraints or special requirements. */
  ShippingConstraintCode?: string | undefined;
  /** Phone number associated with the shipment. */
  PhoneNumber?: string | undefined;
  /** Identifier of the address associated with the shipment. */
  AddressId?: number;
  /** Name of the shipping method used for the shipment. */
  ShippingMethodName?: string | undefined;
  /** Gets or sets the in hand date of the order.. */
  InHandDate?: Date | undefined;
}

/** Represents the response model for a shipment, containing details about the shipment status and identifiers. */
export interface ShipmentResponseModel {
  /** The classification or category number associated with the shipment. */
  ClassNumber?: string | undefined;
  /** The unique identifier for the order shipment. */
  OrderShipmentId?: string;
  /** Indicates whether the shipment operation was successful. */
  IsSuccess?: boolean;
}

/** Represents a response model for shipping estimates. */
export interface ShippingEstimatesResponseModel {
  /** Gets or sets the description of the shipping estimate. */
  Description?: string | undefined;
  /** Gets or sets the destination country code. */
  DestinationCountryCode?: string | undefined;
  /** Gets or sets the display order of the shipping estimate. */
  DisplayOrder?: number;
  /** Gets or sets the estimated date of shipping. */
  EstimateDate?: string | undefined;
  /** Gets or sets the handling charge for shipping. */
  HandlingCharge?: number;
  /** Gets or sets the basis on which handling charge is calculated. */
  HandlingChargeBasedOn?: string | undefined;
  /** Gets or sets the list of imported SKUs. */
  ImportedSkus?: string | undefined;
  /** Gets or sets whether the shipping estimate is active. */
  IsActive?: boolean;
  /** Gets or sets whether the shipping is expedited. */
  IsExpedited?: boolean;
  /** Gets or sets whether the handling charge is in percent. */
  IsHandlingChargeInPercent?: boolean;
  /** Gets or sets the shipping code. */
  ShippingCode?: string | undefined;
  /** Gets or sets the shipping and handling charge. */
  ShippingHandlingCharge?: number;
  /** Gets or sets the shipping discount. */
  ShippingDiscount?: number;
  /** Gets or sets the unique identifier for the shipping estimate. */
  ShippingId?: number;
  /** Gets or sets the name of the shipping method. */
  ShippingName?: string | undefined;
  /** Gets or sets the shipping rate without any discounts applied. */
  ShippingRateWithoutDiscount?: number;
  /** Gets or sets the identifier for the shipping service code. */
  ShippingServiceCodeId?: number;
  /** Gets or sets the identifier for the shipping type. */
  ShippingTypeId?: number;
  /** Gets or sets the name of the shipping type. */
  ShippingTypeName?: string | undefined;
  /** Gets or sets the ZIP code for the shipping estimate. */
  ZipCode?: string | undefined;
  /** Gets or sets the state code for the shipping estimate. */
  StateCode?: string | undefined;
  /** Gets or sets the estimated delivery timeframe for shipping. */
  DeliveryTimeframe?: string | undefined;
  /** Gets or sets the county FIPS code for the shipping estimate. */
  CountyFIPS?: string | undefined;
  /** Gets or sets the class name of the shipping estimate. */
  ClassName?: string | undefined;
  /** Gets or sets the ShippingRate for the shipping estimate. */
  ShippingRate?: number | undefined;
}

/** Represents the response model containing details about a status button, specifically related to order status. */
export interface StatusButtonDetailsResponseModel {
  OrderStatusButtonModel?: StatusButtonResultResponseModel;
}

export interface StatusButtonDetailsResultResponseModel {
  /** Gets or sets the required permission for using the button. */
  RequiredPermission?: string | undefined;
  /** Gets or sets the type of permission required for using the button. */
  TypeOfPermission?: string | undefined;
  /** Gets or sets the permission code required for using the button. */
  PermissionCode?: string | undefined;
}

/** Represents the response for a list of status buttons. */
export interface StatusButtonListResponseModel {
  PaginationDetail?: ZnodePaginationDetail;
  /** Gets or sets the list of status button response models. */
  StatusButtonList?: StatusButtonResultResponseModel[] | undefined;
}

/** Represents the response for a status button operation. */
export interface StatusButtonResultDetailsResponseModel {
  /** The list of models representing status buttons. */
  OrderStatusButtonModel?: StatusButtonDetailsResultResponseModel[] | undefined;
  /** The list of models representing order status for management. */
  manageOrdeStatusModel?: StatusDetailsResultResponseModel[] | undefined;
  /** The list of status options. */
  statusList?: SelectListItem[] | undefined;
  /** The list of permission options. */
  PermissionList?: SelectListItem[] | undefined;
}

export interface StatusButtonResultResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** Gets or sets the ID of the CP order status button. */
  CPOrderStatusButtonId?: number;
  /** Gets or sets the ID of the OMS Order State. */
  OmsOrderStateId?: number;
  /** Gets or sets the Button Status ID of the Button State. */
  ButtonStatusId?: number | undefined;
  /** Gets or sets the text displayed on the button. */
  ButtonText?: string | undefined;
  /** Gets or sets the display order of the button. */
  DisplayOrder?: number | undefined;
  /** Gets or sets the required permission for using the button. */
  RequiredPermission?: string | undefined;
  /** Gets or sets the type of permission required for using the button. */
  TypeOfPermission?: string | undefined;
  /** Gets or sets the status of the button. */
  Status?: string | undefined;
  /** The list of status options. */
  OrderStatusButtonModel?: StatusButtonDetailsResultResponseModel[] | undefined;
  ManageOrdeStatusModel?: StatusDetailsResultResponseModel[] | undefined;
  statusList?: SelectListItem[] | undefined;
  /** The list of permission options. */
  PermissionList?: SelectListItem[] | undefined;
}

/** Represents a response containing a list of order class details. */
export interface StatusClassListResponseModel {
  ErrorDetail?: ZnodeErrorDetail;
  PaginationDetail?: ZnodePaginationDetail;
  /** Gets or sets the list of order class details included in the response. */
  OrderClassList?: StatusClassResponseModel[] | undefined;
}

export interface StatusClassResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  CPOrderClassId?: number;
  /** classCode representing the class. */
  ClassCode?: string | undefined;
  /** Name of the class. */
  ClassName?: string | undefined;
  /** Next available number for the class. */
  NextNumber?: number;
  /** Format for displaying the  class number. */
  NumberFormat?: string | undefined;
  /** Length of the  class number (number of digits). */
  DigitLength?: string | undefined;
}

/** Represents the response model containing details about the status result in the Znode OMS. */
export interface StatusDetailsResponseModel {
  ZnodeOmsStatusModel?: StatusResultDetailsResponseModel;
}

/** Represents the response model containing details about an OMS order state. */
export interface StatusDetailsResultResponseModel {
  /** Gets or sets the ID of the OMS order state. */
  OmsOrderStateId?: number;
  /** Gets or sets the name of the order state. */
  OrderStateName?: string | undefined;
}

export interface StatusListResponseModel {
  PaginationDetail?: ZnodePaginationDetail;
  /** Represents a list of Status details response models. */
  StatusList?: StatusResultDetailsResponseModel[] | undefined;
}

/** Represents the response model for a status, encapsulating the result details. */
export interface StatusResponseModel {
  StatusModel?: StatusResultResponseModel;
}

export interface StatusResultDetailsResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** Gets or sets the ID of the OMS order state. */
  OmsOrderStateId?: number;
  /** Gets or sets the name of the order state. */
  OrderStateName?: string | undefined;
  /** Gets or sets the status code of the order state. */
  StatusCode?: string | undefined;
  /** Gets or sets a value indicating whether the order state is shown to the customer. */
  IsShowToCustomer?: boolean;
  /** Gets or sets a value indicating whether the order state is an account status. */
  IsAccountStatus?: boolean;
  /** Gets or sets the display order of the order state. */
  DisplayOrder?: number;
  /** Gets or sets the description of the order state. */
  Description?: string | undefined;
  /** Gets or sets a value indicating whether the order state is editable. */
  IsEdit?: boolean;
  /** Gets or sets a value indicating whether an email is sent for this order state. */
  IsSendEmail?: boolean;
  /** Gets or sets a value indicating whether the order state is for orders. */
  IsOrderState?: boolean;
  /** Gets or sets a value indicating whether the order state is for order line items. */
  IsOrderLineItemState?: boolean;
  /** Gets or sets a value indicating whether the order state is for quotes. */
  IsQuoteState?: boolean;
  /** Gets or sets the background color of the order state in the control panel (CP). */
  CPBackColor?: string | undefined;
  /** Gets or sets the text color of the order state in the control panel (CP). */
  CPTextColor?: string | undefined;
  /** Gets or sets a value indicating whether completeness is required for the order state in the control panel (CP). */
  IsCPRequireCompleteness?: boolean;
  /** Gets or sets a value indicating whether the order state is considered as "working" if not shipped in the control panel (CP). */
  IsCPWorkingNotShipped?: boolean;
  /** Gets or sets a value indicating whether the timeline is displayed only if the order state is active in the control panel (CP). */
  IsCPTimeLineOnlyIfActive?: boolean;
  /** Gets or sets a value indicating whether fulfilled data is triggered for the order state in the control panel (CP). */
  IsCPTriggerFulfilledData?: boolean;
  /** Gets or sets a value indicating whether the order state is system-defined. */
  IsSystemDefined?: boolean;
}

export interface StatusResultResponseModel {
  /** The unique identifier associated with the status result. */
  Id?: string;
  /** the status value indicating the result. It can be a boolean value, representing success or failure, or null if the status is undetermined. */
  Status?: boolean | undefined;
}

/** Represents the response model for updating billing details, including status and classification information. */
export interface UpdateBillingDetailsResponseModel {
  /** The classification number or code associated with the billing update. */
  ClassNumber?: string | undefined;
  /** Indicates whether the billing update operation was successful. */
  IsSuccess?: boolean;
}

/** Defines the response model for an item quantity update operation. */
export interface UpdateBulkItemQuantityResponseModel {
  /** The unique identifier assigned to the response. */
  ClassNumber?: string | undefined;
  /** Indicates the result of the update operation. Note: A boolean type might be more appropriate here. */
  IsSuccess?: boolean;
  /** List of contains validation details related to the SKU. */
  ValidationDetails?: ValidationDetailsModel[] | undefined;
}

/** Represents the details of a class button after an update, including identifiers, display properties, state transitions, and status conditions. */
export interface UpdateClassButtonDetailsResponseModel {
  /** The unique identifier for the updated class button. */
  CPOrderClassButtonId?: number;
  /** The updated text displayed on the button. */
  ButtonText?: string | undefined;
  /** The updated identifier for the OMS order state when the button is clicked. */
  WhenOmsOrderStateId?: number;
  /** The unique identifier for the associated order class. */
  CPOrderClassId?: number;
  /** The updated identifier for the OMS order state to which the order transitions after clicking the button. */
  SetToOmsOrderStateId?: number;
  /** The updated order in which the button is displayed. */
  DisplayOrder?: number;
  /** The updated name of the order state. */
  OrderStateName?: string | undefined;
  /** The updated optional target class identifier when transitioning to another class. */
  ToClassId?: number | undefined;
  /** The updated name of the target class when transitioning to another class. */
  ToClass?: string | undefined;
  /** The updated status condition for the button action. */
  WhenStatusIs?: string | undefined;
  /** The updated status to be set after the button action. */
  SetStatusTo?: string | undefined;
}

/** Represents a response model for updating a class button, extending the base update response. */
export interface UpdateClassButtonResponseModel {
  ModifiedBy?: number;
  ModifiedDate?: Date;
  UpdateClassButtonUpdateResponseModel?: UpdateClassButtonDetailsResponseModel;
}

export interface UpdateClassDetailsReponseModel {
  /** Unique identifier for the order class. */
  CPOrderClassId?: number;
  /** Code representing the order class. */
  ClassCode?: string | undefined;
  /** Name of the order class. */
  ClassName?: string | undefined;
  /** Next available number for the order class. */
  NextNumber?: number;
  /** Format for displaying the order class number. */
  NumberFormat?: string | undefined;
  /** Length of the order class number (number of digits). */
  DigitLength?: string | undefined;
}

/** Represents the response model for updating class details. */
export interface UpdateClassDetailsResponseModel {
  /** Number associated with the class. */
  ClassNumber?: string | undefined;
  /** Indicates whether the update operation was successful. */
  IsSuccess?: boolean;
}

/** Represents a response model for updating a class, extending the BaseUpdateResponse class. */
export interface UpdateClassResponseModel {
  ModifiedBy?: number;
  ModifiedDate?: Date;
  updateClassDetailsReponseModel?: UpdateClassDetailsReponseModel;
}

/** Represents the response returned after attempting to update the status of a class. */
export interface UpdateClassStatusResponseModel {
  /** The identifier or number of the class that was updated. */
  ClassNumber?: string | undefined;
  /** Indicates whether the status update operation was successful. */
  IsSuccess?: boolean;
  /** Contains a message describing any errors that occurred during the status update operation. */
  ErrorMessage?: string | undefined;
}

/** Represents the update entity  response model. */
export interface UpdateEntityResponseModel {
  /** The unique identifier of the class. */
  ClassNumber?: string | undefined;
  /** Indicates whether the update was successful. */
  IsSuccess?: boolean;
}

/** Defines the response model for an item quantity update operation. */
export interface UpdateItemQuantityResponseModel {
  /** The unique identifier assigned to the response. */
  ClassNumber?: string | undefined;
  /** The unique identifier of the item whose quantity has been modified. */
  ItemId?: string;
  /** Indicates the result of the update operation. Note: A boolean type might be more appropriate here. */
  IsSuccess?: boolean;
  /** The updated quantity of the item after the change has been applied. */
  Quantity?: number;
  /** List of contains validation details related to the SKU. */
  ValidationDetails?: ValidationDetailsModel[] | undefined;
  /** Contains a message describing any errors that occurred during the status update operation. */
  ErrorMessage?: string | undefined;
}

/** Line item status response model */
export interface UpdateLineItemStatusResponseModel {
  /** Represents class number. */
  ClassNumber?: string | undefined;
  /** Indicates the result of the update operation. Note: A boolean type might be more appropriate here. */
  IsSuccess?: boolean;
  /** Represents error message. */
  ErrorMessage?: string | undefined;
}

export interface UpdateOrderFlagResponseModel {
  ModifiedBy?: number;
  ModifiedDate?: Date;
  CPOrderFlagId?: number;
  /** Gets or sets the flag code. */
  FlagCode?: string | undefined;
  /** Gets or sets the name for unchecked status. */
  NameUnchecked?: string | undefined;
  /** Gets or sets the name for checked status. */
  NameChecked?: string | undefined;
  /** Gets or sets a value indicating whether the flag can be overridden. */
  IsCanOveride?: boolean;
  /** Gets or sets the name for overridden status. */
  NameOverridden?: string | undefined;
  /** Gets or sets the display order. */
  DisplayOrder?: number | undefined;
}

/** Represents a response model containing a list of status result response models for order payments. */
export interface UpdateOrderPaymentResponseModel {
  ModifiedBy?: number;
  ModifiedDate?: Date;
  OrderPaymentModel?: OrderPaymentResponseModel;
  /** The list of status result response models associated with the order payment. */
  StatusResultResponseModel?: StatusResultResponseModel[] | undefined;
}

/** Represents the update response model details of an order template. */
export interface UpdateOrderTemplateResponseModel {
  /** The unique identifier of the created order template. */
  OrderTemplateNumber?: string | undefined;
  /** Indicates whether the creation of the order template was successful. */
  IsSuccess?: boolean;
}

/** Represents the response for updating an order type, derived from the base update response. */
export interface UpdateOrderTypeResponseModel {
  ModifiedBy?: number;
  ModifiedDate?: Date;
  OrderTypeResponseModel?: OrderTypeResponseModel;
}

export interface UpdateStatusButtonResponseModel {
  ModifiedBy?: number;
  ModifiedDate?: Date;
  CPOrderStatusButtonId?: number;
  OmsOrderStateId?: number;
  /** Gets or sets the text displayed on the status button. */
  ButtonText?: string | undefined;
  /** Gets or sets the display order of the status button. */
  DisplayOrder?: number | undefined;
  /** Gets or sets the status of the status button. */
  Status?: string | undefined;
  /** Gets or sets the required permission for the status button. */
  RequiredPermission?: string | undefined;
}

export interface UpdateStatusResponseModel {
  ModifiedBy?: number;
  ModifiedDate?: Date;
  ZnodeOmsStatusModel?: number;
  /** Gets or sets the name of the order state. */
  OrderStateName?: string | undefined;
  /** Gets or sets the status code of the order state. */
  StatusCode?: string | undefined;
  /** Gets or sets a value indicating whether the order state is shown to the customer. */
  IsShowToCustomer?: boolean;
  /** Gets or sets the display order of the order state. */
  DisplayOrder?: number;
  /** Gets or sets a value indicating whether the order state is editable. */
  IsEdit?: boolean;
  /** Gets or sets a value indicating whether an email is sent for this order state. */
  IsSendEmail?: boolean;
  /** Gets or sets a value indicating whether the order state is for orders. */
  IsOrderState?: boolean;
  /** Gets or sets a value indicating whether the order state is for order line items. */
  IsOrderLineItemState?: boolean;
  /** Gets or sets the background color of the order state in the control panel (CP). */
  CPBackColor?: string | undefined;
  /** Gets or sets the text color of the order state in the control panel (CP). */
  CPTextColor?: string | undefined;
  /** Gets or sets a value indicating whether completeness is required for the order state in the control panel (CP). */
  IsCPRequireCompleteness?: boolean;
  /** Gets or sets a value indicating whether the order state is considered as "working" if not shipped in the control panel (CP). */
  IsCPWorkingNotShipped?: boolean;
  /** Gets or sets a value indicating whether the timeline is displayed only if the order state is active in the control panel (CP). */
  IsCPTimeLineOnlyIfActive?: boolean;
  /** Gets or sets a value of Display (CP). */
  WillDisplayAs?: string | undefined;
  /** Gets or sets a value indicating whether fulfilled data is triggered for the order state in the control panel (CP). */
  IsCPTriggerFulfilledData?: boolean;
}

export interface UpdateUserGroupResponseModel {
  ModifiedBy?: number;
  ModifiedDate?: Date;
  CPUserGroupId?: number;
  /** Gets or sets the code of the user group. */
  GroupCode?: string | undefined;
  /** Gets or sets the name of the user group. */
  GroupName?: string | undefined;
}

/** Represents the request model for updating a user in a group. */
export interface UpdateUserInGroupResponseModel {
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** Gets or sets the identifier of the user group. */
  CPUserGroupId?: number;
  /** Gets or sets the identifier of the user in the group. */
  CPUsersInGroupId?: number;
  /** Gets or sets the identifier of the user. */
  UserId?: number;
  /** Gets or sets the priority of the user in the group. */
  Priority?: number;
}

export interface UserGroupDetailsForFlagResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** Commerce Portal user group ID. */
  CPUserGroupId?: number;
  /** The code associated with the user group. */
  GroupCode?: string | undefined;
  /** The name of the user group. */
  GroupName?: string | undefined;
}

export interface UserGroupDetailsForUsersResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** Commerce Portal user group ID. */
  CPUserGroupId?: number;
  /** Number of Commerce Portal users in the group. */
  CPUsersInGroupId?: number;
  /** User ID. */
  UserId?: number;
  /** The code associated with the user group. */
  GroupCode?: string | undefined;
  /** The name of the user group. */
  GroupName?: string | undefined;
  /** The priority of the user group. */
  Priority?: number;
}

/** Represents the response containing a list of user groups. */
export interface UserGroupDetailsListResponseModel {
  PaginationDetail?: ZnodePaginationDetail;
  /** Gets or sets the list of user groups. */
  UserGroupList?: UserGroupResponseModel[] | undefined;
}

export interface UserGroupListForFlagResponseModel {
  PaginationDetail?: ZnodePaginationDetail;
  /** Gets or sets the list of user groups. */
  UserGroupList?: UserGroupDetailsForFlagResponseModel[] | undefined;
}

export interface UserGroupListForUsersResponseModel {
  PaginationDetail?: ZnodePaginationDetail;
  /** Gets or sets the list of user groups. */
  UserGroupList?: UserGroupDetailsForUsersResponseModel[] | undefined;
}

/** Represents a response model for a list of user groups. */
export interface UserGroupListResponseModel {
  PaginationDetail?: ZnodePaginationDetail;
  /** List of user group response models. */
  UserGroupResponseModel?: UserGroupResponseModel[] | undefined;
}

/** Represents a response model for a Commerce Portal user group. */
export interface UserGroupResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** Commerce Portal user group ID. */
  CPUserGroupId?: number;
  /** The code associated with the user group. */
  GroupCode?: string | undefined;
  /** The name of the user group. */
  GroupName?: string | undefined;
}

/** Represents the response model containing a list of user profiles with their associated roles for the Control Panel (CP). */
export interface UserProfileCpRoleListResponseModel {
  /** Gets or sets the list of user profiles along with their roles in the Control Panel. */
  CpUsersRole?: UserProfileResponseModel[] | undefined;
}

/** Represents a user profile response model. */
export interface UserProfileResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** Gets or sets the user ID. */
  UserId?: number;
  /** Gets or sets the user name. */
  UserName?: string | undefined;
  /** Gets or sets the full name of the user. */
  FullName?: string | undefined;
}

/** Represents a model containing cart validation details. */
export interface ValidationResponseModel {
  /** The list of cart validation details. */
  ValidationDetails?: ValidationsResponseModel[] | undefined;
}

export interface ValidationsResponseModel {
  /** The message code associated with the validation message. */
  ErrorCode?: number;
  /** The validation message. */
  ErrorMessage?: string | undefined;
  /** The priority of the validation message. */
  Priority?: number;
  /** The SKU (Stock Keeping Unit) associated with the validation message. */
  SKU?: string | undefined;
}

export interface OrderResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  ActionMode?: string | undefined;
  Custom1?: string | undefined;
  Custom2?: string | undefined;
  Custom3?: string | undefined;
  Custom4?: string | undefined;
  Custom5?: string | undefined;
  ErrorCode?: number | undefined;
  ErrorMessage?: string | undefined;
  HasError?: boolean;
  CustomModelState?: { [key: string]: string } | undefined;
  ErrorDetailList?: { [key: string]: string } | undefined;
  Order?: OrderDetailsModel;
}

/** Represents a request model for calculating returns, including order and user details as well as line item calculations. */
export interface ReturnCalculateRequestModel {
  /** Gets or sets the order ID. */
  OrderId?: string;
  /** Gets or sets the user ID. */
  UserId?: number;
  /** Gets or sets the list of return calculate line item requests. */
  ReturnCalculateLineItem?: ReturnCalculateLineItemRequestModel[] | undefined;
}

export interface ShippingAddressModel {
  AddressId?: number | undefined;
  PhoneNumber?: string | undefined;
}

export interface SkuStatusDetailsModel {
  Sku?: string | undefined;
  Status?: boolean | undefined;
}

/** Represents a model containing details of cart validation. */
export interface ValidationDetailsModel {
  /** The message code associated with the validation message. */
  ErrorCode?: number;
  /** The validation message. */
  ErrorMessage?: string | undefined;
  /** The priority of the validation message. */
  Priority?: number;
  /** The SKU (Stock Keeping Unit) associated with the validation message. */
  Sku?: string | undefined;
}

export interface VoucherDetailsEngineModel {
  DiscountType?: string | undefined;
  VoucherMessage?: string | undefined;
  VoucherNumber?: string | undefined;
  IsVoucherValid?: boolean;
  ExpirationDate?: Date | undefined;
  IsVoucherApplied?: boolean;
  VoucherName?: string | undefined;
  VoucherAmountApplied?: number;
}

export interface FilterTuple {
  Item1?: string | undefined;
  Item2?: string | undefined;
  Item3?: string | undefined;
  FilterName?: string | undefined;
  FilterOperator?: string | undefined;
  FilterValue?: string | undefined;
}

export interface ZnodeErrorDetail {
  ErrorCode?: number | undefined;
  ErrorMessage?: string | undefined;
  HasError?: boolean;
  StatusCode?: HttpStatusCode;
}

export interface ZnodePaginationDetail {
  PageIndex?: number | undefined;
  PageSize?: number | undefined;
  TotalPages?: number | undefined;
  TotalResults?: number | undefined;
}

export interface CopiedClassResponseModel {
  /** The specific number or identifier associated with the copied class. */
  CopiedClassNumber?: string | undefined;
  /** Indicates whether the copying operation was completed successfully. */
  IsSuccess?: boolean;
}

/** Represents the response model for a list of account orders. */
export interface AccountOrdersListResponseModel {
  /** The list of orders. */
  Orders?: OrderResponseModel[] | undefined;
}

/** Represents the response model for a list of orders, including pagination details. */
export interface OrderListModelResponse {
  PaginationDetail?: ZnodePaginationDetail;
  OrderList?: AccountOrdersListResponseModel;
}

/** Represents the response model containing details about an order/quote class number. */
export interface EmailSendResponseModel {
    /** Stores the unique identifier for the Email send. */
    ClassNumber?: string | undefined;
    /** Indicates the status of the Email send. */
    IsSendEmail?: boolean;
}

/** Represents a response model for a single class button, containing its details. */
export interface GenerateFinalizeNumberResponseModel {
    /** Number representing the class associated with the cart. */
    FinalClassNumber?: string | undefined;
    /** Get or set ClassType */
    ClassType?: string | undefined;
    /** Indicates whether the status update operation was successful. */
    Status?: boolean;
}