//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
/* tslint:disable */
/* eslint-disable */
// ReSharper disable InconsistentNaming

/** Represents a model for global attribute groups, containing details about the group such as its ID, code, name, display order, and associated entity information. */
export interface GlobalAttributeGroupsModel {
  /** The unique identifier for the global attribute group. */
  GlobalAttributeGroupId?: number;
  /** The code representing the global attribute group. */
  GroupCode?: string | undefined;
  /** The name of the attribute group. */
  AttributeGroupName?: string | undefined;
  /** The display order of the attribute group. Nullable. */
  DisplayOrder?: number | undefined;
  /** The unique identifier of the global entity associated with this group. */
  GlobalEntityId?: number;
  /** The name of the entity associated with the global attribute group. */
  EntityName?: string | undefined;
}

export interface SelectListGroup {
  Disabled?: boolean;
  Name?: string | undefined;
}

export interface SelectListItem {
  Disabled?: boolean;
  Group?: SelectListGroup;
  Selected?: boolean;
  Text?: string | undefined;
  Value?: string | undefined;
}

export enum HttpStatusCode {
  _100 = 100,
  _101 = 101,
  _102 = 102,
  _103 = 103,
  _200 = 200,
  _201 = 201,
  _202 = 202,
  _203 = 203,
  _204 = 204,
  _205 = 205,
  _206 = 206,
  _207 = 207,
  _208 = 208,
  _226 = 226,
  _300 = 300,
  _301 = 301,
  _302 = 302,
  _303 = 303,
  _304 = 304,
  _305 = 305,
  _306 = 306,
  _307 = 307,
  _308 = 308,
  _400 = 400,
  _401 = 401,
  _402 = 402,
  _403 = 403,
  _404 = 404,
  _405 = 405,
  _406 = 406,
  _407 = 407,
  _408 = 408,
  _409 = 409,
  _410 = 410,
  _411 = 411,
  _412 = 412,
  _413 = 413,
  _414 = 414,
  _415 = 415,
  _416 = 416,
  _417 = 417,
  _421 = 421,
  _422 = 422,
  _423 = 423,
  _424 = 424,
  _426 = 426,
  _428 = 428,
  _429 = 429,
  _431 = 431,
  _451 = 451,
  _500 = 500,
  _501 = 501,
  _502 = 502,
  _503 = 503,
  _504 = 504,
  _505 = 505,
  _506 = 506,
  _507 = 507,
  _508 = 508,
  _510 = 510,
  _511 = 511,
}

export interface JSType_Object {}

export interface ImportRequestModel {
  ImportType: string;
  ImportData: string;
  LocaleCode?: string | undefined;
  Properties?: { [key: string]: string } | undefined;
}

export interface ProfileModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  ActionMode?: string | undefined;
  Custom1?: string | undefined;
  Custom2?: string | undefined;
  Custom3?: string | undefined;
  Custom4?: string | undefined;
  Custom5?: string | undefined;
  AccountId?: number;
  AccountProfileId?: number;
  ProfileId?: number;
  Name?: string | undefined;
  UserId?: number;
  ProfileName: string;
  IsAssociated?: number;
  Weighting?: number | undefined;
  DefaultExternalAccountNo?: string | undefined;
  ShowOnPartnerSignup?: boolean;
  TaxExempt?: boolean;
  IsDefault?: boolean | undefined;
  AccountProfileIds?: string | undefined;
  ProfileIds?: string | undefined;
  ParentProfileId?: number | undefined;
  PimCatalogId?: number | undefined;
  PublishCatalogId?: number | undefined;
}

export interface ProfileListResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  ActionMode?: string | undefined;
  Custom1?: string | undefined;
  Custom2?: string | undefined;
  Custom3?: string | undefined;
  Custom4?: string | undefined;
  Custom5?: string | undefined;
  ErrorCode?: number | undefined;
  ErrorMessage?: string | undefined;
  HasError?: boolean;
  CustomModelState?: { [key: string]: string } | undefined;
  ErrorDetailList?: { [key: string]: string } | undefined;
  PageIndex?: number | undefined;
  PageSize?: number | undefined;
  TotalPages?: number | undefined;
  TotalResults?: number | undefined;
  Profiles?: ProfileModel[] | undefined;
  HasParentAccounts?: boolean;
  CustomerName?: string | undefined;
  AccountId?: number;
}

/** Represents the response model for attribute select values. */
export interface AttributeSelectValueResponse {
  /** Gets or sets the code of the attribute select value. */
  Code?: string | undefined;
}

export interface AttributesSelectValueResponse {
  /** The value of the attribute selection. */
  Value?: string | undefined;
  /** The code associated with the attribute selection. */
  Code?: string | undefined;
  /** The display order of the attribute selection. */
  DisplayOrder?: number;
  /** The swatch text for the attribute selection. */
  SwatchText?: string | undefined;
}

export interface AttributesSelectValuesResponseModel {
  /** The identifier to get the value. */
  Value?: string | undefined;
  /** The identifier to get the code. */
  Code?: string | undefined;
  /** The identifer for display order. */
  DisplayOrder?: number;
  /** The identifier for swatch text. */
  SwatchText?: string | undefined;
  /** The identifier for path. */
  Path?: string | undefined;
  /** The identider for the varient diplay order. */
  VariantDisplayOrder?: number;
  /** The identider for the varient image path. */
  VariantImagePath?: string | undefined;
  /** The identifier for the sku of varient. */
  VariantSKU?: string | undefined;
}

export interface BannersModel {
  /** The title of the banner. */
  Title?: string | undefined;
  /** The alternate text for the banner image. */
  ImageAlternateText?: string | undefined;
  /** The text alignment for the banner content. */
  TextAlignment?: string | undefined;
  /** The sequence order of the banner. Nullable. */
  BannerSequence?: number | undefined;
  /** The description of the banner. */
  Description?: string | undefined;
  /** The path to the media file associated with the banner. */
  MediaPath?: string | undefined;
  /** The URL for the button link. */
  ButtonLink?: string | undefined;
}

export interface BlogAndNewsResponse {
  /** Represents the unique identifier for a blog news entry. */
  BlogNewsId?: number;
  /** Represents the identifier of the portal associated with the blog news entry. */
  PortalId?: number | undefined;
  /** Represents the identifier of the media associated with the blog news entry. */
  MediaId?: number | undefined;
  /** Represents the identifier of the content pages associated with the blog news entry. */
  CMSContentPagesId?: number | undefined;
  /** Represents the type of the blog news entry (e.g., news, article). */
  BlogNewsType?: string | undefined;
  /** Represents the activation status of the blog news entry. */
  IsBlogNewsActive?: boolean | undefined;
  /** Represents whether guest comments are allowed for the blog news entry. */
  IsAllowGuestComment?: boolean | undefined;
  /** Represents the date when the blog news entry becomes active. */
  ActivationDate?: Date | undefined;
  /** Represents the date when the blog news entry expires. */
  ExpirationDate?: Date | undefined;
  /** Represents a unique code associated with the blog news entry. */
  BlogNewsCode?: string | undefined;
  /** Represents the identifier for the publish state of the blog news entry. */
  PublishStateId?: number;
}

export interface BlogNewsCommentsListResponse {
  PaginationDetail?: ZnodePaginationDetail;
  BlogNewsCommentList?: BlogNewsCommentsResponse[] | undefined;
}

/** A request parameter object for blog and news operations. */
export interface BlogNewsParameterRequest {
  /** Blog News ID. */
  BlogNewsId: number;
  /** A boolean flag indicating a true or false condition. */
  IsTrueOrFalse?: boolean;
  /** The activity associated with a blog news request. */
  Activity?: string | undefined;
  /** The unique identifier for a specific locale. */
  LocaleId?: number;
  /** The unique identifier for a portal associated with the blog news. */
  PortalId?: number;
  /** The target publish state for the blog news (e.g., "Draft," "Published"). */
  TargetPublishState?: string | undefined;
  /** A boolean flag indicating whether to prioritize fetching data from the draft version first. */
  TakeFromDraftFirst?: boolean;
  /** A boolean flag indicating whether CMS preview is enabled. */
  IsCMSPreviewEnable?: boolean;
}

/** If there are no errors, API returns the Blogs News List for the requested ID with the requested parameters. If an error occurs during the execution then an appropriate error response will be returned. */
export interface BlogsNewsListResponse {
  /** The list of blog news responses. */
  BlogNewsList?: CreateBlogNewsResponse[] | undefined;
  PaginationDetail?: ZnodePaginationDetail;
}

export interface BrandsResponse {
  /** The brand identifier. */
  BrandId?: number;
  /** The brand code. */
  BrandCode?: string | undefined;
  /** The brand name. */
  BrandName?: string | undefined;
  /** The media identifier. */
  MediaId?: number | undefined;
  /** The website link. */
  WebsiteLink?: string | undefined;
  /** The display order of the brand. */
  DisplayOrder?: number | undefined;
  /** Gets or sets a value indicating whether the brand is active. */
  IsActive?: boolean;
  /** The media path. */
  MediaPath?: string | undefined;
  /** The brand detail locale identifier. */
  BrandDetailLocaleId?: number;
  /** The path to the large image. */
  ImageLargePath?: string | undefined;
  /** The path to the medium image. */
  ImageMediumPath?: string | undefined;
  /** The path to the thumbnail image. */
  ImageThumbNailPath?: string | undefined;
  /** The path to the small image. */
  ImageSmallPath?: string | undefined;
  /** The path to the small thumbnail image. */
  ImageSmallThumbnailPath?: string | undefined;
  /** The image name. */
  ImageName?: string | undefined;
}

export interface CMSKeywordsSearchResponse {
  /** This model will return the cms page from elastic search for search keyword. */
  CMSPages?: SearchCMSPageResponse[] | undefined;
  /** The identifier for the cmspages count. */
  TotalCMSPageCount?: number;
}

export interface CMSSliderBannerRequest {
  /** The unique cms slider Id. */
  CMSSliderId?: number;
  /** Name of the slider Banner. */
  Name: string;
  /** Flag indicate that slider is published or not. */
  IsPublished?: boolean | undefined;
  /** publish State Id Preview or production. */
  PublishStateId?: number;
}

/** Represents the response containing detailed information about a page. */
export interface PageDetailsResponse {
  /** Gets or sets the unique identifier code for the page. */
  PageCode?: string | undefined;
  /** Gets or sets the code that identifies the type of the page. */
  CMSPageTypeCode?: string | undefined;
  /** Gets or sets the name of the page. */
  PageName?: string | undefined;
  /** Gets or sets the code for the portal associated with the page. */
  PortalCode?: string | undefined;
  /** Gets or sets the code for the profile associated with the page. */
  ProfileCode?: string | undefined;
  /** Gets or sets the JSON data related to the page's content. */
  PageJson?: string | undefined;
}

/** If there are no errors, API returns the list of CMS widget product for the requested ID with the requested parameters. If an error occurs during the execution then an appropriate error response will be returned. */
export interface CMSWidgetProductCategoryListResponse {
  PaginationDetail?: ZnodePaginationDetail;
  /** The list of CMS widget product categories. */
  CMSWidgetProductCategories?: CMSWidgetProductCategoryResponse[] | undefined;
}

export interface CMSWidgetProductCategoryResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  CMSWidgetCategoryId?: number;
  PublishCategoryId?: number | undefined;
  CMSWidgetsId?: number;
  WidgetsKey?: string | undefined;
  CMSMappingId?: number;
  TypeOFMapping?: string | undefined;
  DisplayOrder?: number | undefined;
  CategoryCode?: string | undefined;
}

/** Represents a request model for creating a widget product within the CMS. */
export interface CMSWidgetProductRequest {
  CreatedBy?: number;
  /** identifier for the associated published product. */
  PublishProductId?: number | undefined;
  /** Identifier for the associated CMS widget. */
  CMSWidgetsId: number;
  /** Key used to identify the widget. */
  WidgetsKey?: string | undefined;
  /** Identifier for the CMS mapping. */
  CMSMappingId?: number;
  /** Type of mapping for the CMS widget product. */
  TypeOFMapping?: string | undefined;
  /** display order for the widget product. */
  DisplayOrder?: number | undefined;
  /** stock keeping unit (SKU) for the widget product. */
  SKU?: string | undefined;
}

export interface CMSWidgetSliderBannerRequest {
  CMSSliderId: number;
  /** The type of the widget slider banner. */
  Type?: string | undefined;
  /** The navigation information for the widget slider banner. */
  Navigation?: string | undefined;
  /** Gets or sets a value indicating whether the widget slider banner should auto-play. */
  AutoPlay?: boolean;
  /** The timeout duration for auto-play (if applicable). */
  AutoplayTimeOut?: number | undefined;
  /** Gets or sets a value indicating whether auto-play should pause on hover. */
  AutoplayHoverPause?: boolean;
  /** The transaction style for the widget slider banner. */
  TransactionStyle?: string | undefined;
  /** The unique key associated with the widget. */
  WidgetsKey?: string | undefined;
  /** The CMSWidgetsId is retrieved based on the specified WidgetCode. */
  WidgetCode: string;
  /** The identifier for the CMS mapping. */
  CMSMappingId?: number;
  /** The type of mapping for the widget slider banner. */
  TypeOFMapping?: string | undefined;
  /** Locale id. */
  LocaleId?: number;
  /** The publish flag for preview mode. */
  EnableCMSPreview?: boolean;
  /** The list of slider banners associated with the widget slider. */
  SliderBanners: CMSSliderBannerRequest[];
}

export interface ConfigurableAttributeResponseModel {
  /** The identifier for the attribute value. */
  AttributeValue?: string | undefined;
  /** The unique identifier for the image path. */
  ImagePath?: string | undefined;
  /** The identifier for the swatchtext. */
  SwatchText?: string | undefined;
  /** The identider for to identify it is disabled or not. */
  IsDisabled?: boolean;
  /** The model to get the selected attributes values in response. */
  SelectValues?: AttributesSelectValuesResponseModel[] | undefined;
  /** The sequence to get the dispplay order. */
  DisplayOrder?: number;
}

/** The request consists of the CMSWidgetsId, CMSMappingId and WidgetCode,  for creating the CMS Container Widget Configuration. and the values for 'widgetCode' include ContentContainer, ImageWidget, and VideoWidget. */
export interface ContainerWidgetConfigurationModel {
  /** The key associated with the widget. */
  WidgetKey: string;
  /** The identifier of the CMS mapping. */
  CMSMappingId?: number;
  /** The type of mapping for the widget. */
  TypeOFMapping: string;
  /** The identifier of the content container (nullable). */
  ContentContainerId?: number | undefined;
  /** The key associated with the container (nullable). */
  ContainerKey?: string | undefined;
  /** The CMSWidgetsId is retrieved based on the specified WidgetCode. */
  WidgetCode: string;
}

export interface ContentContainersDataResponse {
  /** The locale identifier for the content container. */
  LocaleId?: number;
  /** The unique identifier for the CMS content container. */
  CMSContentContainerId?: number;
  /** The identifier for the CMS container template. */
  CMSContainerTemplateId?: number;
  /** The name of the content container. */
  ContentContainerName?: string | undefined;
  /** The family identifier associated with the content container. */
  FamilyId?: number;
  /** The identifier for the CMS container profile variant. */
  CMSContainerProfileVariantId?: number;
  /** The list of global attribute values associated with the content container. */
  Attributes?: GlobalAttributesValuesResponse[] | undefined;
}

/** The request comprises of MediaId and LocaleId which are the mandatory inputs for creating the BlogNews. */
export interface CreateBlogNewsRequest {
  /** The identifier of the portal associated with the blog news entry. */
  PortalId: number;
  /** The locale identifier for the blog news entry, required for validation. */
  LocaleId?: number;
  /** The identifier of the media associated with the blog news entry, required for validation. */
  MediaId: number;
  /** The path of the media associated with the blog news entry. */
  MediaPath?: string | undefined;
  /** The identifier of the content pages associated with the blog news entry. */
  CMSContentPagesId?: number | undefined;
  /** The type of the blog news entry (e.g., news, article). */
  BlogNewsType?: string | undefined;
  /** The activation status of the blog news entry. */
  IsBlogNewsActive?: boolean | undefined;
  /** Represents whether guest comments are allowed for the blog news entry. */
  IsAllowGuestComment?: boolean | undefined;
  /** The date when the blog news entry becomes active. */
  ActivationDate?: Date | undefined;
  /** The date when the blog news entry expires. */
  ExpirationDate?: Date | undefined;
  /** Represents a unique code associated with the blog news entry. */
  BlogNewsCode: string;
  /** The identifier for the publish state of the blog news entry. */
  PublishStateId?: number;
}

/** The request consists of the LocaleId and CMSWidgetsId,  for creating the CMS Form Widget Configration. */
export interface CreateCMSFormWidgetConfigrationRequest {
  CreatedBy?: number;
  /** The identifier for the locale associated with the configuration. */
  LocaleId?: number;
  /** The CMSWidgetsId is retrieved based on the specified WidgetCode. */
  WidgetCode: string;
  /** The key associated with the widget. */
  WidgetsKey?: string | undefined;
  /** The identifier for the CMSMapping associated with the configuration. */
  CMSMappingId: number;
  /** The type of mapping for the configuration. */
  TypeOFMapping?: string | undefined;
  /** The identifier for the form builder associated with the configuration. */
  FormBuilderId: number;
  /** The title of the form. */
  FormTitle?: string | undefined;
  /** The text for the button in the form. */
  ButtonText?: string | undefined;
  /** Gets or sets a flag indicating whether a text message is included in the form. */
  IsTextMessage?: boolean | undefined;
  /** The text message content. */
  TextMessage?: string | undefined;
  /** The URL to redirect to after form submission. */
  RedirectURL?: string | undefined;
  /** A flag indicating whether to show a captcha in the form. */
  IsShowCaptcha?: boolean | undefined;
  /** A boolean flag indicating whether CMS preview is enabled. */
  EnableCMSPreview?: boolean;
}

/** The request comprises of CMSWidgetsId, CMSMappingId and MediaId which are the mandatory inputs for creating the Createing the CMS Media Widget Configuration. */
export interface CreateCMSMediaWidgetConfigurationRequest {
  /** The CMSWidgetsId is retrieved based on the specified WidgetCode. */
  WidgetCode: string;
  /** The optional key for widgets. */
  WidgetsKey?: string | undefined;
  /** The optional type of mapping. */
  TypeOFMapping?: string | undefined;
  /** The optional identifier of the CMS mapping. */
  CMSMappingId: number;
  /** The required identifier of the media. */
  MediaId: number;
}

/** The request comprises of LocaleId which are the mandatory inputs for creating the CMS Text Widget Configuration. */
export interface CreateCMSTextWidgetConfigurationRequest {
  CreatedBy?: number;
  /** The identifier for the locale associated with the configuration. */
  LocaleId?: number;
  /** The CMSWidgetsId is retrieved based on the specified WidgetCode. */
  WidgetCode: string;
  /** The key associated with the widget. */
  WidgetsKey?: string | undefined;
  /** The identifier for the CMSMapping associated with the configuration. */
  CMSMappingId?: number;
  /** The type of mapping for the configuration. */
  TypeOFMapping?: string | undefined;
  /** The text content of the widget configuration. */
  Text?: string | undefined;
  /** Gets or sets a value indicating whether CMS preview is enabled for the configuration. */
  EnableCMSPreview?: boolean;
}

/** The request comprises of Code which are the mandatory inputs for creating the Container Template. */
export interface CreateContainerTemplateRequest {
  /** The code of the container template. */
  Code: string;
  /** The name of the container template. */
  Name?: string | undefined;
  /** The file name associated with the container template. */
  FileName?: string | undefined;
  /** The media ID associated with the container template, if applicable. */
  MediaId?: number | undefined;
}

/** The request comprises of FamilyCode which are the mandatory inputs for creating the Content Container. */
export interface CreateContentContainerRequest {
  /** A string representing the name of the content container */
  Name?: string | undefined;
  /** A string representing a key associated with the content container. */
  ContainerKey?: string | undefined;
  /** An integer representing the family Code of the content container. */
  FamilyCode: string;
  /** An optional string representing tags associated with the content container. */
  Tags?: string | undefined;
  /** An optional byte representing the publish state ID of the content container. */
  PublishStateId?: number | undefined;
}

/** Represents a request to create the email configuration for a form widget. */
export interface CreateFormWidgetEmailConfigurationRequest {
  /** The notification email identifier for the form widget. */
  NotificationEmailId?: string | undefined;
  /** The notification email template identifier for the form widget. */
  NotificationEmailTemplateId?: number | undefined;
  /** The acknowledgement email template identifier for the form widget. */
  AcknowledgementEmailTemplateId?: number | undefined;
}

/** The request comprises of CMSWidgetsId, CMSMappingId and MediaId which are the mandatory inputs for creating the Link Widget Configuration. */
export interface CreateLinkWidgetConfigurationRequest {
  /** An identifier for the widget */
  CMSWidgetsId: number;
  /** A code associated with the widget */
  CMSWidgetCode: string;
  /** An identifier for the media associated with the widget */
  MediaId?: number | undefined;
  /** The title of the widget */
  Title?: string | undefined;
  /** The URL associated with the widget */
  Url?: string | undefined;
  /** The path to the media associated with the widget */
  MediaPath?: string | undefined;
  /** An identifier for the mapping of the widget */
  CMSMappingId?: number | undefined;
  /** A key associated with the widget */
  WidgetsKey?: string | undefined;
  /** The type of mapping associated with the widget */
  TypeOFMapping?: string | undefined;
  /** The display name of the widget */
  DisplayName?: string | undefined;
  /** The name of the widget */
  WidgetName?: string | undefined;
  /** A flag indicating whether the widget is active or not */
  IsActive?: boolean | undefined;
  /** An identifier for the locale associated with the widget */
  LocaleId: number;
  /** A code associated with the title of the widget */
  TitleCode?: string | undefined;
  /** An identifier for the locale configuration of the widget's title */
  CMSWidgetTitleConfigurationLocaleId?: number | undefined;
  /** The image associated with the widget */
  Image?: string | undefined;
  /** A flag indicating whether the link should open in a new tab or not */
  IsNewTab?: boolean | undefined;
  /** The order in which the widget should be displayed */
  DisplayOrder?: number | undefined;
  /** A flag indicating whether CMS preview is enabled for the widget */
  EnableCMSPreview?: boolean | undefined;
}

/** Represents a parameter model for creating widget branding information. */
export interface CreateParameterModelForWidgetBrand {
  /** The identifier of the brand. */
  BrandId: string;
  /** The identifier of the CMS widgets. */
  CMSWidgetsId: number;
  /** The key associated with the widgets. */
  WidgetsKey?: string | undefined;
  /** The identifier of the CMS mapping. */
  CMSMappingId: number;
  /** The type of mapping for the widgets. */
  TypeOFMapping?: string | undefined;
  /** The display order. */
  DisplayOrder?: number | undefined;
}

export interface CreateWidgetCategoryRequest {
  /** Unique Category identifier. */
  PublishCategoryId?: number | undefined;
  /** CMS widget id for category association. */
  CMSWidgetsId: number;
  /** Unique identifier for Widgets Key name. */
  WidgetsKey?: string | undefined;
  /** Type of mapping id for association(ex :- portalMapping). */
  CMSMappingId?: number;
  /** Type of mapping for association(ex :- portalMapping). */
  TypeOFMapping?: string | undefined;
  /** Display order number. */
  DisplayOrder?: number | undefined;
  /** Comma seprated category codes. */
  CategoryCodes?: string | undefined;
}

/** Represents the data response model for a customer review. */
export interface CustomerReviewDataResponseModel {
  CustomerReview?: CustomerReviewResponseModel;
}

/** Represents the response model for a list of customer reviews. */
export interface CustomerReviewListResponseModel {
  PaginationDetail?: ZnodePaginationDetail;
  /** The list of customer reviews. */
  CustomerReviewList?: CustomerReviewResponseModel[] | undefined;
}

/** Represents the details of a customer review. */
export interface CustomerReviewResponseModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** The unique identifier for the customer review. */
  CMSCustomerReviewId?: number;
  /** The identifier for the published product associated with the review. This value can be null. */
  PublishProductId?: number | undefined;
  /** The identifier for the user who made the review. This value can be null. */
  UserId?: number | undefined;
  /** The rating given by the reviewer. This value can be null. */
  Rating?: number | undefined;
  /** The name of the product being reviewed. */
  ProductName?: string | undefined;
  /** The headline of the review. */
  Headline: string;
  /** The comments provided in the review. */
  Comments: string;
  /** The name of the person who wrote the review. */
  UserName: string;
  /** The location of the person who wrote the review. */
  UserLocation: string;
  /** The current status of the review. */
  Status?: string | undefined;
  /** The SKU of the product associated with the review. */
  SKU?: string | undefined;
}

export interface CustomerReviewsResponse {
  /** The unique identifier for the customer review. */
  CMSCustomerReviewId?: number;
  /** The current status of the review. */
  Status?: string | undefined;
}

/** List response model for the EmbeddedWidget API */
export interface EmbeddedWidgetListResponse {
  /** List of the embedded widgets. */
  EmbeddedWidgetList?: EmbeddedWidgetResponse[] | undefined;
}

/** Request model for the EmbeddedWidget API */
export interface EmbeddedWidgetRequest {
  /** URL to be loaded in the widget area. */
  URL?: string | undefined;
  /** ID of the CMS widget. */
  CMSWidgetId?: number;
  /** ID of the CMS widget mapping. */
  CMSMappingId?: number;
  /** Code of the widget. */
  WidgetCode?: string | undefined;
  /** Key of the widget. */
  WidgetKey?: string | undefined;
  /** Type of CMS Mapping. */
  TypeOfMapping?: string | undefined;
  /** Widget Name */
  WidgetName?: string | undefined;
  /** Locale ID of the widget locale. */
  LocaleId?: number;
  /** Portal ID of the widget locale. */
  PortalId?: number;
}

/** Response model for the EmbeddedWidget API */
export interface EmbeddedWidgetResponse {
  /** URL to be loaded in the widget area. */
  URL?: string | undefined;
}

export interface FormBuilderAttributeGroupModelResponse {
  /** The unique identifier for the FormBuilder. */
  FormBuilderId?: number;
  /** The unique code identifier for the form. */
  FormCode?: string | undefined;
  /** The title of the form. */
  FormTitle?: string | undefined;
  /** The text displayed on the form's submission button. */
  ButtonText?: string | undefined;
  /** The message text associated with the form. */
  TextMessage?: string | undefined;
  /** The list of global attribute groups associated with the form. */
  Groups?: GlobalAttributeGroupsResponse[] | undefined;
  /** The list of global attribute values associated with the form. */
  Attributes?: GlobalAttributeValuesResponse[] | undefined;
}

/** Represents the response containing the FormBuilder attribute group. */
export interface FormBuilderAttributeGroupsResponse {
  FormBuilderAttributeGroup?: FormBuilderAttributeGroupModelResponse;
}

export interface FormSubmitAttributeRequest {
  /** The global attribute identifier. */
  GlobalAttributeId: number;
  /** The global attribute value identifier. This value is nullable. */
  GlobalAttributeValueId?: number | undefined;
  /** The global attribute default value identifier. This value is nullable. */
  GlobalAttributeDefaultValueId?: number | undefined;
  /** The attribute code. */
  AttributeCode?: string | undefined;
  /** The attribute value. */
  AttributeValue?: string | undefined;
  /** The locale identifier. */
  LocaleId: number;
  /** The attribute name. */
  AttributeName?: string | undefined;
}

/** Represents the response for an attribute in a form submission. */
export interface FormSubmitAttributeResponse {
  /** The global attribute identifier. */
  GlobalAttributeId?: number;
  /** The global attribute value identifier. This value is nullable. */
  GlobalAttributeValueId?: number | undefined;
  /** The global attribute default value identifier. This value is nullable. */
  GlobalAttributeDefaultValueId?: number | undefined;
  /** The attribute code. */
  AttributeCode?: string | undefined;
  /** The attribute value. */
  AttributeValue?: string | undefined;
  /** The locale identifier. */
  LocaleId?: number;
  /** The attribute name. */
  AttributeName?: string | undefined;
}

/** Represents the response model for a form submission in the CMS. */
export interface FormSubmitModelResponse {
  /** The form builder identifier. */
  FormBuilderId?: number;
  /** The locale identifier. */
  LocaleId?: number;
  /** The portal identifier. */
  PortalId?: number;
  /** The list of attributes associated with the form submission response. */
  Attributes?: FormSubmitAttributeResponse[] | undefined;
}

/** Represents a request for submitting a form in the CMS. */
export interface FormSubmitRequest {
  /** The form builder identifier. */
  FormBuilderId: number;
  LocaleCode: string;
  PortalCode: string;
  /** The form code. */
  FormCode?: string | undefined;
  /** The customer email. */
  CustomerEmail?: string | undefined;
  /** Gets or sets a value indicating whether the form submission was successful. */
  IsSuccess?: boolean;
  /** The list of attributes associated with the form submission. */
  Attributes?: FormSubmitAttributeRequest[] | undefined;
}

/** Represents the response after submitting a form in the CMS. */
export interface FormsSubmitResponse {
  formSubmitModel?: FormSubmitModelResponse;
}

export interface GlobalAttributeGroupsResponse {
  /** The unique identifier for the global attribute group. */
  GlobalAttributeGroupId?: number;
  /** The code for the attribute group. */
  GroupCode?: string | undefined;
  /** The name of the attribute group. */
  AttributeGroupName?: string | undefined;
  /** The display order for the attribute group. Nullable. */
  DisplayOrder?: number | undefined;
}

export interface GlobalAttributeValuesResponse {
  /** The unique identifier for the entity. */
  GlobalEntityId?: number;
  /** The name of the entity. */
  EntityName?: string | undefined;
  /** The value associated with the entity. */
  EntityValue?: string | undefined;
  /** The identifier for the attribute group to which this entity belongs (optional). */
  GlobalAttributeGroupId?: number | undefined;
  /** The unique identifier for the attribute. */
  GlobalAttributeId?: number;
  /** The identifier for the type of attribute (optional). */
  AttributeTypeId?: number | undefined;
  /** The name of the attribute type. */
  AttributeTypeName?: string | undefined;
  /** The code representing the attribute. */
  AttributeCode?: string | undefined;
  /** Gets or sets a value indicating whether the attribute is required. */
  IsRequired?: boolean;
  /** Gets or sets a value indicating whether the attribute is localizable. */
  IsLocalizable?: boolean;
  /** The name of the attribute. */
  AttributeName?: string | undefined;
  /** The identifier for the row in a table or collection. */
  RowId?: number;
  /** Gets or sets a value indicating whether the attribute can be edited. */
  IsEditable?: boolean;
  /** The name of the control associated with the attribute. */
  ControlName?: string | undefined;
  /** The name of the validation rule applied to the attribute. */
  ValidationName?: string | undefined;
  /** The value associated with the validation rule. */
  ValidationValue?: string | undefined;
  /** Gets or sets a value indicating if the validation value is a regular expression (optional). */
  IsRegExp?: boolean | undefined;
  /** The identifier for any associated media (optional). */
  MediaId?: number | undefined;
  /** The description providing help or additional information about the attribute. */
  HelpDescription?: string | undefined;
}

export interface GlobalAttributesValuesResponse {
  /** The identifier for the global attribute group. Nullable. */
  GlobalAttributeGroupId?: number | undefined;
  /** The unique identifier for the global attribute. */
  GlobalAttributeId?: number;
  /** The identifier for the attribute type. Nullable. */
  AttributeTypeId?: number | undefined;
  /** The name of the attribute type. */
  AttributeTypeName?: string | undefined;
  /** The code of the attribute. */
  AttributeCode?: string | undefined;
  /** Indicates whether the attribute is required. */
  IsRequired?: boolean;
  /** Indicates whether the attribute is localizable. */
  IsLocalizable?: boolean;
  /** The name of the attribute. */
  AttributeName?: string | undefined;
  /** The value of the attribute. */
  AttributeValue?: string | undefined;
  /** The identifier for the global attribute value. Nullable. */
  GlobalAttributeValueId?: number | undefined;
  /** The identifier for the global attribute default value. Nullable. */
  GlobalAttributeDefaultValueId?: number | undefined;
  /** The code for the attribute default value. */
  AttributeDefaultValueCode?: string | undefined;
  /** The default value of the attribute. */
  AttributeDefaultValue?: string | undefined;
  /** Indicates whether the attribute is editable. */
  IsEditable?: boolean;
  /** The help description for the attribute. */
  HelpDescription?: string | undefined;
}

export interface LinkWidgetsConfigurationResponseModel {
  /** The identifier for the portal. */
  PortalId?: number;
  /** The identifier for the media. */
  MediaId?: number;
  /** The title of the link widget. */
  Title?: string | undefined;
  /** The URL associated with the link widget. */
  Url?: string | undefined;
  /** The media path for the link widget. */
  MediaPath?: string | undefined;
  /** The identifier for CMS mapping. */
  CMSMappingId?: number;
  /** The type of mapping for the link widget. */
  TypeOFMapping?: string | undefined;
  /** The name of the link widget. */
  WidgetName?: string | undefined;
  /** Gets or sets a value indicating whether the link widget is active or not. */
  IsActive?: boolean;
  /** The identifier for the locale. */
  LocaleId?: number;
  /** The code associated with the title. */
  TitleCode?: string | undefined;
  Image?: string | undefined;
  /** A value indicating whether the link should open in a new tab. */
  IsNewTab?: boolean;
  /** The display order of the link widget. */
  DisplayOrder?: number;
  /** A value indicating whether CMS preview is enabled for the link widget. */
  EnableCMSPreview?: boolean;
}

/** Represents the response model for a published attribute. */
export interface PublishAttributeModelResponse {
  /** Gets or sets the code of the attribute. */
  AttributeCode?: string | undefined;
  /** Gets or sets the name of the attribute. */
  AttributeName?: string | undefined;
  /** Gets or sets the values of the attribute. */
  AttributeValues?: string | undefined;
  /** Gets or sets the type name of the attribute. */
  AttributeTypeName?: string | undefined;
  /** Gets or sets a value indicating whether the attribute is personalizable. */
  IsPersonalizable?: boolean;
  /** Gets or sets the display order of the attribute. */
  DisplayOrder?: number;
  /** Gets or sets a value indicating whether the attribute is disabled. */
  IsDisabled?: boolean;
  /** Select Values */
  SelectValues?: AttributeSelectValueResponse[] | undefined;
}

export interface PublishAttributeResponseModel {
  /** The unique identifier for the attibute code. */
  AttributeCode?: string | undefined;
  /** The identifier for the attribute name. */
  AttributeName?: string | undefined;
  /** The identifier to get the attribute values. */
  AttributeValues?: string | undefined;
  /** The identifier to get the attribute type name. */
  AttributeTypeName?: string | undefined;
  /** The identifie toe get the promo rule confition is configured or not. */
  IsPromoRuleCondition?: boolean;
  /** The identifier to get the  attribute is compareable or not. */
  IsComparable?: boolean;
  /** The bool flag for the html tags. */
  IsHtmlTags?: boolean;
  /** The bool flag for the facets. */
  IsFacets?: boolean;
  /** The bool flag to identify that the it is in search or not. */
  IsUseInSearch?: boolean;
  /** The bool identiifer to identify the it is configurable or not. */
  IsConfigurable?: boolean;
  /** The bool flag to identify it is personalizable or not. */
  IsPersonalizable?: boolean;
  /** The bool flag to identify it is custom field or not. */
  IsCustomField?: boolean;
  /** The bool identifier for swatch. */
  IsSwatch?: string | undefined;
  /** The identifier for the display sequence. */
  DisplayOrder?: number;
  /** The identifier for the selected attribute value. */
  SelectedAttributeValue?: string[] | undefined;
  /** The model to get the selected attribute values in response. */
  SelectValues?: AttributesSelectValuesResponseModel[] | undefined;
  /** The model to get the configurable attribute response. */
  ConfigurableAttribute?: ConfigurableAttributeResponseModel[] | undefined;
  /** The identifier for the attribute value code. */
  AttributeValueCode?: string | undefined;
  /** The identifier to identify it is disabled or not. */
  IsDisabled?: boolean;
}

export interface PublishCategoryResponseModel {
  /** The unique identifier for CMS widget published category. */
  PublishCategoryId?: number;
  /** The unique identifier for the parent catgeories. */
  ZnodeParentCategoryIds?: number[] | undefined;
  /** The unique identifier for the ZnodeCatalog id. */
  ZnodeCatalogId?: number;
  /** The published catalog id for the categories. */
  PublishedCatalogId?: string | undefined;
  /** The products associated within the categories. */
  ProductIds?: number[] | undefined;
  /** The version for the perticular category. */
  Version?: string | undefined;
  /** The identifier for the locale. */
  LocaleId?: number;
  /** The name of the category. */
  Name?: string | undefined;
  SEODetails?: SEODetailsResponseModel;
  /** The large imagepath unique identifier. */
  ImageLargePath?: string | undefined;
  /** The medium imagepath unique identifier. */
  ImageMediumPath?: string | undefined;
  /** The image thumbnail path  unique identifier. */
  ImageThumbNailPath?: string | undefined;
  /** The small imagepath unique identifier. */
  ImageSmallPath?: string | undefined;
  /** The published attibute response model. */
  Attributes?: PublishAttributeResponseModel[] | undefined;
  /** The published category response model. */
  ParentCategory?: PublishCategoryResponseModel[] | undefined;
  /** The isactive flag for the categories. */
  IsActive?: boolean | undefined;
  /** The identifier for the catalog name. */
  CatalogName?: string | undefined;
  /** The identifier for the seo description. */
  SEODescription?: string | undefined;
  /** The identifier for the seokeywords. */
  SEOKeywords?: string | undefined;
  /** The title identifier for the seo. */
  SEOTitle?: string | undefined;
  /** The url identifier for the seo. */
  SEOUrl?: string | undefined;
  /** The status identifier for the published category. */
  PublishStatus?: string | undefined;
  /** The activation date identifier for the category. */
  ActivationDate?: Date | undefined;
  /** The expiration date identifier for the category. */
  ExpirationDate?: Date | undefined;
  /** The catgory name. */
  CategoryName?: string | undefined;
  /** The identifier for the seocode. */
  SEOCode?: string | undefined;
  /** The flag to identify it is published or not. */
  IsPublish?: string | undefined;
  /** The identifier for the category code. */
  CategoryCode?: string | undefined;
}

export interface PublishProductsModel {
  /** A unique identifier assigned to the published product. */
  PublishProductId?: number;
  /** A collection of category identifiers associated with this product. */
  ZnodeCategoryIds?: number[] | undefined;
  /** Identifier to the catalog which this product belongs. */
  ZnodeCatalogId?: number;
  /** Specifies the locale (language and region) associated with this product. */
  LocaleId?: number;
  /** Name of the product. */
  Name?: string | undefined;
  /** The suffix indicating the currency used for pricing. */
  CurrencySuffix?: string | undefined;
  /** The file path pointing to the large-sized image of this product. */
  ImageLargePath?: string | undefined;
  /** The file path pointing to the medium-sized image of this product. */
  ImageMediumPath?: string | undefined;
  /** The file path pointing to the thumbnail image of this product. */
  ImageThumbNailPath?: string | undefined;
  /** The file path pointing to the small-sized image of this product. */
  ImageSmallPath?: string | undefined;
  /** The file path pointing to the small thumbnail image of this product. */
  ImageSmallThumbnailPath?: string | undefined;
  /** The file path pointing to the small image of the parent product, if applicable. */
  ParentProductImageSmallPath?: string | undefined;
  /** The name of the category to which this product belongs. */
  CategoryName?: string | undefined;
  /** The name of the catalog to which this product belongs. */
  CatalogName?: string | undefined;
  /** The type of the product. */
  ProductType?: string | undefined;
  /** Indicates whether this product is currently active. */
  IsActive?: boolean;
  /** The stock keeping unit (SKU) assigned to this product. */
  SKU?: string | undefined;
  /** Indicates whether pricing information for this product is available upon request. */
  IsCallForPricing?: boolean;
  /** List of global attributes values. */
  Attributes?: GlobalAttributesValuesResponse[] | undefined;
}

/** PublishProduct Response */
export interface PublishProductsResponses {
  /** The unique ID for the published product. */
  PublishProductId?: number;
  /** The list of Znode category IDs associated with the product. */
  ZnodeCategoryIds?: number[] | undefined;
  /** The Znode catalog ID associated with the product. */
  ZnodeCatalogId?: number;
  /** The locale ID associated with the product. */
  LocaleId?: number;
  /** Name of the product. */
  Name?: string | undefined;
  /** The currency suffix. */
  CurrencySuffix?: string | undefined;
  /** The path of the large image associated with the product. */
  ImageLargePath?: string | undefined;
  /** The path of the medium-sized image associated with the product. */
  ImageMediumPath?: string | undefined;
  /** The path of the thumbnail image associated with the product. */
  ImageThumbNailPath?: string | undefined;
  /** The path of the small image associated with the product. */
  ImageSmallPath?: string | undefined;
  /** A value indicating whether the product is a simple product. */
  IsSimpleProduct?: boolean;
  /** The message for in-stock availability. */
  InStockMessage?: string | undefined;
  /** The message for out-of-stock availability. */
  OutOfStockMessage?: string | undefined;
  /** The message for back-order availability. */
  BackOrderMessage?: string | undefined;
  /** The name of the category associated with the product. */
  CategoryName?: string | undefined;
  /** The name of the catalog associated with the product. */
  CatalogName?: string | undefined;
  /** The product type. */
  ProductType?: string | undefined;
  /** A value indicating whether the product is active. */
  IsActive?: boolean;
  /** The Stock Keeping Unit (SKU) identifier for the product. */
  SKU?: string | undefined;
  /** The currency code associated with the culture. */
  CurrencyCode?: string | undefined;
  /** Gets or sets the list of attributes for the category. */
  Attributes?: PublishAttributeModelResponse[] | undefined;
}

export interface PublishWidgetsProductsResponse {
  /** A unique identifier assigned to the published product. */
  PublishProductId?: number;
  /** Total reviews of this product. */
  TotalReviews?: number | undefined;
  /** Specifies the locale (language and region) associated with this product. */
  LocaleId?: number;
  /** Name of the product. */
  Name?: string | undefined;
  /** The file path pointing to the small-sized image of this product. */
  ImageSmallPath?: string | undefined;
  /** The type of the product. */
  ProductType?: string | undefined;
  /** Indicates whether this product is currently active. */
  IsActive?: boolean;
  /** The stock keeping unit (SKU) assigned to this product. */
  SKU?: string | undefined;
  /** Indicates whether pricing information for this product is available upon request. */
  IsCallForPricing?: boolean;
  /** Sales price of product. */
  SalesPrice?: number | undefined;
  /** Retail price of product. */
  RetailPrice?: number | undefined;
  /** Unit price of product. */
  UnitPrice?: number | undefined;
  /** The attributes for the product. */
  Attributes?: PublishAttributeResponseModel[] | undefined;
}

/** Represents the response model for recommendations. */
export interface RecommendationModelResponse {
  /** Gets or sets the list of recommended products. */
  RecommendedProducts?: PublishProductsResponses[] | undefined;
}

/** Represents the response containing recommendation details. */
export interface RecommendationsResponse {
  Recommendation?: RecommendationModelResponse;
}

/** Represents the response model for URL redirects with pagination details. */
export interface RedirectURLResponsesModel {}

export interface CreateManageMessagesRequest {
  /** The LocaleCode. This field is required. */
  LocaleCode: string;
  /** The message. This field is required. */
  Message: string;
  /** The array of StoreCode. This field is required. */
  StoreCode: string;
  /** The message tag. This field is required. */
  MessageTag: string;
}

export interface CustomersReviewsRequest {
  /** The portal identifier associated with the contentcontainer. */
  StoreCode: string;
  /** SKU of the product. */
  SKU: string;
  /** Rating for the product. */
  Rating: number;
  /** Headline for the review. */
  Headline: string;
  /** Additional comments. */
  Comments: string;
  /** Username of the reviewer. */
  UserName: string;
  /** User location. */
  UserLocation: string;
}

export interface AssociateCategoryResponse {
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** The ID of the CMS widget category. */
  CMSWidgetCategoryId?: number;
  /** The display order. */
  DisplayOrder?: number | undefined;
}

/** the response for a CMS slider banner. */
export interface BannersResponse {
  /** The unique identifier for the CMS slider banner. */
  CMSSliderBannerId?: number;
  /** The unique identifier for the CMS slider. */
  CMSSliderId?: number;
  /** The title of the banner. */
  Title?: string | undefined;
  /** The alternate text for the banner image. */
  ImageAlternateText?: string | undefined;
  /** The label name for the button on the banner. */
  ButtonLabelName?: string | undefined;
  /** The link for the button on the banner. */
  ButtonLink?: string | undefined;
  /** The text alignment for the banner content. */
  TextAlignment?: string | undefined;
  /** The sequence number of the banner.
This can be null. */
  BannerSequence?: number | undefined;
  /** The description of the banner. */
  Description?: string | undefined;
  /** The media path for the banner image. */
  MediaPath?: string | undefined;
}

export interface BlogNewsCommentsResponse {
  BlogNewsId?: number;
  PortalId?: number;
  LocaleId?: number;
  BlogNewsCommentId?: number;
  UserId?: number | undefined;
  BlogNewsCommentLocaleId?: number;
  CountComments?: number;
  IsApproved?: boolean;
  Customer?: string | undefined;
  BlogNewsComment?: string | undefined;
  BlogNewsTitle?: string | undefined;
  StoreName?: string | undefined;
  BlogNewsType?: string | undefined;
  LocaleName?: string | undefined;
}

/** The response model for the publication status of a blog news item. */
export interface BlogNewsPublishedResponse {
  /** A boolean flag indicating whether the blog news is published. */
  IsPublished?: boolean;
  /** An optional error message associated with the publication process. */
  ErrorMessage?: string | undefined;
}

export interface CMSWidgetResponse {
  CMSWidgetsId?: number;
  CMSAreaId?: number | undefined;
  TemplateName?: string | undefined;
  Code?: string | undefined;
  DisplayName?: string | undefined;
  IsConfigurable?: boolean;
  FileName?: string | undefined;
}

export interface ContainerConfigurationDetailsResponse {
  CMSContainerConfigurationId?: number;
  CMSWidgetsId?: number;
  WidgetKey?: string | undefined;
  CMSMappingId?: number;
  TypeOFMapping?: string | undefined;
  ContentContainerId?: number | undefined;
  ContainerKey?: string | undefined;
}

export interface ContainerTemplateResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  /** The identifier for a container template within a Content Management System. */
  ContainerTemplateId?: number;
  /** The code of the container template. */
  Code?: string | undefined;
  /** The name of the container template. */
  Name?: string | undefined;
  /** The file name associated with the container template. */
  FileName?: string | undefined;
  /** The media ID associated with the container template, if applicable. */
  MediaId?: number | undefined;
}

export interface ContainerWidgetConfigurationResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  /** The identifier of the container configuration. */
  CMSContainerConfigurationId?: number;
  /** The identifier of the CMS widgets. */
  CMSWidgetsId?: number;
  /** The key associated with the widget. */
  WidgetKey?: string | undefined;
  /** The identifier of the CMS mapping. */
  CMSMappingId?: number;
  /** The type of mapping for the widget. */
  TypeOFMapping?: string | undefined;
  /** The identifier of the content container (nullable). */
  ContentContainerId?: number | undefined;
  /** The key associated with the container (nullable). */
  ContainerKey?: string | undefined;
}

/** If there are no errors, API returns the Content Container List for the requested ID with the requested parameters. If an error occurs during the execution then an appropriate error response will be returned. */
export interface ContentContainerListResponsesModel {
  PaginationDetail?: ZnodePaginationDetail;
  /** The list of content containers. */
  ContainerList?: CreateContentContainerResponse[] | undefined;
}

export interface ContentContainerResponses {
  /** An integer representing the ID of the CMS content container. */
  CMSContentContainerId?: number;
  /** A string representing the name of the content container */
  Name?: string | undefined;
  /** A string representing a key associated with the content container. */
  ContainerKey?: string | undefined;
  /** An integer representing the family ID of the content container. */
  FamilyId?: number;
  /** An optional string representing tags associated with the content container. */
  Tags?: string | undefined;
  /** An optional byte representing the publish state ID of the content container. */
  PublishStateId?: number | undefined;
}

/** Represents the response containing detailed information about a page. */
export interface ContentPageDetailsResponse {
  /** Gets or sets the unique identifier code for the page. */
  PageCode?: string | undefined;
  /** Gets or sets the name of the page. */
  PageName?: string | undefined;
  /** Gets or sets the code for the portal associated with the page. */
  PortalCode?: string | undefined;
  /** Gets or sets the code for the profile associated with the page. */
  ProfileCode?: string | undefined;
  /** Gets or sets the JSON data related to the page's content. */
  PageJson?: string | undefined;
}

/** Represents the response containing a list of content pages along with pagination details. */
export interface ContentPageListResponse {
  PaginationDetail?: ZnodePaginationDetail;
  /** Gets or sets the list of content pages. */
  ContentPageList?: ContentPageResponse[] | undefined;
}

/** Represents the response containing details of a content page. */
export interface ContentPageResponse {
  /** The ID of the CMS content page. */
  CMSContentPagesId?: number;
  /** The ID of the portal. */
  PortalId?: number;
  /** The ID of the CMS template. */
  CMSTemplateId?: number | undefined;
  /** The title of the page. */
  PageTitle?: string | undefined;
  /** The name of the page. */
  PageName?: string | undefined;
  /** The ID of the CMS content page group. */
  CMSContentPageGroupId?: number;
  /** The name of the CMS content page group. */
  CMSContentPageGroupName?: string | undefined;
  /** The profile IDs associated with the content page. */
  ProfileIds?: string | undefined;
  /** The activation date of the page. */
  ActivationDate?: Date | undefined;
  /** The expiration date of the page. */
  ExpirationDate?: Date | undefined;
  /** The locale ID. */
  LocaleId?: number;
  /** The ID of the CMS content pages locale. */
  CMSContentPagesLocaleId?: number;
  /** Gets or sets a value indicating whether the content page is active. */
  IsActive?: boolean;
  /** The SEO title of the page. */
  SEOTitle?: string | undefined;
  /** The SEO description of the page. */
  SEODescription?: string | undefined;
  /** The SEO keywords of the page. */
  SEOKeywords?: string | undefined;
  /** The SEO URL of the page. */
  SEOUrl?: string | undefined;
  /** The meta information of the page. */
  MetaInformation?: string | undefined;
  /** The HTML content of the page. */
  ContentPageHtml?: string | undefined;
  /** The name of the portal. */
  PortalName?: string | undefined;
  /** The name of the page template. */
  PageTemplateName?: string | undefined;
  /** The file name of the page template. */
  PageTemplateFileName?: string | undefined;
  /** Gets or sets a value indicating whether the page is a redirect. */
  IsRedirect?: boolean | undefined;
  /** Gets or sets a value indicating whether the page is configurable. */
  IsConfigurable?: boolean;
  /** The template code of the content page. */
  ContentPageTemplateCode?: string | undefined;
  /** The old SEO URL of the page. */
  OldSEOURL?: string | undefined;
  /** The publish status of the page. */
  PublishStatus?: string | undefined;
  /** The SEO publish status of the page. */
  SEOPublishStatus?: string | undefined;
  /** Gets or sets a value indicating whether the page is published. */
  IsPublished?: boolean;
  /** The SEO code of the page. */
  SEOCode?: string | undefined;
  /** The canonical URL of the page. */
  CanonicalURL?: string | undefined;
  /** The robot tag of the page. */
  RobotTag?: string | undefined;
  /** The media path associated with the page. */
  MediaPath?: string | undefined;
}

export interface CreateBlogNewsResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  BlogNewsId?: number | undefined;
  /** The identifier of the portal associated with the blog news entry. */
  PortalId?: number | undefined;
  /** The locale identifier for the blog news entry, required for validation. */
  LocaleId: number;
  /** The identifier of the media associated with the blog news entry, required for validation. */
  MediaId: number;
  /** The path of the media associated with the blog news entry. */
  MediaPath?: string | undefined;
  /** The identifier of the content pages associated with the blog news entry. */
  CMSContentPagesId?: number | undefined;
  /** The type of the blog news entry (e.g., news, article). */
  BlogNewsType?: string | undefined;
  /** The activation status of the blog news entry. */
  IsBlogNewsActive?: boolean | undefined;
  /** Represents whether guest comments are allowed for the blog news entry. */
  IsAllowGuestComment?: boolean | undefined;
  /** The date when the blog news entry becomes active. */
  ActivationDate?: Date | undefined;
  /** The date when the blog news entry expires. */
  ExpirationDate?: Date | undefined;
  /** Represents a unique code associated with the blog news entry. */
  BlogNewsCode?: string | undefined;
  /** The identifier for the publish state of the blog news entry. */
  PublishStateId?: number;
  BlogNewsLocaleId?: number;
  /** The title of the blog news entry. */
  BlogNewsTitle?: string | undefined;
  /** Represents an overview of the body content for the blog news entry. */
  BodyOverview?: string | undefined;
  /** Tags associated with the blog news entry. */
  Tags?: string | undefined;
}

export interface CreateCMSFormWidgetConfigrationResponse {
  CMSFormWidgetConfigurationId?: number;
  LocaleId?: number;
  CMSWidgetsId?: number;
  WidgetsKey?: string | undefined;
  CMSMappingId?: number;
  TypeOFMapping?: string | undefined;
  FormBuilderId?: number | undefined;
  FormTitle?: string | undefined;
  ButtonText?: string | undefined;
  IsTextMessage?: boolean | undefined;
  TextMessage?: string | undefined;
  RedirectURL?: string | undefined;
  IsShowCaptcha?: boolean | undefined;
}

/** The response data for creating a CMS media widget configuration. */
export interface CreateCMSMediaWidgetConfigurationResponse {
  /** The identifier of the CMS media configuration. */
  CMSMediaConfigurationId?: number;
  /** The required identifier of the CMS widget. */
  CMSWidgetsId: number;
  /** Tthe optional key for widgets. */
  WidgetsKey?: string | undefined;
  /** The optional type of mapping. */
  TypeOFMapping?: string | undefined;
  /** The optional identifier of the CMS mapping. */
  CMSMappingId?: number | undefined;
  /** The required identifier of the media. */
  MediaId: number;
}

export interface CreateContentContainerResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  /** An integer representing the ID of the CMS content container. */
  CMSContentContainerId?: number;
  /** A string representing the name of the content container */
  Name?: string | undefined;
  /** A string representing a key associated with the content container. */
  ContainerKey?: string | undefined;
  /** An integer representing the family ID of the content container. */
  FamilyId?: number;
  /** An optional string representing tags associated with the content container. */
  Tags?: string | undefined;
  /** An optional byte representing the publish state ID of the content container. */
  PublishStateId?: number | undefined;
}

/** CreateLinkWidgetConfigurationResponse */
export interface CreateLinkWidgetConfigurationResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  LinkWidgetConfiguration?: LinkWidgetConfigurationResponse;
}

/** Represents the response configuration for a link widget. */
export interface LinkWidgetConfigurationResponse {
  /** The unique identifier for CMS widget title configuration. */
  CMSWidgetTitleConfigurationId?: number;
  /** The identifier for CMS widgets. */
  CMSWidgetsId?: number;
  /** The code associated with the CMS widget. */
  CMSWidgetCode?: string | undefined;
  /** The identifier for the portal. */
  PortalId?: number;
  /** The identifier for the media. */
  MediaId?: number;
  /** The title of the link widget. */
  Title?: string | undefined;
  /** The URL associated with the link widget. */
  Url?: string | undefined;
  /** The media path for the link widget. */
  MediaPath?: string | undefined;
  /** The identifier for CMS mapping. */
  CMSMappingId?: number;
  /** The key associated with the widgets. */
  WidgetsKey?: string | undefined;
  /** The type of mapping for the link widget. */
  TypeOFMapping?: string | undefined;
  /** The display name for the link widget. */
  DisplayName?: string | undefined;
  /** The name of the link widget. */
  WidgetName?: string | undefined;
  /** Gets or sets a value indicating whether the link widget is active or not. */
  IsActive?: boolean;
  /** The identifier for the locale. */
  LocaleId?: number;
  /** The code associated with the title. */
  TitleCode?: string | undefined;
  /** The identifier for CMS widget title configuration locale. */
  CMSWidgetTitleConfigurationLocaleId?: number;
  /** A value indicating whether the link should open in a new tab. */
  IsNewTab?: boolean;
  /** The display order of the link widget. */
  DisplayOrder?: number;
  /** A value indicating whether CMS preview is enabled for the link widget. */
  EnableCMSPreview?: boolean;
}

/** Link widget configuration list response model. */
export interface LinkWidgetConfigurationsResponse {
  /** Gets or Sets LinkWidgetConfigurationList */
  LinkWidgetConfigurationList?: LinkWidgetConfigurationResponse[] | undefined;
  PaginationDetail?: ZnodePaginationDetail;
}

/** Represents the configuration response for a media widget. */
export interface MediaWidgetConfigurationResponse {
  /** The path to the media file. */
  MediaPath?: string | undefined;
  /** The display name of the media file. */
  DisplayName?: string | undefined;
}

/** If there are no errors, API returns the list of Product Category for the requested ID with the requested parameters. If an error occurs during the execution then an appropriate error response will be returned. */
export interface ProductCategoryListResponse {
  PaginationDetail?: ZnodePaginationDetail;
  ProductCategories?: ProductCategoryResponse[] | undefined;
}

export interface ProductCategoryResponse {
  PimCategoryId?: number;
  CategoryName?: string | undefined;
  Status?: boolean;
  CategoryImage?: string | undefined;
  CMSOfferPageCategoryId?: number;
  CMSContentPagesId?: number;
  PublishCategoryId?: number;
  AttributeFamilyName?: string | undefined;
  CMSWidgetCategoryId?: number;
  CMSWidgetsId?: number;
  WidgetsKey?: string | undefined;
  CMSMappingId?: number;
  TypeOFMapping?: string | undefined;
  ZnodeCategoryId?: number;
  DisplayOrder?: number | undefined;
  CategoryCode?: string | undefined;
}

/** The response message for a slider widget. */
export interface SliderMessageResponse {
  /** The ID of the widget slider banner. */
  WidgetSliderBannerId?: number;
  /** The mapping ID associated with the slider widget. */
  MappingId?: number;
  /** The portal ID where the slider widget is used. */
  PortalId?: number;
  /** The locale ID associated with the slider widget. */
  LocaleId?: number;
  /** The type of the slider widget. */
  Type?: string | undefined;
  /** The navigation settings for the slider widget. */
  Navigation?: string | undefined;
  /** The value indicating whether the slider should autoplay. */
  AutoPlay?: boolean;
  /** The timeout duration for the autoplay feature. */
  AutoplayTimeOut?: number | undefined;
  /** The value indicating whether the autoplay should pause on hover. */
  AutoplayHoverPause?: boolean;
  /** The transaction style for the slider widget. */
  TransactionStyle?: string | undefined;
  /** The key associated with the widget. */
  WidgetsKey?: string | undefined;
  /** The type of mapping associated with the slider widget. */
  TypeOFMapping?: string | undefined;
  /** The slider ID. */
  SliderId?: number;
  /** The slider banners in the slider widget. */
  SliderBanners?: BannersResponse[] | undefined;
}

/** If there are no errors, API returns the list Text Widget Configuration list for the requested ID with the requested parameters. If an error occurs during the execution then an appropriate error response will be returned. */
export interface TextWidgetConfigurationListResponse {
  PaginationDetail?: ZnodePaginationDetail;
  /** The list of text widget configurations. */
  TextWidgetConfigurationList?: TextWidgetConfigurationResponse[] | undefined;
}

export interface TextWidgetConfigurationResponse {
  /** The identifier for the CMSTextWidgetConfiguration. */
  CMSTextWidgetConfigurationId?: number;
  /** The identifier for the locale associated with the configuration. */
  LocaleId?: number;
  /** The identifier for the CMSWidgets associated with the configuration. */
  CMSWidgetsId?: number;
  /** The key associated with the widget. */
  WidgetsKey?: string | undefined;
  /** The identifier for the CMSMapping associated with the configuration. */
  CMSMappingId?: number;
  /** The type of mapping for the configuration. */
  TypeOFMapping?: string | undefined;
  /** The text content of the widget configuration. */
  Text?: string | undefined;
  /** Gets or sets a value indicating whether CMS preview is enabled for the configuration. */
  EnableCMSPreview?: boolean;
}

export interface UpdateBlogNewsResponse {
  ModifiedBy?: number;
  ModifiedDate?: Date;
  BlogNewsId?: number | undefined;
  /** The identifier of the portal associated with the blog news entry. */
  PortalId?: number | undefined;
  /** The locale identifier for the blog news entry, required for validation. */
  LocaleId: number;
  /** The identifier of the media associated with the blog news entry, required for validation. */
  MediaId: number;
  /** The path of the media associated with the blog news entry. */
  MediaPath?: string | undefined;
  /** The identifier of the content pages associated with the blog news entry. */
  CMSContentPagesId?: number | undefined;
  /** The type of the blog news entry (e.g., news, article). */
  BlogNewsType?: string | undefined;
  /** The activation status of the blog news entry. */
  IsBlogNewsActive?: boolean | undefined;
  /** Represents whether guest comments are allowed for the blog news entry. */
  IsAllowGuestComment?: boolean | undefined;
  /** The date when the blog news entry becomes active. */
  ActivationDate?: Date | undefined;
  /** The date when the blog news entry expires. */
  ExpirationDate?: Date | undefined;
  /** Represents a unique code associated with the blog news entry. */
  BlogNewsCode?: string | undefined;
  /** The identifier for the publish state of the blog news entry. */
  PublishStateId?: number;
  BlogNewsLocaleId?: number;
  /** The title of the blog news entry. */
  BlogNewsTitle?: string | undefined;
  /** Represents an overview of the body content for the blog news entry. */
  BodyOverview?: string | undefined;
  /** Tags associated with the blog news entry. */
  Tags?: string | undefined;
}

export interface UpdateCMSFormWidgetConfigrationResponse {
  /** The unique identifier for the CMS form widget configuration. */
  CMSFormWidgetConfigurationId?: number;
  /** The locale ID associated with the configuration. */
  LocaleId?: number;
  /** The unique identifier for the CMS widget. */
  CMSWidgetsId?: number;
  /** The key representing the widgets. */
  WidgetsKey?: string | undefined;
  /** The unique identifier for the CMS mapping. */
  CMSMappingId?: number;
  /** The type of mapping for the configuration. */
  TypeOFMapping?: string | undefined;
  /** The form builder ID (optional). */
  FormBuilderId?: number | undefined;
  /** The title of the form (optional). */
  FormTitle?: string | undefined;
  /** The text for the button (optional). */
  ButtonText?: string | undefined;
  /** Gets or sets a boolean flag indicating whether it's a text message (optional). */
  IsTextMessage?: boolean | undefined;
  /** The text message content (optional). */
  TextMessage?: string | undefined;
  /** The redirect URL after form submission (optional). */
  RedirectURL?: string | undefined;
  /** A boolean flag indicating whether to show CAPTCHA (optional). */
  IsShowCaptcha?: boolean | undefined;
  /** A boolean flag indicating whether CMS preview is enabled. */
  EnableCMSPreview?: boolean;
}

/** If there are no errors then the API will update the details mentioned in the request for that MediaWidgetConfiguration If an error occurs during the execution then an appropriate error response will be returned. */
export interface UpdateCMSMediaWidgetConfigurationResponse {
  /** The identifier of the CMS media configuration. */
  CMSMediaConfigurationId: number;
  /** The required identifier of the CMS widget. */
  CMSWidgetsId?: number | undefined;
  /** The optional key for widgets. */
  WidgetsKey?: string | undefined;
  /** The optional type of mapping. */
  TypeOFMapping?: string | undefined;
  /** The optional identifier of the CMS mapping. */
  CMSMappingId?: number | undefined;
  /** The required identifier of the media. */
  MediaId?: number | undefined;
}

export interface UpdateCMSWidgetProductResponse {
  /** Unique identifier for CMS widget product. */
  CMSWidgetProductId?: number;
  /** display order for the widget product. */
  DisplayOrder?: number | undefined;
}

export interface UpdateContentContainerResponse {
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** An integer representing the ID of the CMS content container. */
  CMSContentContainerId?: number;
  /** A string representing the name of the content container */
  Name?: string | undefined;
  /** A string representing a key associated with the content container. */
  ContainerKey?: string | undefined;
  /** An integer representing the family ID of the content container. */
  FamilyId?: number;
  /** An optional string representing tags associated with the content container. */
  Tags?: string | undefined;
  /** An optional byte representing the publish state ID of the content container. */
  PublishStateId?: number | undefined;
}

export interface UpdateTextWidgetConfigurationResponse {
  /** The identifier for the CMSTextWidgetConfiguration. */
  CMSTextWidgetConfigurationId?: number;
  /** The identifier for the locale associated with the configuration. */
  LocaleId?: number;
  /** The identifier for the CMSWidgets associated with the configuration. */
  CMSWidgetsId?: number;
  /** The key associated with the widget. */
  WidgetsKey?: string | undefined;
  /** The identifier for the CMSMapping associated with the configuration. */
  CMSMappingId?: number;
  /** The type of mapping for the configuration. */
  TypeOFMapping?: string | undefined;
  /** The text content of the widget configuration. */
  Text?: string | undefined;
  /** Gets or sets a value indicating whether CMS preview is enabled for the configuration. */
  EnableCMSPreview?: boolean;
}

export interface WebStoreBlogNewsCommentsResponse {
  /** The id of  blog or news item. */
  BlogNewsId?: number;
  /** The id of specific comment on the blog or news item. */
  BlogNewsCommentId?: number;
  /** The text of the comment. */
  BlogComment?: string | undefined;
}

export interface WebStoreLinkProductResponse {
  /** List of linked products in a web store. */
  LinkProductsList?: WebStoreLinkProductsResponse[] | undefined;
}

/** Represents a response that contains a list of web store messages. */
export interface WebStoreMessagesListResponse {
  /** A list of web store messages. */
  Messages?: WebStoreMessagesResponse[] | undefined;
}

/** Webstore message response object. */
export interface WebStoreMessagesResponse {
  /** The locale identifier. */
  LocaleId?: number | undefined;
  /** The key for the message. */
  MessageKey?: string | undefined;
  /** The content of the message. */
  Message?: string | undefined;
}

/** The response containing details of a webstore search widget. */
export interface WebstoreSearchWidgetResponse {
  /** The list of search facets. */
  Facets?: SearchFacetResponse[] | undefined;
  /** The list of products. */
  Products?: SearchProductResponse[] | undefined;
  PaginationDetail?: ZnodePaginationDetail;
}

/** The response containing details of a webstore widget form configuration. */
export interface WebstoreWidgetFormResponse {
  /** The CMS mapping identifier. */
  CMSMappingId?: number;
  /** The locale identifier. */
  LocaleId?: number;
  /** The form code. */
  FormCode?: string | undefined;
  /** The form builder identifier. */
  FormBuilderId?: number;
}

export interface WidgetConfigurationResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  /** The identifier for the associated CMS slider. */
  CMSSliderId?: number;
  /** The type of the widget slider banner. */
  Type?: string | undefined;
  /** The navigation information for the widget slider banner. */
  Navigation?: string | undefined;
  /** Gets or sets a value indicating whether the widget slider banner should auto-play. */
  AutoPlay?: boolean;
  /** The timeout duration for auto-play (if applicable). */
  AutoplayTimeOut?: number | undefined;
  /** Gets or sets a value indicating whether auto-play should pause on hover. */
  AutoplayHoverPause?: boolean;
  /** The transaction style for the widget slider banner. */
  TransactionStyle?: string | undefined;
  /** The unique key associated with the widget. */
  WidgetsKey?: string | undefined;
  /** The code representing the widget. */
  WidgetCode?: string | undefined;
  /** The identifier for the CMS mapping. */
  CMSMappingId?: number;
  /** The type of mapping for the widget slider banner. */
  TypeOFMapping?: string | undefined;
  /** The list of slider banners associated with the widget slider. */
  SliderBanners?: CMSSliderBannerRequest[] | undefined;
}

export interface WidgetEmailConfigurationResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  /** The unique identifier for form widget email configuration. */
  FormWidgetEmailConfigurationId?: number;
  /** The identifier for CMS content pages associated with the form widget. */
  CMSContentPagesId?: number;
  /** The notification email identifier for the form widget (nullable). */
  NotificationEmailId?: string | undefined;
  /** The notification email template identifier for the form widget (nullable). */
  NotificationEmailTemplateId?: number | undefined;
  /** The acknowledgement email template identifier for the form widget (nullable). */
  AcknowledgementEmailTemplateId?: number | undefined;
}

/** Represents the response model for a widget message containing details about the widget's publishing, versioning, and various identifiers. */
export interface WidgetMessageResponse {
  ContainerKey?: string | undefined;
}

/** Represents a response containing configurable attribute information. */
export interface ConfigurableAttributeResponse {
  /** The value of the attribute. */
  AttributeValue?: string | undefined;
  /** The image path for the attribute. */
  ImagePath?: string | undefined;
  /** The text for the swatch of the attribute. */
  SwatchText?: string | undefined;
  /** Indicates whether the attribute is disabled. */
  IsDisabled?: boolean;
  /** The list of select values for the attribute. */
  SelectValues?: AttributesSelectValueResponse[] | undefined;
  /** The display order of the attribute. */
  DisplayOrder?: number;
}

export interface CreateManageMessagesResponse {
  /** The LocaleCode. This field is required. */
  LocaleCode?: string | undefined;
  /** The CMS message key ID. */
  CMSMessageKeyId?: number | undefined;
  /** The message key. This field is required. */
  MessageKey?: string | undefined;
  /** The array of StoreCode. This field is required and cannot be empty. */
  StoreCode?: string | undefined;
}

export interface ManageMessagesListResponse {
  /** Manage messages response model. */
  ManageMessages?: ManageMessagesResponse[] | undefined;
  PaginationDetail?: ZnodePaginationDetail;
}

export interface ManageMessagesResponse {
  /** Unique identifier for the CMS message. */
  CMSMessageId?: number;
  /** Identifier for the locale. */
  LocaleId?: number | undefined;
  /** The content of the CMS message. */
  Message?: string | undefined;
  /** A key used to reference the message. */
  MessageKey?: string | undefined;
  /** Name of the store associated with the message. */
  StoreName?: string | undefined;
  /** Tag used to categorize or label the message for easy identification or filtering. */
  MessageTag?: string | undefined;
  /** Status indicating whether the message is published or draft.. */
  PublishStatus?: string | undefined;
  /** Identifier for the portal or site where the message will be displayed. */
  portalId?: number;
  /** Indicates if the message is a global content block. */
  IsGlobalContentBlock?: string | undefined;
}

/** Represents a response containing information about a product promotion. */
export interface ProductPromotionResponse {}

/** Represents a response object containing information about a product's inventory. */
export interface ProductsInventoryResponse {
  /** The Stock Keeping Unit (SKU) of the product. */
  SKU?: string | undefined;
  /** The quantity of the product available. */
  Quantity?: number;
  /** The ID of the inventory. */
  InventoryId?: number;
  /** The ID of the warehouse where the product is stored (nullable). */
  WarehouseId?: number | undefined;
  /** The name of the warehouse. */
  WarehouseName?: string | undefined;
  /** The code of the warehouse. */
  WarehouseCode?: string | undefined;
  /** The the ID of the product. */
  ProductId?: number;
  /** The value indicating whether the product is from a warehouse. */
  IsFromWarehouse?: boolean;
  /** The value indicating whether the warehouse is the default one. */
  IsDefaultWarehouse?: boolean;
  /** The city where the warehouse is located. */
  WarehouseCityName?: string | undefined;
  /** The the state where the warehouse is located. */
  WarehouseStateName?: string | undefined;
  /** The postal code of the warehouse. */
  WarehousePostalCode?: string | undefined;
  /** The address of the warehouse. */
  WarehouseAddress?: string | undefined;
  /** The default inventory count. */
  DefaultInventoryCount?: string | undefined;
}

/** Represents a response containing information about a published attribute. */
export interface PublishAttributeResponse {
  /** The code of the attribute. */
  AttributeCode?: string | undefined;
  /** The name of the attribute. */
  AttributeName?: string | undefined;
  /** The values of the attribute. */
  AttributeValues?: string | undefined;
  /** The type name of the attribute. */
  AttributeTypeName?: string | undefined;
  /** Indicates if the attribute is a promotional rule condition. */
  IsPromoRuleCondition?: boolean;
  /** Indicates if the attribute is comparable. */
  IsComparable?: boolean;
  /** Indicates if the attribute contains HTML tags. */
  IsHtmlTags?: boolean;
  /** Indicates if the attribute is used as a facet. */
  IsFacets?: boolean;
  /** Indicates if the attribute is used in search. */
  IsUseInSearch?: boolean;
  /** Indicates if the attribute is configurable. */
  IsConfigurable?: boolean;
  /** Indicates if the attribute is personalizable. */
  IsPersonalizable?: boolean;
  /** Indicates if the attribute is a custom field. */
  IsCustomField?: boolean;
  /** Indicates if the attribute is a swatch. */
  IsSwatch?: string | undefined;
  /** The display order of the attribute. */
  DisplayOrder?: number;
  /** The selected attribute values. */
  SelectedAttributeValue?: string[] | undefined;
  /** The select values for the attribute. */
  SelectValues?: AttributesSelectValueResponse[] | undefined;
  /** The configurable attributes. */
  ConfigurableAttribute?: ConfigurableAttributeResponse[] | undefined;
  /** The code of the attribute value. */
  AttributeValueCode?: string | undefined;
  /** Indicates if the attribute is disabled. */
  IsDisabled?: boolean;
}

export interface SearchFacetResponse {
  /** The name of the attribute associated with the facet. */
  AttributeName?: string | undefined;
  /** The code of the attribute associated with the facet. */
  AttributeCode?: string | undefined;
  /** The list of values for the attribute associated with the facet. */
  AttributeValues?: SearchFacetValueResponse[] | undefined;
  /** The unique identifier for the control type associated with the facet. */
  ControlTypeId?: number;
  /** The display order of the facet. */
  DisplayOrder?: number;
  /** The type of control associated with the facet. */
  ControlType?: string | undefined;
}

export interface SearchFacetValueResponse {
  /** The value of the attribute associated with the facet. */
  AttributeValue?: string | undefined;
  /** The count of items within this facet value. */
  FacetCount?: number;
  /** The label for the facet value. */
  Label?: string | undefined;
  /** The maximum value of a range, if applicable. */
  RangeMax?: string | undefined;
  /** The minimum value of a range, if applicable. */
  RangeMin?: string | undefined;
  /** The end value of a range, if applicable. */
  RangeEnd?: string | undefined;
  /** The start value of a range, if applicable. */
  RangeStart?: string | undefined;
  /** The display order of the facet value, if applicable. */
  DisplayOrder?: number | undefined;
}

export interface SearchProductResponse {
  /** The external identifier of the product. */
  ExternalId?: string | undefined;
  /** The Znode product ID. */
  ZnodeProductId?: number;
  /** The version of the product. */
  Version?: number;
  /** The name of the product. */
  Name?: string | undefined;
  /** The category ID of the product. */
  CategoryId?: number;
  /** The name of the category to which the product belongs. */
  CategoryName?: string | undefined;
  /** The currency suffix for the product. */
  CurrencySuffix?: string | undefined;
  /** The rating of the product. */
  Rating?: number | undefined;
  /** The total number of reviews for the product. */
  TotalReviews?: number | undefined;
  /** The SEO URL of the product. */
  SEOUrl?: string | undefined;
  /** The path of the large image of the product. */
  ImageLargePath?: string | undefined;
  /** The path of the medium-sized image of the product. */
  ImageMediumPath?: string | undefined;
  /** The path of the thumbnail image of the product. */
  ImageThumbNailPath?: string | undefined;
  /** The path of the small image of the product. */
  ImageSmallPath?: string | undefined;
  /** The path of the small thumbnail image of the product. */
  ImageSmallThumbnailPath?: string | undefined;
  /** The message for products that are in stock. */
  InStockMessage?: string | undefined;
  /** The message for products that are out of stock. */
  OutOfStockMessage?: string | undefined;
  /** The message for products that are on backorder. */
  BackOrderMessage?: string | undefined;
  /** The list of category IDs associated with the product. */
  CategoryIds?: number[] | undefined;
  /** The list of promotions associated with the product. */
  Promotions?: ProductPromotionResponse[] | undefined;
  Attributes?: PublishAttributeResponse[] | undefined;
  /** The list of highlight strings for the product. */
  HighlightList?: string[] | undefined;
  /** The list of swatch attribute values for the product. */
  SwatchAttributesValues?: WebStoreAttributeValueSwatchResponse[] | undefined;
  /** Product inventory details. */
  Inventory?: ProductsInventoryResponse[] | undefined;
}

export interface StoreLocatorsDataResponse {
  /** Portal ID. */
  PortalId?: number;
  /** Display order. */
  DisplayOrder?: number | undefined;
  /** Store name. */
  StoreName?: string | undefined;
  /** Store location code. */
  StoreLocationCode?: string | undefined;
  /** Indicates whether the store is active. */
  IsActive?: boolean;
  /** MapQuest URL for the store. */
  MapQuestURL?: string | undefined;
  /** Path to the media associated with the store. */
  MediaPath?: string | undefined;
  /** Longitude of the store's location. */
  Longitude?: number | undefined;
  /** Latitude of the store's location. */
  Latitude?: number | undefined;
  /** First line of the store's address. */
  Address1?: string | undefined;
  /** Country name. */
  CountryName?: string | undefined;
  /** State name. */
  StateName?: string | undefined;
  /** City name. */
  CityName?: string | undefined;
  /** Postal code. */
  PostalCode?: string | undefined;
  /** Phone number. */
  PhoneNumber?: string | undefined;
  /** Portal name. */
  Portalname?: string | undefined;
}

/** Represents a response containing swatch information for a web store attribute value. */
export interface WebStoreAttributeValueSwatchResponse {
  /** The path to the large image. */
  ImageLargePath?: string | undefined;
  /** The path to the medium-sized image. */
  ImageMediumPath?: string | undefined;
  /** The path to the thumbnail-sized image. */
  ImageThumbNailPath?: string | undefined;
  /** The path to the small-sized image. */
  ImageSmallPath?: string | undefined;
  /** The path to the small thumbnail-sized image. */
  ImageSmallThumbnailPath?: string | undefined;
  /** The value of the attribute. */
  Value?: string | undefined;
  /** The code of the attribute. */
  Code?: string | undefined;
}

export interface WebStoreBlogNewsCommentListResponseModel {
  BlogNewsCommentList?: WebStoreBlogNewsCommentResponseModel[] | undefined;
}

export interface WebStoreLocatorsResponse {
  /** The list of store locator data responses. */
  StoreLocators?: StoreLocatorsDataResponse[] | undefined;
}

export interface WebStoresBlogNewsListResponse {
  BlogNewsList?: WebStoresBlogNewsResponse[] | undefined;
}

export interface WebStoresBlogNewsResponse {
  BlogNewsId?: number;
  PortalId?: number;
  LocaleId?: number;
  CMSContentPagesId?: number;
  MediaId?: number;
  BlogNewsType?: string | undefined;
  BlogNewsTitle?: string | undefined;
  BodyOverview?: string | undefined;
  Tags?: string | undefined;
  SEOTitle?: string | undefined;
  SEODescription?: string | undefined;
  SEOKeywords?: string | undefined;
  SEOUrl?: string | undefined;
  BlogNewsContent?: string | undefined;
  MediaPath?: string | undefined;
  IsBlogNewsActive?: boolean;
  IsAllowGuestComment?: boolean;
  BlogNewsCode?: string | undefined;
  ActivationDate?: string | undefined;
}

export interface SEODetailsResponseModel {
  /** The identifier for the itemname. */
  ItemName?: string | undefined;
  /** The product name identifier. */
  ProductName?: string | undefined;
  /** The unique identifier doe the cmsseodetails. */
  CMSSEODetailId?: number;
  /** The unique identifier for the cmsseodetailslocalid. */
  CMSSEODetailLocaleId?: number;
  /** The unique identifier for the cmsseotypeid. */
  CMSSEOTypeId?: number;
  /** The unique identifier for the seoid. */
  SEOId?: number | undefined;
  /** The type name identifier for the seo. */
  SEOTypeName?: string | undefined;
  /** The seo title for the seo. */
  SEOTitle?: string | undefined;
  /** The description identifier for the seo. */
  SEODescription?: string | undefined;
  /** The seokeyworeds identifier for the seo. */
  SEOKeywords?: string | undefined;
  /** The identifier for the seo. */
  SEOUrl?: string | undefined;
  /** The flag for the redirection. */
  IsRedirect?: boolean | undefined;
  /** The metainformation is stored in this identifier. */
  MetaInformation?: string | undefined;
  /** The identifier for the existing seo url. */
  OldSEOURL?: string | undefined;
  /** The unique identifier for the perticular local. */
  LocaleId?: number;
  /** The unique identifier for the  cmscontentpagesid. */
  CMSContentPagesId?: number;
  /** The identifier for the PortalId. */
  PortalId?: number;
  /** The identifier to identify the publish status. */
  PublishStatus?: string | undefined;
  /** The flag for set is publish. */
  IsPublish?: boolean | undefined;
  /** The identifier to select the portal. */
  Portals?: SelectListItem[] | undefined;
  /** The identifier to select the local. */
  Locales?: SelectListItem[] | undefined;
  /** The idenrtifer to identify that is all store configured. */
  IsAllStore?: boolean;
  /** The unique id for the pim products. */
  PimProductId?: number;
  /** The unique identifier for the seo. */
  SEOCode?: string | undefined;
  /** The flag to check the acitve state. */
  IsActive?: string | undefined;
  /** The unique identifier for the publish state id. */
  PublishStateId?: number;
  /** The identifier for cannonical url. */
  CanonicalURL?: string | undefined;
  /** The identifier for the robottag. */
  RobotTag?: string | undefined;
}

export interface SearchCMSPageResponse {
  /** The identifier for the locale. */
  LocaleId?: number;
  /** The identifier for the portal. */
  PortalId?: number;
  /** The identifier for CMS contentpages. */
  ContentPageId?: number;
  /** The identifier for the page name of template. */
  PageName?: string | undefined;
  /** The identifier for the perticular profile. */
  ProfileId?: number[] | undefined;
  /**  /// <summary>
Gets or sets a value indicating whether the content is active or not.
</summary> */
  IsActive?: boolean;
  /** The identifier for the revisiontype. */
  RevisionType?: string | undefined;
  /** The identifier for the pagetitle. */
  PageTitle?: string | undefined;
  /** The unique identifier for the Text. */
  Text?: string[] | undefined;
  /** The identifier for the seodescription. */
  SeoDescription?: string | undefined;
  /** The identifier for the seotitle. */
  SeoTitle?: string | undefined;
  /** The identifier for the seourl. */
  SeoURL?: string | undefined;
}

export interface TextWidgetReponse {
  /** Identifier for getting the text. */
  Text?: string | undefined;
  /** Identifier for CMS Preview. */
  EnableCMSPreview?: boolean;
}

/** Response model for the theme page list API */
export interface ThemePageListResponse {
  /** Gets or sets the theme page list. */
  ThemePageList?: ThemePageResponse[] | undefined;
}

/** Response model for the theme page API */
export interface ThemePageResponse {
  /** Gets or sets the unique identifier id for the page. */
  CMSPagesId?: number;
  /** Gets or sets the unique identifier code for the page. */
  PageCode?: string | undefined;
  /** Gets or sets the name of the page. */
  PageName?: string | undefined;
  /** Gets or sets the code that identifies the type of the page. */
  CMSPageTypeCode?: string | undefined;
  /** Gets or sets the name that identifies the name of the page. */
  PageTypeName?: string | undefined;
}

/** A request to update the association of a category with a widget. */
export interface UpdateAssociateCategoryRequest {
  /** The display order. */
  DisplayOrder: number;
}

/** The request consists of the BlogNewsId to identify the record in which update is required along with the details that are to be updated in that BlogNews. */
export interface UpdateBlogNewsRequest {
  /** The ID of the blog news item, if applicable. */
  BlogNewsId: number;
  /** The identifier of the portal associated with the blog news entry. */
  PortalId: number;
  /** The locale identifier for the blog news entry, required for validation. */
  LocaleId: number;
  /** The identifier of the media associated with the blog news entry, required for validation. */
  MediaId: number;
  /** The path of the media associated with the blog news entry. */
  MediaPath?: string | undefined;
  /** The identifier of the content pages associated with the blog news entry. */
  CMSContentPagesId: number;
  /** The type of the blog news entry (e.g., news, article). */
  BlogNewsType?: string | undefined;
  /** The activation status of the blog news entry. */
  IsBlogNewsActive?: boolean | undefined;
  /** Represents whether guest comments are allowed for the blog news entry. */
  IsAllowGuestComment?: boolean | undefined;
  /** The date when the blog news entry becomes active. */
  ActivationDate?: Date | undefined;
  /** The date when the blog news entry expires. */
  ExpirationDate?: Date | undefined;
  /** Represents a unique code associated with the blog news entry. */
  BlogNewsCode?: string | undefined;
  /** The identifier for the publish state of the blog news entry. */
  PublishStateId?: number;
  BlogNewsLocaleId?: number;
  /** The title of the blog news entry. */
  BlogNewsTitle?: string | undefined;
  /** Represents an overview of the body content for the blog news entry. */
  BodyOverview?: string | undefined;
  /** Tags associated with the blog news entry. */
  Tags?: string | undefined;
}

/** The request consists of the CMS Form Widget Configuration Id to identify the record in which update is required along with the details that are to be updated in the CMS Form. */
export interface UpdateCMSFormWidgetConfigrationRequest {
  ModifiedBy?: number;
  /** The identifier for the CMSFormWidgetConfiguration. */
  CMSFormWidgetConfigurationId: number;
  /** The identifier for the locale associated with the configuration. */
  LocaleId?: number;
  /** The identifier for the CMSWidgets associated with the configuration. */
  WidgetCode: string;
  /** The key associated with the widget. */
  WidgetsKey?: string | undefined;
  /** The identifier for the CMSMapping associated with the configuration. */
  CMSMappingId?: number;
  /** The type of mapping for the configuration. */
  TypeOFMapping?: string | undefined;
  /** The identifier for the form builder associated with the configuration. */
  FormBuilderId: number;
  /** The title of the form. */
  FormTitle?: string | undefined;
  /** The text for the button in the form. */
  ButtonText?: string | undefined;
  /** Gets or sets a flag indicating whether a text message is included in the form. */
  IsTextMessage?: boolean | undefined;
  /** The text message content. */
  TextMessage?: string | undefined;
  /** The URL to redirect to after form submission. */
  RedirectURL?: string | undefined;
  /** Gets or sets a flag indicating whether to show a captcha in the form. */
  IsShowCaptcha?: boolean | undefined;
}

/** The request consists of the CMSMediaConfigurationId to identify the record in which update is required along with the details that are to be updated in the Media Widget Configuration. */
export interface UpdateCMSMediaWidgetConfigurationRequest {
  /** The identifier of the CMS media configuration. */
  CMSMediaConfigurationId: number;
  /** The CMSWidgetsId is retrieved based on the specified WidgetCode. */
  WidgetCode: string;
  /** The optional key for widgets. */
  WidgetsKey?: string | undefined;
  /** The optional type of mapping. */
  TypeOFMapping?: string | undefined;
  /** The optional identifier of the CMS mapping. */
  CMSMappingId: number;
  /** The required identifier of the media. */
  MediaId: number;
}

/** The request consists of the cms text widget configuration id to identify the record in which update is required along with the details that are to be updated CMS Text Widget Configuration. */
export interface UpdateCMSTextWidgetConfigurationRequest {
  ModifiedBy?: number;
  /** The identifier for the CMSTextWidgetConfiguration. */
  CMSTextWidgetConfigurationId: number;
  /** The identifier for the locale associated with the configuration. */
  LocaleId: number;
  /** The identifier for the CMSWidgets associated with the configuration. */
  CMSWidgetsId: number;
  /** The key associated with the widget. */
  WidgetsKey?: string | undefined;
  /** The identifier for the CMSMapping associated with the configuration. */
  CMSMappingId: number;
  /** The type of mapping for the configuration. */
  TypeOFMapping: string;
  /** The text content of the widget configuration. */
  Text?: string | undefined;
  /** Gets or sets a value indicating whether CMS preview is enabled for the configuration. */
  EnableCMSPreview?: boolean;
}

/** The request consists of the cms widget product id to identify the record in which update is required along with the details that are to be updated in the cms widget product. */
export interface UpdateCMSWidgetProductRequest {
  ModifiedBy?: number;
  /** Display order for the widget product. */
  DisplayOrder: number;
}

/** The request consists of the cms widget slider banner id to identify the record in which update is required along with the details that are to be updated in the cms widget sliderBanner. */
export interface UpdateCMSWidgetSliderBannerRequest {
  /** The unique identifier for the CMS widget slider banner. */
  CMSWidgetSliderBannerId: number;
  /** The identifier for the associated CMS slider. */
  CMSSliderId: number;
  /** The type of the widget slider banner. */
  Type?: string | undefined;
  /** The navigation information for the widget slider banner. */
  Navigation?: string | undefined;
  /** Gets or sets a value indicating whether the widget slider banner should auto-play. */
  AutoPlay?: boolean;
  /** The timeout duration for auto-play (if applicable). */
  AutoplayTimeOut?: number | undefined;
  /** Gets or sets a value indicating whether auto-play should pause on hover. */
  AutoplayHoverPause?: boolean;
  /** The transaction style for the widget slider banner. */
  TransactionStyle?: string | undefined;
  /** The identifier for the associated CMS widget. */
  CMSWidgetsId?: number;
  /** The unique key associated with the widget. */
  WidgetsKey?: string | undefined;
  /** The code representing the widget. */
  WidgetCode: string;
  /** The identifier for the CMS mapping. */
  CMSMappingId?: number;
  /** The type of mapping for the widget slider banner. */
  TypeOFMapping?: string | undefined;
  /** Locale id. */
  LocaleId?: number;
  /** The publish flag for preview mode. */
  EnableCMSPreview?: boolean;
  /** The list of slider banners associated with the widget slider. */
  SliderBanners?: CMSSliderBannerRequest[] | undefined;
}

export interface UpdateContentContainerRequest {
  /** A string representing the name of the content container */
  Name?: string | undefined;
  /** An integer representing the family ID of the content container. */
  FamilyId?: number;
  /** An optional string representing tags associated with the content container. */
  Tags?: string | undefined;
  /** An optional byte representing the publish state ID of the content container. */
  PublishStateId?: number | undefined;
}

/** The request consists of the cms form widget email configuration id to identify the record in which update is required along with the details that are to be updated in the form widget email */
export interface UpdateFormWidgetEmailConfigurationRequest {
  /** The unique identifier for form widget email configuration. */
  FormWidgetEmailConfigurationId: number;
  /** The notification email identifier for the form widget. */
  NotificationEmailId?: string | undefined;
  /** The notification email template identifier for the form widget. */
  NotificationEmailTemplateId?: number | undefined;
  /** The acknowledgement email template identifier for the form widget. */
  AcknowledgementEmailTemplateId?: number | undefined;
}

/** The request consists of the CMS Widget Title ConfigurationId to identify the record in which update is required along with the details that are to be updated in the form widget email */
export interface UpdateLinkWidgetConfigurationRequest {
  /** An identifier for the widgets title configuration */
  CMSWidgetTitleConfigurationId: number;
  /** A code associated with the widget */
  CMSWidgetCode: string;
  /** An identifier for the portal associated with the widget */
  PortalId?: number | undefined;
  /** An identifier for the media associated with the widget */
  MediaId?: number | undefined;
  /** The title of the widget */
  Title?: string | undefined;
  /** The URL associated with the widget */
  Url?: string | undefined;
  /** The path to the media associated with the widget */
  MediaPath?: string | undefined;
  /** An identifier for the mapping of the widget */
  CMSMappingId?: number | undefined;
  /** A key associated with the widget */
  WidgetsKey?: string | undefined;
  /** The type of mapping associated with the widget */
  TypeOFMapping?: string | undefined;
  /** The display name of the widget */
  DisplayName?: string | undefined;
  /** The name of the widget */
  WidgetName?: string | undefined;
  /** A flag indicating whether the widget is active or not */
  IsActive?: boolean | undefined;
  /** An identifier for the locale associated with the widget */
  LocaleId: number;
  /** A code associated with the title of the widget */
  TitleCode?: string | undefined;
  /** An identifier for the locale configuration of the widget's title */
  CMSWidgetTitleConfigurationLocaleId?: number | undefined;
  /** The image associated with the widget */
  Image?: string | undefined;
  /** A flag indicating whether the link should open in a new tab or not */
  IsNewTab?: boolean | undefined;
  /** The order in which the widget should be displayed */
  DisplayOrder?: number | undefined;
  /** A flag indicating whether CMS preview is enabled for the widget */
  EnableCMSPreview?: boolean | undefined;
}

/** The request consists of the cms form cms widget brandId to identify the record in which update is required along with the details that are to be updated in the widget brand */
export interface UpdateWidgetBrandRequest {
  /** The display order of the widget brand. */
  DisplayOrder?: number | undefined;
}

/** Response model for the dynamic content associated with a website's portal. */
export interface WebSiteDynamicContentResponse {
  /** The identifier for the portal's custom CSS. Default is 0. */
  PortalCustomCssId?: number;
  /** The identifier for the portal. */
  PortalId?: number;
  /** The dynamic CSS styles applied to the portal. */
  DynamicCssStyle?: string | undefined;
  /** The WYSIWYG (What You See Is What You Get) editor format styles. */
  WYSIWYGFormatStyle?: string | undefined;
  /** Indicates whether the dynamic content is active. */
  IsActive?: boolean;
  /** The state of content publication as a byte value. */
  PublishStateId?: number;
}

/** Response model for the WebSite logo and related theme information. */
export interface WebSiteThameLogoResponse {
  /** Identifier for the CMS Portal Theme. */
  CMSPortalThemeId?: number;
  /** Identifier for the Portal. */
  PortalId?: number;
  /** Identifier for the media associated with the logo. */
  MediaId?: number;
  /** Identifier for the favicon media. */
  FaviconId?: number;
  /** Optional identifier for the CMS Theme CSS. */
  CMSThemeCSSId?: number | undefined;
  /** Title of the website. */
  WebSiteTitle?: string | undefined;
  /** Description of the website. */
  WebsiteDescription?: string | undefined;
  /** Identifier for the CMS Theme. */
  CMSThemeId?: number;
  /** URL of the website's logo. */
  LogoUrl?: string | undefined;
  /** URL of the website's favicon. */
  FaviconUrl?: string | undefined;
  /** Name of the portal. */
  PortalName?: string | undefined;
  /** Name of the theme applied to the portal. */
  ThemeName?: string | undefined;
  /** Name of the parent theme, if any. */
  ParentThemeName?: string | undefined;
  DynamicContent?: WebSiteDynamicContentResponse;
}

/** Represents a response model for blog news comments in a web store. */
export interface WebStoreBlogNewsCommentResponseModel {
  /** The ID of the blog news comment. */
  BlogNewsCommentId?: number;
  /** The ID of the user.
This value can be null if the user is not logged in. */
  UserId?: number | undefined;
  /** The content of the blog comment. */
  BlogComment?: string | undefined;
  /** Gets or sets a value indicating whether the comment is approved. */
  IsApproved?: boolean;
  /** The name of the user who posted the comment. */
  UserName?: string | undefined;
}

export interface WebStoreBlogNewsCommentsRequest {
  /** The locale code. */
  LocaleCode?: string | undefined;
  /** The text of the comment. */
  BlogComment: string;
}

export interface WebStoreBlogNewsResponseModel {
  /** The ID of the blog news. */
  BlogNewsId?: number;
  /** The ID of the portal. */
  PortalId?: number;
  /** The ID of the locale. */
  LocaleId?: number;
  /** The ID of the CMS content pages. */
  CMSContentPagesId?: number;
  /** The ID of the media. */
  MediaId?: number;
  /** The type of the blog news. */
  BlogNewsType?: string | undefined;
  /** The title of the blog news. */
  BlogNewsTitle?: string | undefined;
  /** The overview of the blog news body. */
  BodyOverview?: string | undefined;
  /** The tags associated with the blog news. */
  Tags?: string | undefined;
  /** The SEO title for the blog news. */
  SEOTitle?: string | undefined;
  /** The SEO description for the blog news. */
  SEODescription?: string | undefined;
  /** The SEO keywords for the blog news. */
  SEOKeywords?: string | undefined;
  /** The SEO URL for the blog news. */
  SEOUrl?: string | undefined;
  /** The content of the blog news. */
  BlogNewsContent?: string | undefined;
  /** The media path for the blog news. */
  MediaPath?: string | undefined;
  /** The comments for the blog news. */
  BlogNewsComment?: string | undefined;
  /** Gets or sets a value indicating whether the blog news is active. */
  IsBlogNewsActive?: boolean;
  /** Gets or sets a value indicating whether guest comments are allowed. */
  IsAllowGuestComment?: boolean;
  /** The code for the blog news. */
  BlogNewsCode?: string | undefined;
  /** The activation date for the blog news. */
  ActivationDate?: string | undefined;
  /** The comments associated with the blog news. */
  Comments?: WebStoreBlogNewsCommentResponseModel[] | undefined;
}

export interface WebStoreBlogsNewsResponse {
  BlogNews?: WebStoreBlogNewsResponseModel;
}

/** A response containing a list of WebStoreCategories. */
export interface WebStoreCategoryListResponse {
  PaginationDetail?: ZnodePaginationDetail;
  /** Gets or sets the list of webstore categories. */
  Categories?: WebStoreCategoryModelResponse[] | undefined;
}

/** A response containing details of a webstore category. */
export interface WebStoreCategoryModelResponse {
  /** Gets or sets the published category ID. */
  PublishCategoryId?: number;
  /** Gets or sets the catalog ID. */
  ZnodeCatalogId?: number;
  /** Gets or sets the published catalog ID. */
  PublishedCatalogId?: string | undefined;
  /** Gets or sets the array of product IDs associated with the category. */
  ProductIds?: number[] | undefined;
  /** Gets or sets the locale ID. */
  LocaleId?: number;
  /** Gets or sets the list of attributes for the category. */
  Attributes?: PublishAttributeModelResponse[] | undefined;
  /** Gets or sets a value indicating whether the category is active. */
  IsActive?: boolean | undefined;
  /** Gets or sets the name of the catalog. */
  CatalogName?: string | undefined;
  /** Gets or sets the activation date of the category. */
  ActivationDate?: Date | undefined;
  /** Gets or sets the expiration date of the category. */
  ExpirationDate?: Date | undefined;
  /** Gets or sets the category name. */
  CategoryName?: string | undefined;
  /** Gets or sets the category code. */
  CategoryCode?: string | undefined;
  SEODetails?: WebStoreSEOModelResponse;
  /** Gets or sets the list of subcategories for the web store category. */
  SubCategories?: WebStoreCategoryModelResponse[] | undefined;
}

export interface WebStoreContentPageListResponse {
  /** Model to get the contentpages details. */
  ContentPageList?: WebStoreContentPageResponse[] | undefined;
}

export interface WebStoreContentPageResponse {
  /** The unique identifier for the content page. */
  ContentPageId?: number;
  /** The name of the file associated with the content page. */
  FileName?: string | undefined;
  /** The unique identifier for the portal. */
  PortalId?: number;
  /** The title of the content page. */
  PageTitle?: string | undefined;
  /** The name of the content page. */
  PageName?: string | undefined;
  /** The date and time when the content page becomes active.
Nullable to allow for no activation date. */
  ActivationDate?: Date | undefined;
  /** The date and time when the content page expires.
Nullable to allow for no expiration date. */
  ExpirationDate?: Date | undefined;
  /** The unique identifier for the mapping. */
  MappingId?: number;
  /** The type of mapping associated with the content page. */
  TypeOFMapping?: string | undefined;
  /** The unique identifier for the locale. */
  LocaleId?: number;
  /** The key for the widgets used on the content page. */
  WidgetsKey?: string | undefined;
  /** The main text content of the page. */
  Text?: string | undefined;
  /** The SEO title for the content page. */
  SEOTitle?: string | undefined;
  /** The SEO description for the content page. */
  SEODescription?: string | undefined;
  /** The SEO keywords for the content page. */
  SEOKeywords?: string | undefined;
  /** The SEO-friendly URL for the content page. */
  SEOUrl?: string | undefined;
  /** The canonical URL for the content page. */
  CanonicalURL?: string | undefined;
  /** The robot tag for the content page, controlling how search engines index it. */
  RobotTag?: string | undefined;
  /** The array of text segments for the content page. */
  Texts?: string[] | undefined;
  /** The version identifier for the content page. */
  VersionId?: number;
}

export interface WebStoreLinkProductsResponse {
  /** The name of the attribute. */
  AttributeName?: string | undefined;
  /** List of products to be published. */
  PublishProduct?: PublishProductsModel[] | undefined;
}

export interface WebStoreLinkWidgetsResponse {
  /** If there are no errors, API returns the data for a link widget with the requested parameters.
If an error occurs during the execution then an appropriate error response will be returned. */
  LinkDataList?: LinkWidgetsConfigurationResponseModel[] | undefined;
}

/** Represents the SEO details for a web store category. */
export interface WebStoreSEOModelResponse {
  /** Gets or sets the SEO description for the category. */
  SEODescription?: string | undefined;
  /** Gets or sets the SEO keywords for the category. */
  SEOKeywords?: string | undefined;
  /** Gets or sets the SEO title for the category. */
  SEOTitle?: string | undefined;
  /** Gets or sets the SEO page name for the category. */
  SEOPageName?: string | undefined;
}

/** Represents the response for a web store widget brand. */
export interface WebStoreWidgetBrandResponse {
  /** The mapping identifier. */
  MappingId?: number;
  /** The portal identifier. */
  PortalId?: number;
  /** The widget key. */
  WidgetsKey?: string | undefined;
  /** The type of mapping. */
  TypeOFMapping?: string | undefined;
  BrandModel?: BrandsResponse;
}

export interface WebStoreWidgetBrandsListResponse {
  Brands?: WebStoreWidgetBrandResponse[] | undefined;
}

export interface WebStoreWidgetCategoryResponse {
  /** Category List Widget Response. */
  Categories?: WebStoreWidgetCategoryResponseModel[] | undefined;
}

export interface WebStoreWidgetCategoryResponseModel {
  /** The unique identifier for CMS widget categories. */
  WidgetCategoryId?: number;
  /** The unique identifier for CMS widget categories. */
  ZnodeCategoryId?: number;
  /** The identifier for CMS mapping. */
  MappingId?: number;
  /** The identifier for the portal. */
  PortalId?: number;
  /** The key associated with the widgets. */
  WidgetsKey?: string | undefined;
  /** The type of mapping for the link widget. */
  TypeOFMapping?: string | undefined;
  /** The Display order for the category widgets. */
  DisplayOrder?: number | undefined;
  PublishCategoryModel?: PublishCategoryResponseModel;
  /** The unique code for the categories. */
  CategoryCode?: string | undefined;
}

export interface WebStoreWidgetProductsResponse {
  WidgetsProductModel?: PublishWidgetsProductsResponse;
}

/** Represents a response containing pagination details and a list of widget brands. */
export interface WidgetBrandListResponse {
  PaginationDetail?: ZnodePaginationDetail;
  /** The list of widget brands. */
  Brands?: WidgetBrandResponse[] | undefined;
}

/** Represents a response model for widget brand information. */
export interface WidgetBrandResponse {
  /** The identifier of the CMS widget brand. */
  CMSWidgetBrandId?: number;
  /** The identifier of the brand. */
  BrandId?: number;
  /** The identifier of the CMS widgets. */
  CMSWidgetsId?: number;
  /** The key associated with the widgets. */
  WidgetsKey?: string | undefined;
  /** The identifier of the CMS mapping. */
  CMSMappingId?: number;
  /** The type of mapping for the widgets. */
  TypeOFMapping?: string | undefined;
  /** The display order of the widget brand. */
  DisplayOrder?: number | undefined;
}

/** Represents a model for associating multiple CMSWidgetProductRequest objects with a widget. */
export interface WidgetProductListModel {
  /** The list of CMSWidgetProductRequest objects to associate with the widget. */
  CMSWidgetProducts?: CMSWidgetProductRequest[] | undefined;
}

export interface WidgetProductsResponse {
  /** The list of products associated with the webstore widget. */
  Products?: WebStoreWidgetProductsResponse[] | undefined;
}

/** A response containing a list of widgets. */
export interface WidgetsListResponse {
  /** The list of CMS widget responses. */
  CMSWidgetsList?: CMSWidgetResponse[] | undefined;
}

export interface WidgetsSlidersResponse {
  /** The CMS widget slider banner identifier. */
  CMSWidgetSliderBannerId?: number;
  /** The CMS slider identifier. */
  CMSSliderId?: number;
  /** The portal identifier associated with the CMS widget slider banner. */
  PortalId?: number;
  /** The type of the CMS widget slider banner. */
  Type?: string | undefined;
  /** The navigation settings for the CMS widget slider banner. */
  Navigation?: string | undefined;
  /** Indicates whether auto play is enabled for the slider. */
  AutoPlay?: boolean;
  /** Indicates whether auto play pauses when hovering over the slider. */
  AutoplayHoverPause?: boolean;
  /** The transaction style of the slider. */
  TransactionStyle?: string | undefined;
  /** The locale identifier associated with the CMS widget slider banner. */
  LocaleId?: number;
  /** Indicates whether CMS preview is enabled. */
  EnableCMSPreview?: boolean;
  /** Auto play TimeOut for product. */
  AutoplayTimeOut?: number | undefined;
  /** The list of banners associated with the slider. */
  SliderBanners?: BannersModel[] | undefined;
}

/** Represents a request model for account address. */
export interface AccountAddressRequestModel {
  /** The display name. */
  DisplayName?: string | undefined;
  /** The first line of the address. */
  Address1: string;
  /** The second line of the address. */
  Address2?: string | undefined;
  /** The first name associated with the address. */
  FirstName: string;
  /** The last name associated with the address. */
  LastName: string;
  /** The company name associated with the address. */
  CompanyName?: string | undefined;
  /** The country name. */
  CountryName: string;
  /** The state name. */
  StateName: string;
  /** The city name. */
  CityName: string;
  /** A value indicating whether the address is used for shipping. */
  IsShipping?: boolean;
  /** A value indicating whether the address is used for billing. */
  IsBilling?: boolean;
  /** A value indicating whether the address is the default billing address. */
  IsDefaultBilling?: boolean;
  /** A value indicating whether the address is the default shipping address. */
  IsDefaultShipping?: boolean;
  /** The postal code. */
  PostalCode: string;
  /** The phone number. */
  PhoneNumber: string;
}

/** Represents the response model containing account details. */
export interface AccountDetailReponseModel {
  Account?: AccountResponseModel;
}

/** Represents the details of an account, including the associated company account. */
export interface AccountDetailsModel {
  CompanyAccount?: AccountRequestModel;
}

/** Represents the response model for a list of account orders. */
export interface AccountOrdersListResponseModel {
  /** The list of orders. */
  Orders?: OrderResponseModel[] | undefined;
}

export interface AccountRequestModel {
  /** the identifier of the account. */
  AccountId: number;
  /** the property represents an identifier used externally to reference or identify the account. */
  CatalogName?: string | undefined;
  /** the property represents an identifier used externally to reference or identify the account. */
  ExternalId?: string | undefined;
  /** the name of the person. */
  Name: string;
  /** the property is used to associate the current account. */
  ParentAccountId?: number;
  /** the property is used to associate the current account name. */
  ParentAccountName?: number;
  /** the catalog associated to account to set the different catalogs to user. */
  PublishCatalogId: number;
  AccountAddress?: AccountAddressRequestModel;
}

/** Represents the response model for account details. */
export interface AccountResponseModel {
  /** The unique identifier for the account. */
  AccountId?: number;
  /** The identifier for the parent account, if any. */
  ParentAccountId?: number | undefined;
  /** The name of the account. */
  Name?: string | undefined;
  /** The external identifier for the account. */
  ExternalId?: string | undefined;
  /** The identifier for the published catalog associated with the account. */
  PublishCatalogId?: number | undefined;
  /** The code for the account. */
  AccountCode: string;
  /** The identifier for the sales representative associated with the account. */
  SalesRepId?: number;
  Address?: AddressResponse;
}

export interface AddressResponse {
  /** The unique identifier for the address. */
  AddressId?: number;
  /** The first name associated with the address. */
  FirstName?: string | undefined;
  /** The last name associated with the address. */
  LastName?: string | undefined;
  /** The display name associated with the address. */
  DisplayName?: string | undefined;
  /** The company name associated with the address. */
  CompanyName?: string | undefined;
  /** The first line of the address. */
  Address1?: string | undefined;
  /** The second line of the address. */
  Address2?: string | undefined;
  /** The third line of the address. */
  Address3?: string | undefined;
  /** The name of the country. */
  CountryName?: string | undefined;
  /** The name of the state or region. */
  StateName?: string | undefined;
  /** The name of the city. */
  CityName?: string | undefined;
  /** The postal code or ZIP code. */
  PostalCode?: string | undefined;
  /** The contact phone number. */
  PhoneNumber?: string | undefined;
  /** The mobile phone number. */
  MobileNumber?: string | undefined;
  /** The alternate mobile phone number. */
  AlternateMobileNumber?: string | undefined;
  /** The fax number. */
  FaxNumber?: string | undefined;
  /** The value indicating whether this is the default billing address. */
  IsDefaultBilling?: boolean;
  /** The value indicating whether this is the default shipping address. */
  IsDefaultShipping?: boolean;
  /** The value indicating whether the address is active. */
  IsActive?: boolean;
  /** The external identifier associated with the address. */
  ExternalId?: string | undefined;
  /** The value indicating whether the address is used for shipping. */
  IsShipping?: boolean;
  /** The value indicating whether the address is used for billing. */
  IsBilling?: boolean;
  /** The email address associated with the address. */
  EmailAddress?: string | undefined;
  /** The custom field for additional information. */
  Custom1?: string | undefined;
  /** The custom field for additional information. */
  Custom2?: string | undefined;
  /** The custom field for additional information. */
  Custom3?: string | undefined;
  /** The custom field for additional information. */
  Custom4?: string | undefined;
  /** The custom field for additional information. */
  Custom5?: string | undefined;
}

/** Represents a user request with an optional portal ID and login user details. */
export interface ChangePasswordRequestModel {
  /** The optional portal ID. */
  StoreCode?: string | undefined;
  User?: ChangePasswordUserRequest;
}

/** Represents the login user details. */
export interface ChangePasswordUserRequest {
  /** The user name. */
  UserName: string;
  /** The new password. */
  NewPassword: string;
  /** The password. */
  Password?: string | undefined;
  /** The password token. */
  PasswordToken?: string | undefined;
}

export interface ContentDetailsRequestModel {
  /** Content type of the request. */
  ContentType: string;
  /** Required length for the content. */
  ContentLength: number;
}

/** Represents a response containing a list of countries along with pagination details. */
export interface CountriesListResponse {
  PaginationDetail?: ZnodePaginationDetail;
  /** The list of country responses. */
  Countries?: CountryResponse[] | undefined;
}

/** Represents a country response model containing details of a country associated with a portal. */
export interface CountryResponse {
  /** The unique identifier of the country. */
  CountryId?: number;
  /** The code of the country. */
  CountryCode?: string | undefined;
  /** The name of the country. */
  CountryName?: string | undefined;
  /** The value indicating whether the country is active. */
  IsActive?: boolean;
  /** The value indicating whether the country is the default. */
  IsDefault?: boolean;
  /** The unique identifier of the portal country. */
  PortalCountryId?: number;
  /** The unique identifier of the portal. */
  PortalId?: number;
  /** The display order of the country in the list. */
  DisplayOrder?: number;
}

/** Represents a request to create an account department. */
export interface CreateAccountDepartmentRequestModel {
  /** the name of the department. */
  DepartmentName?: string | undefined;
  /** property represents the ID of the account associated with the user. */
  AccountId: number;
}

/** The request consists of the Account Code, Published Catalog ID, and Parent Account ID (which is an optional parameter that, if left blank, will create a parent account). */
export interface CreateAccountRequestModel {
  CreatedBy?: number;
  /** the name of the person. */
  Name: string;
  /** the property represents an identifier used externally to reference or identify the account. */
  Externalid?: string | undefined;
  /** the property is used to associate the current account. */
  ParentAccountId?: number | undefined;
  /** the catalog associated to account to set the different catalogs to user. */
  PublishCatalogId: number;
  /** the code associated with the account. */
  AccountCode: string;
  /** the identifier of the sales representative associated with the account. */
  SalesRepId?: number;
}

export interface CreateAddressRequest {
  /** The first name associated with the address. */
  FirstName: string;
  /** The last name associated with the address. */
  LastName: string;
  /** The display name associated with the address. */
  DisplayName?: string | undefined;
  /** The company name associated with the address. */
  CompanyName?: string | undefined;
  /** The first line of the address. */
  Address1: string;
  /** The second line of the address. */
  Address2?: string | undefined;
  /** The third line of the address. */
  Address3?: string | undefined;
  /** The name of the country. */
  CountryName: string;
  /** The name of the state or region. */
  StateName: string;
  /** The name of the city. */
  CityName: string;
  /** The postal code or ZIP code. */
  PostalCode: string;
  /** The contact phone number. */
  PhoneNumber?: string | undefined;
  /** The mobile phone number. */
  MobileNumber?: string | undefined;
  /** The alternate mobile phone number. */
  AlternateMobileNumber?: string | undefined;
  /** The fax number. */
  FaxNumber?: string | undefined;
  /** The value indicating whether this is the default billing address. */
  IsDefaultBilling?: boolean;
  /** The value indicating whether this is the default shipping address. */
  IsDefaultShipping?: boolean;
  /** The value indicating whether the address is active. */
  IsActive?: boolean;
  /** The external identifier associated with the address. */
  ExternalId?: string | undefined;
  /** The value indicating whether the address is used for shipping. */
  IsShipping?: boolean;
  /** The value indicating whether the address is used for billing. */
  IsBilling?: boolean;
  /** The email address associated with the address. */
  EmailAddress?: string | undefined;
  /** The custom field for additional information. */
  Custom1?: string | undefined;
  /** The custom field for additional information. */
  Custom2?: string | undefined;
  /** The custom field for additional information. */
  Custom3?: string | undefined;
  /** The custom field for additional information. */
  Custom4?: string | undefined;
  /** The custom field for additional information. */
  Custom5?: string | undefined;
}

export interface CreateGeneralSettingRequest {
  /** The name of the feature for the general setting. */
  FeatureName?: string | undefined;
  /** The values associated with the feature. */
  FeatureValues?: string | undefined;
  /** Represents any sub-values associated with the feature. */
  FeatureSubValues?: string | undefined;
}

/** Represents a request to create a login user, including their email, password, username, and password token. */
export interface CreateLoginUserRequest {
  /** The email of the user. */
  Email: string;
  /** The password of the user. */
  Password: string;
  /** The username of the user. */
  Username: string;
}

/** The request comprises of the Note Title which is a mandatory input and Note Body which is an optional field. */
export interface CreateNoteRequestModel {
  CreatedBy?: number;
  /** The ID of the user associated with the note. */
  UserId: number;
  /** The ID of the account associated with the note (nullable). */
  AccountId: number;
  /** The ID of the case request associated with the note (nullable). */
  CaseRequestId?: number | undefined;
  /** The title of the note. */
  NoteTitle?: string | undefined;
  /** The body or content of the note (nullable). */
  NoteBody?: string | undefined;
}

/** Represents the request model for creating a permission code. */
export interface CreatePermissionCodeRequestModel {
  CreatedBy?: number;
  /** sets the ID of the account user permission associated with the code (nullable). */
  AccountUserPermissionId?: number | undefined;
  /** sets the ID of the account permission access associated with the code (nullable). */
  AccountPermissionAccessId?: number | undefined;
  /** sets the ID of the user for whom the permission code is being created. */
  UserId?: number;
}

/** Represents a request to create an profile. */
export interface CreateProfileRequestModel {
  CreatedBy?: number;
  /** A string property holding the pofilename associated with the user. */
  ProfileName: string;
  /** A boolean property indicating whether the profile should be displayed during partner signup. */
  ShowOnPartnerSignup?: boolean;
  /** A boolean property specifying whether the profile is tax-exempt. */
  TaxExempt?: boolean;
  /** A string property representing the default external account number associated with the profile. */
  DefaultExternalAccountNo?: string | undefined;
  /** A nullable decimal property, possibly representing a weighting factor associated with the profile. */
  Weighting?: number | undefined;
  /** Represents the parent profile's identifier. */
  ParentProfileId?: number | undefined;
  /** Represents the Product Information Management (PIM) catalog identifier. */
  PimCatalogId?: number | undefined;
}

/** Represents a request model for creating a user. */
export interface CreateUserRequest {
  /** The phone number of the user. */
  PhoneNumber?: string | undefined;
  /** The first name of the user. */
  FirstName?: string | undefined;
  /** The middle name of the user. */
  MiddleName?: string | undefined;
  /** The last name of the user. */
  LastName?: string | undefined;
  /** The unique identifier for the guestuser. */
  IsGuestUser?: boolean;
  User?: CreateLoginUserRequest;
  /** Indicates whether the user has opted in for email communications. */
  EmailOptIn?: boolean;
  /** Unique identifier for the UserVerificationType. */
  UserVerificationType?: string | undefined;
  /** Indicates whether the user has opted in for SMS communications. */
  SMSOptIn?: boolean;
  /** The external ID of the user. */
  ExternalId?: string | undefined;
  /** The Portal Id  associated with the user. */
  PortalId?: number;
  /** The unique profile id field. */
  ProfileId?: number;
  /** Indicates whether the user is a web store user. */
  IsWebStoreUser?: boolean;
  UserVerificationTypeCode?: UserVerificationTypeEnum;
}

/** This model consist of the custom permission list response. */
export interface CustomPermissionsListResponse {
  /** List containing the custom permissions. */
  CustomPermissionsList?: CustomPermissionsResponse[] | undefined;
}

/** This model contains the request of the custom permission */
export interface CustomPermissionsRequestModel {
  /** The object name for which the custom permission has been created. The object is referred as the "menu name". */
  Object: string;
  /** The unique code provided to the custom permission. */
  PermissionCode: string;
  /** The name provided to the custom permission. */
  PermissionName: string;
  /** The application type against which the custom permission has been saved. The application type is referred as "menu type". */
  ApplicationType: string;
  /** Flag consisting if the permission is allowed to the respective role or not. */
  IsAllowed?: boolean;
  /** The name of the role. */
  RoleName?: string | undefined;
}

/** This model contains the response of the custom permission. */
export interface CustomPermissionsResponse {
  /** The object name for which the custom permission has been created. The object is referred as the "menu name". */
  Object?: string | undefined;
  /** The unique code provided to the custom permission. */
  PermissionCode?: string | undefined;
  /** The name provided to the custom permission. */
  PermissionName?: string | undefined;
  /** The application type against which the custom permission has been saved. */
  ApplicationType?: string | undefined;
  /** Flag consisting if the permission is allowed to the respective role or not. */
  IsAllowed?: boolean;
  RoleName?: string | undefined;
  AccessPermissionId?: number;
}

export interface ExternalAuthInfo {
  LoginProvider?: string | undefined;
  ProviderKey?: string | undefined;
  ProviderDisplayName?: string | undefined;
}

export interface GlobalAttributeDetailsRequestModel {
  /** Code of the attribute */
  AttributeCode: string;
  /** Value of the attribute */
  AttributeValue?: string | undefined;
  /** Locale Code for the attribute. */
  LocaleCode: string;
  /** Name of the entity where the attribute has been associated. */
  EntityType: string;
  /** Code of the entity where the attribute has been associated. */
  EntityCode: string;
}

export interface GlobalAttributeRequestModel {
  /** List containing Global Attribute Details which needs to be changed. */
  GlobalAttributeDetails?: GlobalAttributeDetailsRequestModel[] | undefined;
  /** User Id */
  UserId: number;
  /** Store code. */
  StoreCode?: string | undefined;
}

export interface GlobalAttributesFamilyListResponse {
  /** Global attributes family response. */
  AttributeFamily?: GlobalAttributesFamilyResponse[] | undefined;
  PaginationDetail?: ZnodePaginationDetail;
}

/** Represents the response model for Global Attribute Family. */
export interface GlobalAttributesFamilyResponse {
  /** The unique identifier for the Global Attribute Family. */
  GlobalAttributeFamilyId?: number;
  /** The code for the Global Attribute Family. */
  FamilyCode?: string | undefined;
  /** The name of the Global Attribute Family. */
  AttributeFamilyName?: string | undefined;
  /** The unique identifier for the Global Entity associated with this Attribute Family. */
  GlobalEntityId?: number;
  /** The name of the Global Entity. */
  EntityName?: string | undefined;
}

export interface ImpersonationAPIResponseModel {
  /** The token used for impersonation. */
  Token?: string | undefined;
  /** The ID of the CSR user. */
  CRSUserId?: number;
  /** The ID of the webstore user. */
  WebstoreUserId?: number;
  /** Indicates whether the request is for impersonation. */
  IsImpersonation?: boolean;
  /** The username of the impersonated user. */
  UserName?: string | undefined;
  /** Indicates whether the impersonation was successful. */
  Result?: boolean;
  /** The admin username of the impersonated user. */
  AdminUserName?: string | undefined;
}

/** The request model used for impersonation purposes. */
export interface ImpersonationRequestModel {
  /** The token used for impersonation authentication. */
  Token: string;
}

/** Represents the response model for an impersonation request. */
export interface ImpersonationResponseModel {
  ImpersonationModel?: ImpersonationAPIResponseModel;
}

export interface InsertLogRequestModel {
  /** The id of the log message. */
  LogMessageId: string;
  /** Name of the Component. */
  Component: string;
  /** Trace level of the log message. */
  TraceLevel: string;
  /** Log message details. */
  LogMessage: string;
  /** Created date of the log message. */
  CreatedDate: Date;
  /** Domain name of the log message. */
  DomainName: string;
  /** Stack trace message of the log message. */
  StackTraceMessage?: string | undefined;
}

/** Represents a login request model. */
export interface LoginRequestModel {
  /** The optional portal ID. */
  PortalId?: number | undefined;
  User?: LoginUserRequestModel;
}

/** Represents the user's login request model containing the user's credentials. */
export interface LoginUserRequestModel {
  /** The username of the user. */
  Username: string;
  /** The password of the user. */
  Password: string;
  /** Indicates whether the user wants to be remembered on the device. */
  RememberMe?: boolean;
}

export interface MultipleContentRequestModel {
  /** Refers to what is the content needed for. */
  ContentFor: string;
  /** The primary context of the request. */
  PrimaryContext: string;
  /** List of content details required. */
  ContentDetails: ContentDetailsRequestModel[];
  /** Extra context provided so that the AI can give more specialized response. */
  ExtraContext: string;
}

/** News latter sign up request model. */
export interface NewsLetterSignUpRequest {
  Email: string;
}

/** Represents the response model for a list of orders, including pagination details. */
export interface OrderListModelResponse {
  PaginationDetail?: ZnodePaginationDetail;
  OrderList?: AccountOrdersListResponseModel;
}

/** Represents the response model for an order. */
export interface OrderResponseModel {
  /** The culture code associated with the order. */
  CultureCode?: string | undefined;
  /** The currency code used for the order. */
  CurrencyCode?: string | undefined;
  /** The unique identifier for the order in the OMS. */
  OmsOrderId?: number;
  /** The total amount of the order. */
  OrderAmount?: number;
  /** The date when the order was placed. */
  OrderDate?: Date;
  /** The order number. */
  OrderNumber?: string | undefined;
  /** The state of the order. */
  OrderState?: string | undefined;
  /** The display name of the payment method used for the order. */
  PaymentDisplayName?: string | undefined;
  /** The payment status of the order. */
  PaymentStatus?: string | undefined;
  /** The type of payment used for the order. */
  PaymentType?: string | undefined;
  /** The identifier of the portal where the order was placed. */
  PortalId?: number;
  /** The identifier of the user who placed the order. */
  UserId?: number;
  /** The username of the user who placed the order. */
  UserName?: string | undefined;
  /** The unique identifier for the order state in the OMS. */
  OmsOrderStateId?: number;
  /** The unique identifier for the payment type, if applicable. */
  PaymentTypeId?: number | undefined;
  /** The unique identifier for the payment state in the OMS, if applicable. */
  OmsPaymentStateId?: number | undefined;
}

/** Represents the response model for portal approval. */
export interface PortalApprovalModelResponse {
  /** The portal approval identifier. */
  PortalApprovalId?: number;
  /** Gets or sets a value indicating whether approval management is enabled. */
  EnableApprovalManagement?: boolean;
  /** The portal approval type identifier. */
  PortalApprovalTypeId?: number;
  /** The portal approval level identifier. */
  PortalApprovalLevelId?: number;
  /** The order limit. */
  OrderLimit?: number | undefined;
  /** The portal identifier. */
  PortalId?: number;
  /** The list of user approvers. */
  UserApprover?: UserApproverResponse[] | undefined;
  /** The list of portal payment user approvers. */
  PortalPaymentUserApproverList?: PortalPaymentApproverResponse[] | undefined;
  /** The list of portal approval types. */
  PortalApprovalTypes?: SelectListItem[] | undefined;
  /** The list of portal approval levels. */
  PortalApprovalLevel?: SelectListItem[] | undefined;
  /** The name of the portal approval type. */
  PortalApprovalTypeName?: string | undefined;
}

/** Represents the response model for portal payment approvers. */
export interface PortalPaymentApproverResponse {
  /** The portal payment approval identifier. */
  PortalPaymentApprovalId?: number;
  /** The payment type identifier. */
  PaymentTypeID?: number;
  /** The payment setting identifiers. */
  PaymentSettingIds?: string[] | undefined;
  /** The approval user identifiers. */
  ApprovalUserIds?: string[] | undefined;
  /** The portal payment group identifier. */
  PortalPaymentGroupId?: number | undefined;
  /** The portal payment group code. */
  PortalPaymentGroupCode?: string | undefined;
  /** The unique identifier for the configurationSetCodes. */
  ConfigurationSetCodes?: string[] | undefined;
}

/** Represents the response model for portal profile information. */
export interface PortalProfileResponse {
  /** The unique identifier for the portal profile. */
  PortalProfileID?: number;
  /** The unique identifier for the portal. */
  PortalId?: number;
  /** The unique identifier for the profile. */
  ProfileId?: number;
  /** The value indicating whether this is the default anonymous profile. */
  IsDefaultAnonymousProfile?: boolean;
  /** The value indicating whether this is the default registered profile. */
  IsDefaultRegistedProfile?: boolean;
  /** The name of the profile. */
  ProfileName?: string | undefined;
  /** The unique identifier for the parent profile, if any. */
  ParentProfileId?: number | undefined;
  /** The profile number. */
  ProfileNumber?: string | undefined;
}

export interface PortalProfilesListResponse {
  PaginationDetail?: ZnodePaginationDetail;
  /** The list of portal profiles. */
  PortalProfiles?: PortalProfileResponse[] | undefined;
}

/** Represents a response containing portal approval information. */
export interface PortalsApprovalResponse {
  PortalApprovalModel?: PortalApprovalModelResponse;
}

export interface ProfilesModel {
  /** The unique identifier for the account profile. */
  AccountProfileId?: number;
  /** The unique identifier for the profile. */
  ProfileId?: number;
  /** The name of the profile. */
  ProfileName?: string | undefined;
  /** The association status of the profile (1 for associated, 0 for not associated). */
  IsAssociated?: number;
  /** The default external account number for the profile. */
  DefaultExternalAccountNo?: string | undefined;
  /** The value indicating whether the profile is the default (true if default, false if not, null if unknown). */
  IsDefault?: boolean | undefined;
  /** The string containing multiple profile IDs, possibly in a comma-separated format. */
  ProfileIds?: string | undefined;
}

/** Represents a request to create a web store user/account address. */
export interface CreateWebStoreAccountAddressRequest {
  /** The first line of the address. */
  Address1: string;
  /** The second line of the address. */
  Address2?: string | undefined;
  /** The third line of the address. */
  Address3?: string | undefined;
  /** The display name for the address. */
  DisplayName: string;
  /** The first name associated with the address. */
  FirstName: string;
  /** The last name associated with the address. */
  LastName: string;
  /** The name of the country. */
  CountryCode: string;
  /** The name of the city. */
  CityName: string;
  /** The state code. */
  StateCode: string;
  /** The postal code. */
  PostalCode: string;
  /** The phone number. */
  PhoneNumber: string;
  /** Indicates whether this address is the default billing address. */
  IsDefaultBilling?: boolean;
  /** Indicates whether this address is the default shipping address. */
  IsDefaultShipping?: boolean;
  /** Indicates whether the address is active. */
  IsActive?: boolean;
  /** Indicates whether the address is a shipping address. */
  IsShipping?: boolean;
  /** Indicates whether the address is a billing address. */
  IsBilling?: boolean;
  /** The mobile number. */
  Mobilenumber?: string | undefined;
  /** The alternate mobile number. */
  AlternateMobileNumber?: string | undefined;
  /** The fax number. */
  FaxNumber?: string | undefined;
  /** The email address. */
  EmailAddress?: string | undefined;
  /** The external identifier. */
  ExternalId?: string | undefined;
  /** The company name. */
  CompanyName?: string | undefined;
}

export interface UpdateUserAccountStatusRequest {
  /** Indicates whether the user account needs to enabled or disabled. */
  Enabled: boolean;
}

export interface ResetPasswordLinkRequest {
  /** The optional portal ID. */
  PortalId?: number | undefined;
  User?: ResetPasswordLinkUserRequest;
}

export interface ResetPasswordLinkUserRequest {
  /** The user name. */
  UserName: string;
  /** The password token. */
  PasswordToken: string;
}

/** The response containing a list of customer addresses along with pagination details. */
export interface AddressLocationListResponse {
  /** The list of customer addresses. */
  AddressList?: AddressResponse[] | undefined;
}

/** The response model contains the attribute code, attribute name and attribute value. */
export interface AttributeValueResponse {
  /** The attribute code. */
  AttributeCode?: string | undefined;
  /** The attribute name. */
  AttributeName?: string | undefined;
  /** The attribute value. */
  AttributeValue?: string | undefined;
}

/** A response object containing a list of cache data. */
export interface CacheListResponse {
  /** The list of cache responses. */
  CacheData?: CacheResponse[] | undefined;
}

/** A response object containing cache information. */
export interface CacheResponse {
  /** The ID of the application cache. */
  ApplicationCacheId?: number;
  /** The duration of the cache in seconds. */
  Duration?: number | undefined;
  /** The type of application. */
  ApplicationType?: string | undefined;
  /** The list of domain IDs associated with the cache. */
  DomainIds?: number[] | undefined;
  /** Gets or sets a value indicating whether the cache is active. */
  IsActive?: boolean;
  /** The start date of the cache. */
  StartDate?: Date | undefined;
  /** The list of Cloudflare error responses associated with the cache. */
  CloudflareErrorList?: CloudflareErrorResponse[] | undefined;
}

/** The response received from Cloudflare when an error occurs. */
export interface CloudflareErrorResponse {
  /** The ID of the domain associated with the error. */
  DomainId?: number;
  /** The status of the error response. */
  Status?: boolean;
  /** The error message returned by Cloudflare. */
  ErrorMessage?: string | undefined;
}

/** The response containing configuration settings. */
export interface ConfigurationSettingResponse {
  /** A value indicating whether promotions and coupons are allowed to be used together. */
  IsAllowWithOtherPromotionsAndCoupons?: boolean;
  /** A value indicating whether tax calculation occurs after applying discounts. */
  IsCalculateTaxAfterDiscount?: boolean;
  /** The list of allowed promotions. */
  AllowedPromotions?: string | undefined;
}

export interface ContentResponseModel {
  /** Content Type of the response. */
  ContentType?: string | undefined;
  /** Actual content of the response. */
  Content?: string | undefined;
}

/** The response model is used to creating a new address. */
export interface CreateAddressResponse {
  /** The unique identifier for the address. */
  AddressId?: number;
  /** The first name associated with the address. */
  FirstName?: string | undefined;
  /** The last name associated with the address. */
  LastName?: string | undefined;
  /** The display name associated with the address. */
  DisplayName?: string | undefined;
  /** The company name associated with the address. */
  CompanyName?: string | undefined;
  /** The first line of the address. */
  Address1?: string | undefined;
  /** The second line of the address. */
  Address2?: string | undefined;
  /** The third line of the address. */
  Address3?: string | undefined;
  /** The name of the country. */
  CountryName?: string | undefined;
  /** The name of the state or region. */
  StateName?: string | undefined;
  /** The name of the city. */
  CityName?: string | undefined;
  /** The postal code or ZIP code. */
  PostalCode?: string | undefined;
  /** The contact phone number. */
  PhoneNumber?: string | undefined;
  /** The mobile phone number. */
  MobileNumber?: string | undefined;
  /** The alternate mobile phone number. */
  AlternateMobileNumber?: string | undefined;
  /** The fax number. */
  FaxNumber?: string | undefined;
  /** The value indicating whether this is the default billing address. */
  IsDefaultBilling?: boolean;
  /** The value indicating whether this is the default shipping address. */
  IsDefaultShipping?: boolean;
  /** The value indicating whether the address is active. */
  IsActive?: boolean;
  /** The external identifier associated with the address. */
  ExternalId?: string | undefined;
  /** The value indicating whether the address is used for shipping. */
  IsShipping?: boolean;
  /** The value indicating whether the address is used for billing. */
  IsBilling?: boolean;
  /** The email address associated with the address. */
  EmailAddress?: string | undefined;
  /** The custom field for additional information. */
  Custom1?: string | undefined;
  /** The custom field for additional information. */
  Custom2?: string | undefined;
  /** The custom field for additional information. */
  Custom3?: string | undefined;
  /** The custom field for additional information. */
  Custom4?: string | undefined;
  /** The custom field for additional information. */
  Custom5?: string | undefined;
}

/** The response data structure returned after creating a new general setting. */
export interface CreateGeneralSettingResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  /** The unique identifier of the created general setting. */
  ZnodeGlobalSettingId?: number;
  /** The name of the feature associated with the general setting. */
  FeatureName?: string | undefined;
  /** The values associated with the feature. */
  FeatureValues?: string | undefined;
  /** The sub-values associated with the feature. */
  FeatureSubValues?: string | undefined;
}

/** The response containing a list of customer addresses along with pagination details. */
export interface CustomerAddressListResponse {
  PaginationDetail?: ZnodePaginationDetail;
  /** The list of customer addresses. */
  AddressList?: CustomerAddressResponse[] | undefined;
}

/** The details of a customer's address. */
export interface CustomerAddressResponse {
  /** The unique identifier for the address. */
  AddressId?: number;
  /** The first line of the address. */
  Address1?: string | undefined;
  /** The second line of the address. */
  Address2?: string | undefined;
  /** The third line of the address. */
  Address3?: string | undefined;
  /** The display name for the address. Maximum length is 600 characters. */
  DisplayName?: string | undefined;
  /** The first name of the person associated with the address. Maximum length is 300 characters. */
  FirstName?: string | undefined;
  /** The last name of the person associated with the address. Maximum length is 300 characters. */
  LastName?: string | undefined;
  /** The name of the country for the address. */
  CountryName?: string | undefined;
  /** The name of the state for the address. */
  StateName?: string | undefined;
  /** The name of the city for the address. */
  CityName?: string | undefined;
  /** The postal code for the address. Maximum length is 50 characters. */
  PostalCode?: string | undefined;
  /** The phone number associated with the address. Maximum length is 50 characters. */
  PhoneNumber?: string | undefined;
  /** The value indicating whether this address is the default billing address. */
  IsDefaultBilling?: boolean;
  /** The value indicating whether this address is the default shipping address. */
  IsDefaultShipping?: boolean;
  /** The value indicating whether this address is active. */
  IsActive?: boolean;
  /** The value indicating whether this address is for shipping. */
  IsShipping?: boolean;
  /** The value indicating whether this address is for billing. */
  IsBilling?: boolean;
  /** The value indicating whether this address differs from shipping and billing addresses. */
  IsShippingBillingDifferent?: boolean;
  /** The user identifier associated with the address. */
  UserId?: number;
  /** The user address identifier. */
  UserAddressId?: number;
  /** The mobile number associated with the address. */
  Mobilenumber?: string | undefined;
  /** The alternate mobile number associated with the address. */
  AlternateMobileNumber?: string | undefined;
  /** The fax number associated with the address. */
  FaxNumber?: string | undefined;
  /** The email address associated with the address. */
  EmailAddress?: string | undefined;
  /** The company name associated with the address. Maximum length is 300 characters. */
  CompanyName?: string | undefined;
  /** The value indicating whether to prevent adding or updating the address. */
  DontAddUpdateAddress?: boolean;
}

/** The response containing date format information. */
export interface DateFormatResponse {
  /** The unique identifier for the date format. */
  DateFormatId?: number;
  /** The string representation of the date format. */
  DateFormat?: string | undefined;
  /** The conversion factor for the date format (if applicable). */
  ConversionFactor?: number | undefined;
  /** A value indicating whether the date format is the default format. */
  IsDefault?: boolean;
  /** A value indicating whether the date format is active. */
  IsActive?: boolean;
}

/** The response containing configuration settings for a specific feature. */
export interface DefaultConfigResponse {
  /** The identifier for the global setting. */
  ZnodeGlobalSettingId?: number;
  /** The name of the feature. */
  FeatureName?: string | undefined;
  /** The values associated with the feature. This property can be null. */
  FeatureValues?: string | undefined;
  /** The sub-values associated with the feature. This property can be null. */
  FeatureSubValues?: string | undefined;
}

/** The response containing default global configuration settings. */
export interface DefaultGlobalConfigResponse {
  /** The unique identifier for the global setting. */
  ZnodeGlobalSettingId?: number;
  /** The name of the feature associated with the setting. */
  FeatureName?: string | undefined;
  /** The values associated with the feature. */
  FeatureValues?: string | undefined;
  /** The sub-values associated with the feature. */
  FeatureSubValues?: string | undefined;
  /** The selected IDs related to the feature. */
  SelectedIds?: string | undefined;
  /** The action associated with the setting. */
  Action?: string | undefined;
  /** The ID of the portal. */
  PortalId?: number;
  /** The locale ID of the portal. */
  PortalLocaleId?: string | undefined;
  /** The locale ID. */
  LocaleId?: string | undefined;
  /** Gets or sets a value indicating whether the setting is the default. */
  IsDefault?: boolean;
  /** The country code associated with the setting. */
  CountryCode?: string | undefined;
  /** The ID of the portal's country. */
  PortalCountryId?: number;
}

/** The response containing display unit information. */
export interface DisplayUnitResponse {
  /** The unique identifier for the display unit. */
  DisplayUnitId?: number;
  /** The name of the display unit. */
  DisplayUnitName?: string | undefined;
  /** The code associated with the display unit. */
  DisplayUnitCode?: string | undefined;
  /** A value indicating whether the display unit is active. */
  IsActive?: boolean;
  /** A value indicating whether the display unit is the default. */
  IsDefault?: boolean;
}

export interface DomainListResponse {
  PaginationDetail?: ZnodePaginationDetail;
  Domains?: DomainResponse[] | undefined;
}

/** Represents the response containing details of a domain. */
export interface DomainResponse {
  /** The API key associated with the domain. */
  ApiKey?: string | undefined;
  /** The ID of the domain. */
  DomainId?: number;
  /** The name of the domain. */
  DomainName: string;
  /** Gets or sets a value indicating whether the domain is active. */
  IsActive?: boolean;
  /** Gets or sets a value indicating whether the domain is the default domain. */
  IsDefault?: boolean;
  /** The ID of the portal associated with the domain. */
  PortalId?: number;
  /** The application type of the domain. */
  ApplicationType?: string | undefined;
  /** The unique identifier for the storecode. */
  StoreCode?: string | undefined;
}

export interface GeneralSettingResponse {
  /** The time zone of the server. */
  ServerTimeZone?: string | undefined;
  /** The ID of the display unit. */
  DisplayUnitId?: number;
  /** A list of display unit responses. */
  DisplayUnitList?: DisplayUnitResponse[] | undefined;
  /** The ID of the date format. */
  DateFormatId?: number;
  /** A list of date format responses. */
  DateFormatList?: DateFormatResponse[] | undefined;
  /** The ID of the time format. */
  TimeFormatId?: number;
  /** A list of time format responses. */
  TimeFormatList?: TimeFormatResponse[] | undefined;
  /** The ID of the time zone. */
  TimeZoneId?: number;
  /** A list of time zone responses. */
  TimeZoneList?: TimeZoneResponse[] | undefined;
  /** The ID of the weight unit. */
  WeightUnitId?: number;
  /** A list of weight unit responses. */
  WeightUnitList?: WeightUnitResponse[] | undefined;
  /** The feature value for price round-off. */
  PriceRoundOffFeatureValue?: number;
  /** Represents a list of default global configuration responses for price round-off. */
  PriceRoundOffList?: DefaultGlobalConfigResponse[] | undefined;
  /** The feature value for inventory round-off. */
  InventoryRoundOffFeatureValue?: number;
  /** Represents a list of default global configuration responses for inventory round-off. */
  InventoryRoundOffList?: DefaultGlobalConfigResponse[] | undefined;
  /** The feature value for the current environment. */
  CurrentEnvironmentFeatureValue?: string | undefined;
  /** A list of default global configuration responses for different environments. */
  EnvironmentsList?: DefaultGlobalConfigResponse[] | undefined;
}

/** Represents a response object containing various settings related to general system configuration. */
export interface GeneralSettingsResponse {
  GeneralSetting?: GeneralSettingResponse;
  CacheData?: CacheListResponse;
  Cache?: CacheResponse;
  ConfigurationSetting?: ConfigurationSettingResponse;
  PowerBISettings?: PowerBISettingsResponse;
  StockNoticeSettings?: StockNoticeSettingsResponse;
}

export interface GeneratedContentResponseModel {
  /** List of content response */
  ListOfContentResponse?: ContentResponseModel[] | undefined;
  /** True if any error has occurred else false */
  HasError?: boolean;
  /** Contains the error message. */
  ErrorMessage?: string | undefined;
}

/** Represents the details of global attribute entities. */
export interface GlobalAttributeEntityDetailsResponse {
  Attributes?: GlobalAttributeValuesResponse2[] | undefined;
}

/** Response containing list of Global Attribute Entity */
export interface GlobalAttributeEntityListResponse {
  /** List of Global Attribute Entity. */
  GlobalAttributeEntityList?: GlobalAttributeEntityResponse[] | undefined;
}

/** Response containing global attribute entity information. */
export interface GlobalAttributeEntityResponse {
  /** The name of the attribute. */
  AttributeName?: string | undefined;
  /** The type name of the attribute. */
  AttributeTypeName?: string | undefined;
  /** The code of the attribute. */
  AttributeCode?: string | undefined;
  /** The value of the attribute. */
  AttributeValue?: string[] | undefined;
  /** The value of the recordId */
  RecordId?: string | undefined;
  /** The value of the ErrorMessage */
  ErrorMessage?: string | undefined;
}

/** Represents the response containing a list of global attribute groups. */
export interface GlobalAttributeGroupsListResponse {
  /** The list of global attribute groups. */
  AttributeGroups?: GlobalAttributeGroupsModel[] | undefined;
  PaginationDetail?: ZnodePaginationDetail;
}

export interface GlobalAttributeValuesResponse2 {
  /** The attribute value. */
  AttributeValue?: string | undefined;
  /** The attribute code. */
  AttributeCode?: string | undefined;
}

/** Represents the response containing global attribute details for an entity. */
export interface GlobalAttributesResponce {
  EntityDetails?: GlobalSelectedAttributeEntityDetailsResponceModel;
}

/** Represents a response containing a list of default global configuration settings. */
export interface GlobalConfigListResponse {
  /** Gets or sets the list of default global configuration settings. */
  DefaultGlobalConfigs?: DefaultConfigResponse[] | undefined;
}

export interface GlobalMessageBrokerResponse {
  /** RabbitMqServer name. */
  RabbitMqServer?: string | undefined;
  /** Queue Name for the webstore for Message Broker. */
  QueueName?: string | undefined;
  /** Queue Event for the webstore for Message Broker. */
  QueueEvent?: string | undefined;
}

/** Represents the response model containing details of selected global attributes for an entity. */
export interface GlobalSelectedAttributeEntityDetailsResponceModel {
  /** Gets or sets the list of attribute groups associated with the entity. */
  Groups?: GlobalSelectedAttributeGroupResponceModel[] | undefined;
}

/** Represents the response model for a group of selected global attributes. */
export interface GlobalSelectedAttributeGroupResponceModel {
  /** Gets or sets the ID of the global attribute group. */
  GlobalAttributeGroupId?: number | undefined;
  /** Gets or sets the code of the group. */
  GroupCode?: string | undefined;
  /** Gets or sets the name of the attribute group. */
  AttributeGroupName?: string | undefined;
  /** Gets or sets the list of attributes in the group. */
  Attributes?: GlobalSelectedAttributeResponceModel[] | undefined;
}

/** Represents the response model for a selected global attribute. */
export interface GlobalSelectedAttributeResponceModel {
  /** Gets or sets the name of the attribute. */
  AttributeName?: string | undefined;
  /** Gets or sets the type name of the attribute. */
  AttributeTypeName?: string | undefined;
  /** Gets or sets the code of the attribute. */
  AttributeCode?: string | undefined;
  /** Gets or sets the value of the attribute. */
  AttributeValue?: string | undefined;
}

export interface GlobalSettingAttributeKeysResponse {
  PaginationDetail?: ZnodePaginationDetail;
  /** The response for  global setting attribute by group code. */
  AttributeList?: AttributeValueResponse[] | undefined;
}

/** The response for a global setting. */
export interface GlobalSettingResponse {
  /** The ID of a Znode global setting. */
  ZnodeGlobalSettingId?: number;
  /** The name of a feature associated with the global setting. */
  FeatureName?: string | undefined;
  /** The values associated with the feature. Can be null. */
  FeatureValues?: string | undefined;
  /** The sub-values associated with the feature. Can be null. */
  FeatureSubValues?: string | undefined;
}

/** Represents a locale response model. */
export interface LocaleResponse {
  /** The locale ID. */
  LocaleId?: number;
  /** The name of the locale. */
  Name?: string | undefined;
  /** The code of the locale. */
  Code?: string | undefined;
  /** The value indicating whether the locale is active. */
  IsActive?: boolean;
  /** The value indicating whether the locale is the default locale. */
  IsDefault?: boolean;
  /** The custom field for additional information. */
  Custom1?: string | undefined;
  /** The custom field for additional information. */
  Custom2?: string | undefined;
  /** The custom field for additional information. */
  Custom3?: string | undefined;
  /** The custom field for additional information. */
  Custom4?: string | undefined;
  /** The custom field for additional information. */
  Custom5?: string | undefined;
}

/** Represents the page settings for a portal. */
export interface PortalPageSettingResponse {
  /** The value of the page. */
  PageValue?: number | undefined;
  /** The value indicating whether the page setting is the default. */
  IsDefault?: boolean | undefined;
}
/** Represents the response for portal-specific sort settings, containing details about the sort setting, display information, and order within the portal. */
export interface PortalSortSettingResponse {
  /** The unique identifier for the portal sort setting. */
  PortalSortSettingId?: number | undefined;
  /** The unique identifier for the portal associated with the sort setting. */
  PortalId?: number | undefined;
  /** The unique identifier for the sort setting. */
  SortSettingId?: number | undefined;
  /** The name of the sort setting. */
  SortName?: string | undefined;
  /** The display name of the sort setting. */
  SortDisplayName?: string | undefined;
  /** The value representing the sorting order. */
  SortValue?: number | undefined;
  /** The display order for the sort setting within the portal. */
  DisplayOrder?: number | undefined;
}

export interface PowerBISettingsResponse {
  /** The Power BI group ID. */
  PowerBIGroupId?: string | undefined;
  /** The Power BI report ID. */
  PowerBIReportId?: string | undefined;
  /** The Power BI application ID. */
  PowerBIApplicationId?: string | undefined;
  /** The Power BI tenant ID. */
  PowerBITenantId?: string | undefined;
  /** The Power BI username. */
  PowerBIUserName?: string | undefined;
  /** The Power BI password. */
  PowerBIPassword?: string | undefined;
  /** The ID of the Power BI report setting. */
  PowerBIReportSettingId?: number;
}

/** The response containing a list of products for the sitemap. */
export interface ProductSiteMapListResponse {
  PaginationDetail?: ZnodePaginationDetail;
  /** The list of products for the sitemap. */
  ProductList?: SiteMapProductResponse[] | undefined;
}

/** Represents the recommendation settings for a portal. */
export interface RecommendationSettingResponse {
  /** The a value indicating whether home page recommendations are enabled. */
  IsHomeRecommendation?: boolean;
  /** The a value indicating whether product detail page (PDP) recommendations are enabled. */
  IsPDPRecommendation?: boolean;
  /** The a value indicating whether cart recommendations are enabled. */
  IsCartRecommendation?: boolean;
}

/** The response containing product details for the sitemap. */
export interface SiteMapProductResponse {
  /** The SEO-friendly URL of the product. */
  SEOUrl?: string | undefined;
  /** The unique identifier for the product. */
  ZnodeProductId?: number;
  /** The name of the product. */
  Name?: string | undefined;
  /** The name of the category to which the product belongs. */
  CategoryName?: string | undefined;
}

/** The response containing stock notice settings information. */
export interface StockNoticeSettingsResponse {
  /** The option to delete already sent emails. */
  DeleteAlreadySentEmails?: string | undefined;
  /** The option to delete pending emails. */
  DeletePendingEmails?: string | undefined;
}

/** The response containing time format information. */
export interface TimeFormatResponse {
  /** The unique identifier for the time format. */
  TimeFormatId?: number;
  /** The string representation of the time format. */
  TimeFormat?: string | undefined;
  /** The conversion factor for the time format (if applicable). */
  ConversionFactor?: number | undefined;
  /** A value indicating whether the time format is the default. */
  IsDefault?: boolean;
  /** A value indicating whether the time format is active. */
  IsActive?: boolean;
}

/** The response containing time zone information. */
export interface TimeZoneResponse {
  /** The unique identifier for the time zone. */
  TimeZoneId?: number;
  /** The code associated with the time zone. */
  TimeZoneDetailsCode?: string | undefined;
  /** The description of the time zone. */
  TimeZoneDetailsDesc?: string | undefined;
  /** The time difference from UTC in seconds. */
  DifferenceInSeconds?: number;
  /** The start time for daylight saving time. */
  DaylightBeginsAt?: string | undefined;
  /** The end time for daylight saving time. */
  DaylightEndsAt?: string | undefined;
  /** The time difference during daylight saving time in seconds. */
  DSTInSeconds?: number | undefined;
  /** a value indicating whether the time zone is active. */
  IsActive?: boolean | undefined;
  /** A value indicating whether the time zone is the default. */
  IsDefault?: boolean;
}

/** The response model for updating an address. */
export interface UpdateAddressResponse {
  /** The unique identifier for the address. */
  AddressId?: number;
  /** The first name associated with the address. */
  FirstName?: string | undefined;
  /** The last name associated with the address. */
  LastName?: string | undefined;
  /** The display name associated with the address. */
  DisplayName?: string | undefined;
  /** The company name associated with the address. */
  CompanyName?: string | undefined;
  /** The first line of the address. */
  Address1?: string | undefined;
  /** The second line of the address. */
  Address2?: string | undefined;
  /** The third line of the address. */
  Address3?: string | undefined;
  /** The name of the country. */
  CountryName?: string | undefined;
  /** The name of the state or region. */
  StateName?: string | undefined;
  /** The name of the city. */
  CityName?: string | undefined;
  /** The postal code or ZIP code. */
  PostalCode?: string | undefined;
  /** The contact phone number. */
  PhoneNumber?: string | undefined;
  /** The mobile phone number. */
  MobileNumber?: string | undefined;
  /** The alternate mobile phone number. */
  AlternateMobileNumber?: string | undefined;
  /** The fax number. */
  FaxNumber?: string | undefined;
  /** The value indicating whether this is the default billing address. */
  IsDefaultBilling?: boolean;
  /** The value indicating whether this is the default shipping address. */
  IsDefaultShipping?: boolean;
  /** The value indicating whether the address is active. */
  IsActive?: boolean;
  /** The external identifier associated with the address. */
  ExternalId?: string | undefined;
  /** The value indicating whether the address is used for shipping. */
  IsShipping?: boolean;
  /** The value indicating whether the address is used for billing. */
  IsBilling?: boolean;
  /** The email address associated with the address. */
  EmailAddress?: string | undefined;
  /** The custom field for additional information. */
  Custom1?: string | undefined;
  /** The custom field for additional information. */
  Custom2?: string | undefined;
  /** The custom field for additional information. */
  Custom3?: string | undefined;
  /** The custom field for additional information. */
  Custom4?: string | undefined;
  /** The custom field for additional information. */
  Custom5?: string | undefined;
}

export interface UserDetailResponse {
  /** The user ID. */
  UserId?: number;
  /** The ASP.NET user ID. */
  AspNetUserId?: string | undefined;
  /** The first name of the user. */
  FirstName?: string | undefined;
  /** The last name of the user. */
  LastName?: string | undefined;
  /** The Middle name of the user. */
  MiddleName?: string | undefined;
  /** The email address of the user. */
  Email?: string | undefined;
  /** Gets or sets a value indicating whether the user account is active. */
  IsActive?: boolean;
  /** The external ID associated with the user. */
  ExternalId?: string | undefined;
  /** The username of the user. */
  UserName?: string | undefined;
  /** Phone number of user. */
  PhoneNumber?: string | undefined;
  /** User is verified or not. */
  IsVerified?: boolean;
  /** Email Opt In or not */
  EmailOptIn?: boolean;
  /** SMS Opt In or not. */
  SMSOptIn?: boolean;
  /** Customer Payment GUID. */
  CustomerPaymentGUID?: string | undefined;
  /** The type of user verification. */
  UserVerificationType?: string | undefined;
  /** Is Guest User. */
  IsGuestUser?: boolean;
  /** Indicates whether the user is locked. */
  IsLock?: boolean | undefined;
  /** Gets or sets custom data field 1. */
  Custom1?: string | undefined;
  /** Gets or sets custom data field 2. */
  Custom2?: string | undefined;
  /** Gets or sets custom data field 3. */
  Custom3?: string | undefined;
  /** Gets or sets custom data field 4. */
  Custom4?: string | undefined;
  /** Gets or sets custom data field 5. */
  Custom5?: string | undefined;
}

/** Represents the response containing a list of user details. */
export interface UsersListResponse {
  /** The list of user details. */
  Users?: UserDetailResponse[] | undefined;
  PaginationDetail?: ZnodePaginationDetail;
}

/** Represents the address details associated with an account. */
export interface WebStoreAccountAddressResponse {
  /** The unique identifier for the address. */
  AddressId?: number;
  /** The first line of the address. */
  Address1?: string | undefined;
  /** The second line of the address (optional). */
  Address2?: string | undefined;
  /** The third line of the address (optional). */
  Address3?: string | undefined;
  /** The display name for the address. */
  DisplayName?: string | undefined;
  /** The first name of the individual associated with the address. */
  FirstName?: string | undefined;
  /** The last name of the individual associated with the address. */
  LastName?: string | undefined;
  /** The name of the state or region where the address is located. */
  StateName?: string | undefined;
  /** The name of the city where the address is located. */
  CityName?: string | undefined;
  /** The postal code for the address. */
  PostalCode?: string | undefined;
  /** The primary phone number associated with the address. */
  PhoneNumber?: string | undefined;
  /** A value indicating whether this is the default billing address. */
  IsDefaultBilling?: boolean;
  /** A value indicating whether this is the default shipping address. */
  IsDefaultShipping?: boolean;
  /** A value indicating whether the address is currently active. */
  IsActive?: boolean;
  /** A value indicating whether the address is used for shipping. */
  IsShipping?: boolean;
  /** A value indicating whether the address is used for billing. */
  IsBilling?: boolean;
  /** The fax number associated with the address. */
  FaxNumber?: string | undefined;
  /** The email address associated with the address. */
  EmailAddress?: string | undefined;
  /** An external identifier for the address. */
  ExternalId?: string | undefined;
  /** The company name associated with the address. */
  CompanyName?: string | undefined;
}

/** Represents the response model for a web store portal. */
export interface WebStorePortalResponse { 
  /** The unique identifier for the portal. */
  PortalId?: number;
  /** The code associated with the store. */
  StoreCode?: string | undefined;
  /** The identifier for the published catalog, if applicable. */
  PublishCatalogId?: number | undefined;
  /** The code for catalog. */
  CatalogCode?: string | undefined;
  /** The identifier for the locale, if applicable. */
  LocaleId?: number | undefined;
  /** The code for locale. */
  LocaleCode?: string | undefined;
  /** The identifier for the order status. */
  OrderStatusId?: number;
  /** The default state ID for orders, if applicable. */
  DefaultOrderStateID?: number | undefined;
  /** The name of the theme used by the portal. */
  ThemeName?: string | undefined;
  /** The name of the parent theme, if applicable. */
  ParentThemeName?: string | undefined;
  /** The current status of the order. */
  OrderStatus?: string | undefined;
  /** The name of the store. Maximum length is 100 characters. */
  StoreName?: string | undefined;
  /** The customer service email address. */
  CustomerServiceEmail?: string | undefined;
  /** The URL of the media server. */
  MediaServerUrl?: string | undefined;
  /** The customer service phone number. */
  CustomerServicePhoneNumber?: string | undefined;
  /** The identifier for the profile associated with the portal. */
  ProfileId?: number;
  /** The dictionary of portal features and their enabled status. */
  PortalFeatureValues?: { [key: string]: boolean; } | undefined;
  /** The value indicating whether the tag manager is enabled. */
  IsEnabledTagManager?: boolean;
  /** The container ID for tag management. */
  ContainerId?: string | undefined;
  /** The analytics user ID. */
  AnalyticsUId?: string | undefined;
  /** The value indicating whether analytics is active. */
  AnalyticsIsActive?: boolean;
  PublishState?: ZnodePublishStatesEnum;
  /** The publish state name of the portal. */
  PublishStateName?: string | undefined;
  UserVerificationTypeCode?: UserVerificationTypeEnum;
  /** The value indicating whether enhanced e-commerce features are enabled. */
  EnableEnhancedEcommerce?: boolean;
  /** The value indicating whether the store is a B2B store. */
  IsBStore?: boolean;
  /** The value indicating whether the store request page is for a B2B store. */
  IsBStoreRequestPage?: boolean;
  /** The value indicating whether the store is automatically approved. */
  IsAutoApproved?: boolean;
  /** The domain name of the B2B store. */
  BStoreDomainName?: string | undefined;
  /** The value indicating whether the parent store is enabled. */
  IsParentStoreEnable?: boolean;
  TrackingPixelScriptCode?: string | undefined;
  /** The ID of the portal theme. */
  PortalThemeId?: number;
  /** The website logo URL. */
  WebsiteLogo?: string | undefined;
  /** The title of the website. */
  WebsiteTitle?: string | undefined;
  /** The description of the website. */
  WebsiteDescription?: string | undefined;
  /** The favicon image URL. */
  FaviconImage?: string | undefined;
  /** The list of portal locales. */
  PortalLocales?: LocaleResponse[] | undefined;
  /** The currency code. */
  CurrencyCode?: string | undefined;
  /** The out-of-stock message. */
  OutOfStockMessage?: string | undefined;
  /** The value indicating whether product comparison is enabled. */
  EnableCompare?: boolean;
  /** The value indicating whether address validation is enabled. */
  EnableAddressValidation?: boolean;
  /** The value indicating whether approval management is enabled. */
  EnableApprovalManagement?: boolean;
  GlobalAttributes?: GlobalAttributeEntityDetailsResponse;
  /** The culture code. */
  CultureCode?: string | undefined;
  /** The list of page settings for the portal. */
  PageList?: PortalPageSettingResponse[] | undefined;
  /** The default robot tag. */
  DefaultRobotTag?: string | undefined;
  RecommendationSetting?: RecommendationSettingResponse;
  SortList?: PortalSortSettingResponse[] | undefined;
  /** The URL for large images. */
  ImageLargeUrl?: string | undefined;
  /** The URL for medium images. */
  ImageMediumUrl?: string | undefined;
  /** The URL for small images. */
  ImageSmallUrl?: string | undefined;
  /** The URL for thumbnail images. */
  ImageThumbnailUrl?: string | undefined;
  /** The URL for small thumbnail images. */
  ImageSmallThumbnailUrl?: string | undefined;
  /** The ID of the portal profile catalog. */
  PortalProfileCatalogId?: number | undefined;
  /** The Code of the portal profile catalog. */
  PortalProfileCatalogCode?: string | undefined;
  /** The value indicating whether "Save for Later" is enabled. */
  EnableSaveForLater?: boolean;
  /** The value indicating whether product inheritance is enabled. */
  IsProductInheritanceEnabled?: boolean;
  /** The value indicating whether the "Add to Cart" option for product sliders is enabled. */
  IsAddToCartOptionForProductSlidersEnabled?: boolean;
  /** The value indicating whether the portal is active. */
  IsActive?: boolean;
  BStoreGlobalAttributes?: GlobalAttributeEntityDetailsResponse;
}

/** Webstore account address list response. */
export interface WebstoreAccountAddressListResponse {
  /** Webstore user address list. */
  UserAddressList?: WebStoreAccountAddressResponse[] | undefined;
}

/** The response containing weight unit information. */
export interface WeightUnitResponse {
  /** The unique identifier for the weight unit. */
  WeightUnitId?: number;
  /** The name of the weight unit. */
  WeightUnitName?: string | undefined;
  /** The code associated with the weight unit. */
  WeightUnitCode?: string | undefined;
  /** A value indicating whether the weight unit is active. */
  IsActive?: boolean | undefined;
  /** A value indicating whether the weight unit is the default. */
  IsDefault?: boolean;
}

export enum ZnodePublishStatesEnum {
  _1 = 1,
  _2 = 2,
  _3 = 3,
  _4 = 4,
  _5 = 5,
  _6 = 6,
}

export interface GlobalLoggingSettingsResponse {
  /** Dictionary conataining logging configuration in key value pairs. */
  LoggingConfigurationSettings?: { [key: string]: string } | undefined;
}

export interface GlobalMediaDisplaySettingsResponse {
  /** Maximum width for small thumbnails. */
  MaxSmallThumbnailWidth?: number;
  /** Maximum width for small images. */
  MaxSmallWidth?: number;
  /** Maximum width for medium images. */
  MaxMediumWidth?: number;
  /** Maximum width for thumbnails. */
  MaxThumbnailWidth?: number;
  /** Maximum width for large images. */
  MaxLargeWidth?: number;
  /** Maximum width for cross-sell images. */
  MaxCrossSellWidth?: number;
  /** Path to the media files. */
  MediaPath?: string | undefined;
  /** Default image name used when no specific image is available. */
  DefaultImageName?: string | undefined;
}

export interface MediaConfigurationsResponse {
  /** The server address or hostname where the media server is hosted. */
  Server?: string | undefined;
  /** The base URL for accessing the media server. */
  URL?: string | undefined;
  /** The secret key used for authentication or encryption purposes. */
  BucketName?: string | undefined;
  /** Indicates whether the media server configuration is currently active. */
  IsActive?: boolean;
  /** The URL for accessing the content delivery network (CDN) associated with the media server. */
  CDNUrl?: string | undefined;
  /** The name of the folder where thumbnail images are stored. */
  ThumbnailFolderName?: string | undefined;
  MediaServer?: MediaServerResponse;
  GlobalMediaDisplaySetting?: GlobalMediaDisplaySettingsResponse;
}

export interface MediaServerResponse {
  /** Server's name. */
  ServerName?: string | undefined;
  /** Partial view's name. */
  PartialViewName?: string | undefined;
  /** Associated class name. */
  ClassName?: string | undefined;
  /** Indicates if it's another server. */
  IsOtherServer?: boolean | undefined;
}

/** Represents the response containing the RobotsTxt model. */
export interface RobotsTextResponse {
  /** The unique identifier for the RobotsTxt. */
  RobotsTxtId?: number;
  /** The unique identifier for the portal. */
  PortalId?: number;
  /** The name of the store associated with the RobotsTxt. */
  StoreName?: string | undefined;
  /** The content of the RobotsTxt. */
  RobotsTxtContent?: string | undefined;
  /** The default robot tag. */
  DefaultRobotTag?: string | undefined;
}

export interface SiteMapBrandsListResponse {
  PaginationDetail?: ZnodePaginationDetail;
  BrandList?: SiteMapBrandsResponse[] | undefined;
}

export interface SiteMapBrandsResponse {
  BrandId?: number;
  BrandName?: string | undefined;
  SEOFriendlyPageName?: string | undefined;
}

/** Sitemap LOcation URL. */
export interface Sitemap {
  /** Sitemap file location. */
  Loc?: string | undefined;
  /** Last modified Date. */
  Lastmod?: Date;
}

/** Sitemap responce with detail list. */
export interface SitemapIndex {
  /** Sitemap list. */
  Sitemap?: Sitemap[] | undefined;
}

/** Represents a response model for social domain information. */
export interface SocialDomainResponseModel {
  /** The portal ID. */
  PortalId?: number;
  /** The domain ID. This value can be null. */
  DomainId?: number | undefined;
  /** The domain name. */
  DomainName?: string | undefined;
  /** The list of social types associated with the domain. */
  SocialTypeList?: SocialTypeResponseModel[] | undefined;
}

/** Represents a response model containing a list of social domain information. */
export interface SocialProviderResponseModel {
  /** The list of social domain response models. */
  SocialDomainList?: SocialDomainResponseModel[] | undefined;
}

/** Represents a response model for social type information. */
export interface SocialTypeResponseModel {}

/** Represents a response containing a list of states. */
export interface StatesListResponse {
  PaginationDetail?: ZnodePaginationDetail;
  /** The list of states. */
  States?: StatesResponse[] | undefined;
}

export interface StatesResponse {
  /** The unique identifier for the state. */
  StateId?: number;
  /** The country code to which the state belongs. */
  CountryCode?: string | undefined;
  /** The code representing the state. */
  StateCode?: string | undefined;
  /** The name of the state. */
  StateName?: string | undefined;
  /** The value indicating whether the state is active. */
  IsActive?: boolean;
  /** The value indicating whether the state is the default. */
  IsDefault?: boolean;
}

/** The request consist of the Department ID that has to be updated that belong to the requested Account ID. */
export interface UpdateAccountDepartmentRequestModel {
  ModifiedBy?: number;
  /** ID of the department to be updated. */
  DepartmentId: number;
  /** the updated name of the department (nullable). */
  DepartmentName: string;
  /** the updated ID of the account associated with the department (nullable). */
  AccountId: number;
}

/** The request consists of the Account Code to identify the record in which update is required along with the details that are to be updated in the Address. */
export interface UpdateAccountRequestModel {
  ModifiedBy?: number;
  /** the identifier of the account. */
  AccountId: number;
  /** the name of the person. */
  Name: string;
  /** the property represents an identifier used externally to reference or identify the account. */
  CatalogName?: string | undefined;
  /** the property represents an identifier used externally to reference or identify the account. */
  ExternalId?: string | undefined;
  /** the property is used to associate the current account. */
  ParentAccountId?: number | undefined;
  /** the catalog associated to account to set the different catalogs to user. */
  PublishCatalogId: number;
  /** the code associated with the account. */
  AccountCode: string;
  /** the identifier of the sales representative associated with the account. */
  SalesRepId?: number;
}

export interface UpdateAddressRequest {
  /** The first name associated with the address. */
  FirstName: string;
  /** The last name associated with the address. */
  LastName: string;
  /** The display name associated with the address. */
  DisplayName?: string | undefined;
  /** The company name associated with the address. */
  CompanyName?: string | undefined;
  /** The first line of the address. */
  Address1: string;
  /** The second line of the address. */
  Address2?: string | undefined;
  /** The third line of the address. */
  Address3?: string | undefined;
  /** The name of the country. */
  CountryName: string;
  /** The name of the state or region. */
  StateName: string;
  /** The name of the city. */
  CityName: string;
  /** The postal code or ZIP code. */
  PostalCode: string;
  /** The contact phone number. */
  PhoneNumber?: string | undefined;
  /** The mobile phone number. */
  MobileNumber?: string | undefined;
  /** The alternate mobile phone number. */
  AlternateMobileNumber?: string | undefined;
  /** The fax number. */
  FaxNumber?: string | undefined;
  /** The value indicating whether this is the default billing address. */
  IsDefaultBilling?: boolean;
  /** The value indicating whether this is the default shipping address. */
  IsDefaultShipping?: boolean;
  /** The value indicating whether the address is active. */
  IsActive?: boolean;
  /** The external identifier associated with the address. */
  ExternalId?: string | undefined;
  /** The value indicating whether the address is used for shipping. */
  IsShipping?: boolean;
  /** The value indicating whether the address is used for billing. */
  IsBilling?: boolean;
  /** The email address associated with the address. */
  EmailAddress?: string | undefined;
  /** The custom field for additional information. */
  Custom1?: string | undefined;
  /** The custom field for additional information. */
  Custom2?: string | undefined;
  /** The custom field for additional information. */
  Custom3?: string | undefined;
  /** The custom field for additional information. */
  Custom4?: string | undefined;
  /** The custom field for additional information. */
  Custom5?: string | undefined;
}

/** This model is used to update the custom permission's IsAllowed flag. */
export interface UpdateCustomPermissionRequestModel {
  /** The flag containing the value for allowing the custom permission for the respective role. */
  IsAllowed?: boolean;
  /** The application type against which the custom permission has been saved. The application type is referred as "menu type". */
  ApplicationType: string;
  /** The object name for which the custom permission has been created. The object is referred as the "menu name". */
  Object: string;
  /** The unique code provided to the custom permission. */
  PermissionCode: string;
  /** The name provided to the custom permission. */
  PermissionName: string;
}

/** The data structure expected in the request body when updating a general setting. */
export interface UpdateGeneralSettingRequest {
  /** The values associated with the feature for the general setting. */
  FeatureValues?: string | undefined;
  /** The sub-values associated with the feature for the general setting. */
  FeatureSubValues?: string | undefined;
}

/** The request consists of the Account ID to identify the Note in which update is required using the Note ID. */
export interface UpdateNoteRequestModel {
  ModifiedBy?: number;
  /** The unique ID of the note. */
  NoteId: number;
  /** The ID of the user associated with the note. */
  UserId: number;
  /** The ID of the account associated with the note (nullable). */
  AccountId: number;
  /** The ID of the case request associated with the note (nullable). */
  CaseRequestId: number;
  /** The title of the note. */
  NoteTitle?: string | undefined;
  /** The body or content of the note (nullable). */
  NoteBody?: string | undefined;
}

/** Represents a request to update an profile */
export interface UpdateProfileRequestModel {
  ModifiedBy?: number;
  /** A string property holding the name associated with the profile. */
  ProfileId?: number;
  /** A string property holding the pofilename associated with the user. */
  ProfileName: string;
  /** A boolean property indicating whether the profile should be displayed during partner signup. */
  ShowOnPartnerSignup?: boolean;
  /** A boolean property specifying whether the profile is tax-exempt. */
  TaxExempt?: boolean;
  /** A string property representing the default external account number associated with the profile. */
  DefaultExternalAccountNo?: string | undefined;
  /** A nullable decimal property, possibly representing a weighting factor associated with the profile. */
  Weighting?: number | undefined;
  /** Represents the parent profile's identifier. */
  ParentProfileId?: number | undefined;
  /** Represents the Product Information Management (PIM) catalog identifier. */
  PimCatalogId?: number | undefined;
}

/** The data required to update a user account. */
export interface UpdateUserAccountDataRequest {
  Email: string;
  PortalIds?: string[] | undefined;
  /** The unique identifier for the user in ASP.NET Identity. */
  AspNetUserId: string;
  /** The unique identifier for the account. Optional. */
  AccountId?: number | undefined;
  /** The first name of the user. */
  FirstName?: string | undefined;
  /** The last name of the user. */
  LastName?: string | undefined;
  /** The username for the user account. */
  UserName?: string | undefined;
  /** The middle name of the user. */
  MiddleName?: string | undefined;
  /** The GUID for the customer's payment information. */
  CustomerPaymentGUID?: string | undefined;
  /** The budget amount assigned to the user. Optional. */
  BudgetAmount?: number | undefined;
  /** The value indicating whether the user has opted in to receive emails. */
  EmailOptIn?: boolean;
  /** The value indicating whether the user has opted in to receive SMS messages. */
  SMSOptIn?: boolean;
  /** The phone number associated with the user account. */
  PhoneNumber?: string | undefined;
  /** The value indicating whether the user's account is verified. */
  IsVerified?: boolean;
  /** The role name assigned to the user. */
  RoleName?: string | undefined;
  /** The custom field for additional information (Custom1). */
  Custom1?: string | undefined;
  /** The custom field for additional information (Custom2). */
  Custom2?: string | undefined;
  /** The custom field for additional information (Custom3). */
  Custom3?: string | undefined;
  /** The custom field for additional information (Custom4). */
  Custom4?: string | undefined;
  /** The custom field for additional information (Custom5). */
  Custom5?: string | undefined;
}

/** Update user details request model. */
export interface UpdateUserRequest {
  /** The email of the user. */
  Email: string;
  /** Asp net user id unique identifier for .NET user. */
  AspNetUserId: string;
  /** The phone number of the user. */
  PhoneNumber?: string | undefined;
  /** The first name of the user. */
  FirstName?: string | undefined;
  /** The last name of the user. */
  LastName?: string | undefined;
  /** Indicates whether the user has opted in for email communications. */
  EmailOptIn?: boolean;
  /** Indicates whether the user has opted in for SMS communications. */
  SMSOptIn?: boolean;
  /** The external ID of the user. */
  ExternalId?: string | undefined;
  UserVerificationTypeCode?: UserVerificationTypeEnum;
  /** Store code. */
  StoreCode: string;
  /** Locale code. */
  LocaleCode?: string | undefined;
}

/** Represents a request to  update a web store account/user address. */
export interface UpdateWebStoreAccountAddressRequest {
  /** The first line of the address. */
  Address1: string;
  /** The second line of the address. */
  Address2?: string | undefined;
  /** The third line of the address. */
  Address3?: string | undefined;
  /** The display name for the address. */
  DisplayName?: string | undefined;
  /** The first name associated with the address. */
  FirstName: string;
  /** The last name associated with the address. */
  LastName: string;
  /** The name of the country. */
  CountryName: string;
  /** The name of the city. */
  CityName: string;
  /** The state code. */
  StateName: string;
  /** The postal code. */
  PostalCode: string;
  /** The phone number. */
  PhoneNumber: string;
  /** Indicates whether this address is the default billing address. */
  IsDefaultBilling?: boolean;
  /** Indicates whether this address is the default shipping address. */
  IsDefaultShipping?: boolean;
  /** Indicates whether the address is active. */
  IsActive?: boolean;
  /** Indicates whether the address is a shipping address. */
  IsShipping?: boolean;
  /** Indicates whether the address is a billing address. */
  IsBilling?: boolean;
  /** Indicates whether the shipping address is different from the billing address. */
  IsShippingBillingDifferent?: boolean;
  /** Indicates whether the address belongs to the address book. */
  IsAddressBook?: boolean;
  /** The fax number. */
  FaxNumber?: string | undefined;
  /** The email address. */
  EmailAddress?: string | undefined;
  /** The external identifier. */
  ExternalId?: string | undefined;
  /** The company name. */
  CompanyName?: string | undefined;
}

/** Represents the response model for user approvers. */
export interface UserApproverResponse {
  /** The user approver identifier. */
  UserApproverId?: number;
  /** The user identifier. */
  UserId?: number | undefined;
  /** The approver level identifier. */
  ApproverLevelId?: number;
  /** The approver user identifier. */
  ApproverUserId?: number;
  /** The approver order. */
  ApproverOrder?: number;
  /** The value indicating whether to notify via email. */
  IsNotifyEmail?: boolean;
  /** The value indicating whether approval is mandatory. */
  IsMandatory?: boolean;
  /** The upper budget amount limit for the approver. */
  ToBudgetAmount?: number | undefined;
  /** The lower budget amount limit for the approver. */
  FromBudgetAmount?: number | undefined;
  /** The value indicating whether there is no budget limit. */
  IsNoLimit?: boolean | undefined;
  /** The value indicating whether the approver is active. */
  IsActive?: boolean | undefined;
  /** The portal approval identifier. */
  PortalApprovalId?: number | undefined;
}

/** Represents the request model for a user forget password operation. */
export interface UserForgetPasswordRequest {
  /** The user name of the user. */
  UserName: string;
  /** The portal ID associated with the request. */
  PortalId?: number | undefined;
  /** base URL for associated domains with the portal. */
  BaseUrl?: string | undefined;
}

/** The response model for a user login operation. */
export interface UserLoginResponse {
  /** The user ID. */
  UserId?: number;
  /** The account ID. */
  AccountId?: number | undefined;
  /** The ASP.NET user ID. */
  AspNetUserId?: string | undefined;
  /** The first name of the user. */
  FirstName?: string | undefined;
  /** The last name of the user. */
  LastName?: string | undefined;
  /** User role name. */
  RoleName?: string | undefined;
  /** Phone number of user. */
  PhoneNumber?: string | undefined;
  /** The email address of the user. */
  Email?: string | undefined;
  /** Gets or sets a value indicating whether the user account is active. */
  IsActive?: boolean;
  /** The external ID associated with the user. */
  ExternalId?: string | undefined;
  /** The username of the user. */
  UserName?: string | undefined;
  /** User is verified or not. */
  IsVerified?: boolean;
  /** Email Opt In or not */
  EmailOptIn?: boolean;
  /** SMS Opt In or not. */
  SMSOptIn?: boolean;
  /** Customer Payment GUID. */
  CustomerPaymentGUID?: string | undefined;
  /** The per-order limit for the account in terms of monetary value. */
  PerOrderLimit?: number;
  /** The annual order limit for the account in terms of monetary value. */
  AnnualOrderLimit?: number;
  /** The remaining annual balance order amount for the account. */
  AnnualBalanceOrderAmount?: number;
  /** The unique identifier for the PublishCatalogId. */
  PublishCatalogId?: number | undefined;
  /** The list of profile models associated with the account. */
  Profiles?: ProfilesModel[] | undefined;
  /** Gets or sets custom data field 1. */
  Custom1?: string | undefined;
  /** Gets or sets custom data field 2. */
  Custom2?: string | undefined;
  /** Gets or sets custom data field 3. */
  Custom3?: string | undefined;
  /** Gets or sets custom data field 4. */
  Custom4?: string | undefined;
  /** Gets or sets custom data field 5. */
  Custom5?: string | undefined;
}

export interface UserPasswordResponse {
  ErrorMessage: string;
  HasError?: boolean;
  UserName?: string | undefined;
}

export enum UserVerificationTypeEnum {
  _0 = 0,
  _1 = 1,
  _2 = 2,
  _3 = 3,
}

/** Social login request model. */
export interface SocialLoginRequest {
  externalAuth?: ExternalAuthInfo;
  /** Indicates whether the login session is persistent. */
  IsPersistent: boolean;
  /** Portal ID. */
  PortalId: number;
  /** User name. */
  UserName?: string | undefined;
  /** Email. */
  Email?: string | undefined;
  UserVerificationTypeCode?: UserVerificationTypeEnum;
}

/** If there are no errors, API returns the "account address(es)" for the requested Account ID with the requested parameters.If an error occurs during the execution then an appropriate error response will be returned. */
export interface AccountAddressListResponse {
  PaginationDetail?: ZnodePaginationDetail;
  AddressList?: AccountDepartmentResponse[] | undefined;
}

/** Represents the response model for account department operations. */
export interface AccountDepartmentResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** sets the unique identifier for the department. */
  DepartmentId?: number | undefined;
  /** sets the name of the department. */
  DepartmentName?: string | undefined;
  /** sets the identifier of the associated account. */
  AccountId?: number | undefined;
}

/** Represents a response model for creating an account note. */
export interface AccountNoteResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  /** The unique ID of the note. */
  NoteId?: number | undefined;
  /** The ID of the user associated with the note. */
  UserId?: number | undefined;
  /** The ID of the account associated with the note (nullable). */
  AccountId?: number | undefined;
  /** The ID of the case request associated with the note (nullable). */
  CaseRequestId?: number | undefined;
  /** The title of the note. */
  NoteTitle?: string | undefined;
  /** The body or content of the note (nullable). */
  NoteBody?: string | undefined;
}

/** If there are no errors then the API will create a new account with the provided Account Code.If an error occurs during the execution then an appropriate error response will be returned. */
export interface CreateAccountDataResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  /** the unique identifer for the account. */
  AccountID?: number;
  /** the name of the account. */
  Name?: string | undefined;
  /** the external identifier of the account. */
  ExternalId?: string | undefined;
  /** the optional parent account's identifier. */
  ParentAccountId?: number | undefined;
  /** the optional publish catalog's identifier. */
  PublishCatalogId?: number | undefined;
  /** the code associated with the account. */
  AccountCode: string;
  /** the identifier of the sales representative associated with the account. */
  SalesRepId?: number;
}

export interface CreateAccountDepartmentResponses {
  CreatedBy?: number;
  CreatedDate?: Date;
  /** Retrieves or sets the ID of the department (nullable). */
  DepartmentId?: number | undefined;
  /** the name of the department. */
  DepartmentName?: string | undefined;
  /** Retrieves or updates the ID of the account associated with the department (nullable). */
  AccountId?: number | undefined;
}

/** If there are no errors then the API will update the Note details for the requested Account ID. If an error occurs during the execution then an appropriate error response will be returned. */
export interface CreateNoteResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  /** The unique ID of the note. */
  NoteId?: number | undefined;
  /** The ID of the user associated with the note. */
  UserId?: number | undefined;
  /** The ID of the account associated with the note (nullable). */
  AccountId?: number | undefined;
  /** The ID of the case request associated with the note (nullable). */
  CaseRequestId?: number | undefined;
  /** The title of the note. */
  NoteTitle?: string | undefined;
  /** The body or content of the note (nullable). */
  NoteBody?: string | undefined;
}

/** Represents the response object for creating permission codes. */
export interface CreatePermissionCodeResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  /** the identifier for the user's account permission. */
  AccountUserPermissionId?: number | undefined;
  /** the identifier for the account permission access. */
  AccountPermissionAccessId?: number | undefined;
  /** the identifier for the user associated with the permission code. */
  UserId?: number;
}

/** Represents a response to create an profile */
export interface CreateProfileResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** A string property holding the name associated with the profile. */
  ProfileId?: number;
  /** A string property holding the pofilename associated with the user. */
  ProfileName: string;
  /** A boolean property indicating whether the profile should be displayed during partner signup. */
  ShowOnPartnerSignup?: boolean;
  /** A boolean property specifying whether the profile is tax-exempt. */
  TaxExempt?: boolean;
  /** A string property representing the default external account number associated with the profile. */
  DefaultExternalAccountNo?: string | undefined;
  /** A nullable decimal property, possibly representing a weighting factor associated with the profile. */
  Weighting?: number | undefined;
  /** Represents the parent profile's identifier. */
  ParentProfileId?: number | undefined;
  /** Represents the Product Information Management (PIM) catalog identifier. */
  PimCatalogId?: number | undefined;
}

/** Represents a response object for a list of customer profiles. */
export interface CustomerProfileListResponse {
  PaginationDetail?: ZnodePaginationDetail;
  profileResponses?: CustomerProfileResponse[] | undefined;
}

/** Represents a response model for creating an Customer Profile. */
export interface CustomerProfileResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** A string property holding the name associated with the profile. */
  ProfileId?: number;
  /** A string property holding the pofilename associated with the user. */
  ProfileName: string;
  /** A boolean property indicating whether the profile should be displayed during partner signup. */
  ShowOnPartnerSignup?: boolean;
  /** A boolean property specifying whether the profile is tax-exempt. */
  TaxExempt?: boolean;
  /** A string property representing the default external account number associated with the profile. */
  DefaultExternalAccountNo?: string | undefined;
  /** A nullable decimal property, possibly representing a weighting factor associated with the profile. */
  Weighting?: number | undefined;
  /** Represents the parent profile's identifier. */
  ParentProfileId?: number | undefined;
  /** Represents the Product Information Management (PIM) catalog identifier. */
  PimCatalogId?: number | undefined;
}

/** If there are no errors then the API will return the Department Details for the requested Department ID. If an error occurs during the execution then an appropriate error response will be returned. */
export interface DepartmentAccountResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  /** The unique identifer of the department. */
  DepartmentId?: number;
  /** Gets or Sets DepartmentName */
  DepartmentName?: string | undefined;
  /** Gets or Sets AccountId */
  AccountId?: number | undefined;
}

/** If there are no errors, API returns the "account department(s)" for the requested Account ID with the requested parameters. If an error occurs during the execution then an appropriate error response will be returned. */
export interface DepartmentListResponse {
  PaginationDetail?: ZnodePaginationDetail;
  /** the list of account department responses. */
  accountDepartmentList?: AccountDepartmentResponse[] | undefined;
}

/** If there are no errors then the API will update the details mentioned in the request for that Account If an error occurs during the execution then an appropriate error response will be returned. */
export interface UpdateAccountDataResponse {
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** the identifier for the account. */
  AccountID?: number;
  /** the name of the account. */
  Name?: string | undefined;
  /** the external identifier of the account. */
  ExternalId?: string | undefined;
  /** the identifier of the parent account. */
  ParentAccountId?: number | undefined;
  /** the identifier of the publish catalog. */
  PublishCatalogId?: number | undefined;
  /** the code associated with the account. */
  AccountCode: string;
  /** the identifier of the sales representative associated with the account. */
  SalesRepId?: number;
}

/** If there are no errors then the API will update the Department Name for the requested Department ID.If an error occurs during the execution then an appropriate error response will be returned. */
export interface UpdateAccountDepartmentResponse {
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** the identifier for the department. */
  DepartmentId?: number;
  /** the name of the department. */
  DepartmentName?: string | undefined;
  /** the identifier of the account associated with the department. */
  AccountId?: number | undefined;
}

/** Represents a response to update an profile */
export interface UpdateProfileResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** A string property holding the name associated with the profile. */
  ProfileId?: number;
  /** A string property holding the pofilename associated with the user. */
  ProfileName: string;
  /** A boolean property indicating whether the profile should be displayed during partner signup. */
  ShowOnPartnerSignup?: boolean;
  /** A boolean property specifying whether the profile is tax-exempt. */
  TaxExempt?: boolean;
  /** A string property representing the default external account number associated with the profile. */
  DefaultExternalAccountNo?: string | undefined;
  /** A nullable decimal property, possibly representing a weighting factor associated with the profile. */
  Weighting?: number | undefined;
  /** Represents the parent profile's identifier. */
  ParentProfileId?: number | undefined;
  /** Represents the Product Information Management (PIM) catalog identifier. */
  PimCatalogId?: number | undefined;
}

/** Represents a list of associated stores for pricing purposes. */
export interface AssociatePriceAccountList {
  /** The list of associated stores as a request model. */
  PriceAccountList?: AssociatedStoresRequest[] | undefined;
}

/** Represents a request model for associating a price list with stores or accounts. */
export interface AssociatedStoresRequest {
  /** The identifier for the price list to be associated. */
  PriceListId: number;
  /** The identifier for the store or account to which the price list will be associated. */
  AccountId: number;
  /** The precedence value for ordering associated price lists. */
  Precedence?: number | undefined;
}

/** Represents a request to create tiere pricing details for a product. */
export interface CreateTierPriceRequest {
  CreatedBy?: number;
  /** The identifier for the price list to associate the tier pricing details with. */
  PriceListId: number;
  /** The Stock Keeping Unit (SKU) associated with the tier pricing details. */
  SKU?: string | undefined;
  /** The price for the specified quantity in the tier pricing. */
  Price?: number | undefined;
  /** The quantity for the tier pricing. */
  Quantity?: number | undefined;
  /** The minimum quantity for the tier pricing. */
  MinQuantity?: number | undefined;
  /** The maximum quantity for the tier pricing. */
  MaxQuantity?: number | undefined;
  /** Custom information field 1 for the tier pricing. */
  Custom1?: string | undefined;
  /** Custom information field 2 for the tier pricing. */
  Custom2?: string | undefined;
  /** Custom information field 3 for the tier pricing. */
  Custom3?: string | undefined;
}

/** A request model for order line item data. */
export interface OrderLineItemDataRequestModel {
  /** The ID of the OMS order line item. */
  OmsOrderLineItemsId: number;
  /** The state of the order line item. */
  OrderLineItemState: string;
  /** The ID of the parent OMS order line item. */
  ParentOmsOrderLineItemsId: number;
}

/** A request model for a list of order line items. */
export interface OrderLineItemListRequestModel {
  /** List of OrderLineItemDataRequestModel model */
  OrderLineItemDetails?: OrderLineItemDataRequestModel[] | undefined;
}

/** Represents a request object containing parameters for updating the state of an order. */
export interface OrderStateParameterRequest {
  /** The ID of the OMS order details. */
  OmsOrderDetailsId: number;
  /** The ID of the OMS order state. */
  OmsOrderStateId?: number;
  /** The state of the order. */
  OrderState?: string | undefined;
}

/** The response data for a gift card. */
export interface GiftCardDataResponse {
  /** The unique identifier for the gift card. */
  GiftCardId?: number;
  /** The portal identifier where the gift card is issued. */
  PortalId?: number;
  /** The name of the gift card. */
  Name?: string | undefined;
  /** The card number. */
  CardNumber?: string | undefined;
  /** The actual amount of the gift card. */
  Amount?: number;
  /** The user identifier associated with the gift card, if applicable. */
  UserId?: number | undefined;
  /** The expiration date of the gift card. */
  ExpirationDate?: Date | undefined;
  /** The value indicating whether the gift card is associated with a referral commission. */
  IsReferralCommission?: boolean;
  /** The remaining amount on the gift card. */
  RemainingAmount?: number | undefined;
  /** The start date of the gift card's validity. */
  StartDate?: Date;
  /** The value indicating whether the gift card is active. */
  IsActive?: boolean;
  /** The value indicating whether the gift card is restricted to the customer account. */
  RestrictToCustomerAccount?: boolean;
}

/** Represents the response model for a list of gift card histories with pagination details. */
export interface GiftCardHistoryListDetailsResponse {
  PaginationDetail?: ZnodePaginationDetail;
  /** A list of gift card history records. */
  GiftCardHistoryList?: GiftCardHistoryDataResponse[] | undefined;
  GiftCard?: GiftCardDataResponse;
}

/** A response containing a list of order line item status. */
export interface OrderLineItemStatusListResponce {
  /** The list of order line item status response models. */
  OrderLineItemStatusList?: OrderLineItemStatusResponceModel[] | undefined;
}

/** The response model for the status of an order line item. */
export interface OrderLineItemStatusResponceModel {
  /** The list of IDs for order line items that failed. */
  FailedOrderLineItemIds?: number[] | undefined;
  /** The ID of the order line item. */
  OrderLineItemsId?: number;
  /** The message related to the status. */
  Message?: string | undefined;
  /** The status indicating whether the operation was successful or not. */
  Status?: boolean;
}

/** Represents a list of tier pricing request models. */
export interface TierPriceListModel {
  /** The list of tier pricing request models. */
  TierPriceList?: CreateTierPriceRequest[] | undefined;
}

/** Represents a request model for updating the precedence of a price list within a portal profile. */
export interface UpdatePriceListPrecedenceRequest {
  ModifiedBy?: number;
  /** The identifier for the price list profile associated with the update. */
  PriceListProfileId: number;
  /** The identifier for the portal profile associated with the update. */
  PortalProfileId?: number;
  /** The updated precedence value for ordering price lists. */
  Precedence?: number;
}

/** The request body contain the price list details, which will be updated against the SKU.The SKU and retali price are mandatory fields in request body. */
export interface UpdatePriceSKURequest {
  ModifiedBy?: number;
  /** The unique identifier for the price. */
  PriceId: number;
  /** The Stock Keeping Unit (SKU) associated with the product. */
  SKU?: string | undefined;
  /** The selling price of the product. */
  SalesPrice?: number | undefined;
  /** The retail price of the product. */
  RetailPrice: number;
  /** The identifier for the unit of measure (UOM) for the product */
  UomId?: number | undefined;
  /** The size of the product unit. */
  UnitSize?: number | undefined;
  /** The date when the price becomes active. */
  ActivationDate?: Date | undefined;
  /** the date when the price expires. */
  ExpirationDate?: Date | undefined;
  /** the external identifier associated with the product. */
  ExternalId?: string | undefined;
  /** the cost price of the product. */
  CostPrice?: number | undefined;
}

/** Represents a request to update tiered pricing details for a product. */
export interface UpdateTierPriceRequest {
  ModifiedBy?: number;
  /** The unique identifier for the price tier. */
  PriceTierId: number;
  /** The Stock Keeping Unit (SKU) associated with the product. */
  SKU?: string | undefined;
  /** The price for the specified quantity of the product. */
  Price?: number;
  /** The quantity threshold for the tiered price. */
  Quantity?: number;
  /** The identifier for the unit of measure (UOM) for the product. */
  UomId?: number | undefined;
  /** The size of the product unit. */
  UnitSize?: number | undefined;
  /** Custom information field 1 associated with the tiered pricing. */
  Custom1?: string | undefined;
  /** Custom information field 2 associated with the tiered pricing. */
  Custom2?: string | undefined;
  /** Custom information field 3 associated with the tiered pricing. */
  Custom3?: string | undefined;
}

/** The data for requests related to the creation of a price list. */
export interface CreatePriceRequest {
  CreatedBy?: number;
  /** The code associated with the price list. */
  ListCode: string;
  /** The name of the price list. */
  ListName?: string | undefined;
  /** The ID of the currency associated with the price list. */
  CurrencyId: number;
  /** The date and time when the price list becomes active. */
  ActivationDate?: Date | undefined;
  /** The date and time when the price list expires. */
  ExpirationDate?: Date | undefined;
  /** The ID of the culture associated with the price list. */
  CultureId: number;
  /** The code representing the culture of the price list. */
  CultureCode?: string | undefined;
}

/** The request body contain the price list details, which will be save against the SKU. The SKU and retail price are mandatory fields in request body. */
export interface CreatePriceSKURequest {
  CreatedBy?: number;
  /** The SKU (Stock Keeping Unit) of the product. */
  SKU: string;
  /** The sales price of the SKU. */
  SalesPrice?: number | undefined;
  /** The retail price of the SKU. */
  RetailPrice?: number;
  /** The ID of the unit of measure for the SKU. */
  UomId?: number | undefined;
  /** The size of the SKU unit. */
  UnitSize?: number | undefined;
  /** The date and time when the SKU price becomes active. */
  ActivationDate?: Date | undefined;
  /** The date and time when the SKU price expires. */
  ExpirationDate?: Date | undefined;
  /** An external identifier for the SKU. */
  ExternalId?: string | undefined;
  /** The optional cost price. */
  CostPrice?: number | undefined;
}

/** Represents a response model for the creation of pricing data. */
export interface CreatePriceDataResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  /** The unique identifier price list. */
  PriceListId?: string | undefined;
  /** The code associated with the price list. */
  ListCode: string;
  /** The name of the price list. */
  ListName: string;
  /** The identifier for the currency used in the pricing data. */
  CurrencyId?: number;
  /** The date when the pricing data becomes active. */
  ActivationDate?: Date | undefined;
  /** The date when the pricing data expires. */
  ExpirationDate?: Date | undefined;
  /** The identifier for the culture associated with the pricing data. */
  CultureId?: number;
  /** The code representing the culture associated with the pricing data. */
  CultureCode?: string | undefined;
}

/** Represents a response model for the creation of pricing details associated with a SKU. */
export interface CreatePriceSKUResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  /** The unique identifier for the created price. */
  PriceId?: number;
  /** The identifier for the associated price list. */
  PriceListId?: number | undefined;
  /** The Stock Keeping Unit (SKU) associated with the pricing details. */
  SKU?: string | undefined;
  /** The sales price of the product. */
  SalesPrice?: number | undefined;
  /** The retail price of the product. */
  RetailPrice?: number;
  /** The identifier for the unit of measure (UOM) for the product. */
  UomId?: number | undefined;
  /** The size of the product unit. */
  UnitSize?: number | undefined;
  /** The activation date of the pricing details. */
  ActivationDate?: Date | undefined;
  /** The expiration date of the pricing details. */
  ExpirationDate?: Date | undefined;
  /** The external identifier associated with the product. */
  ExternalId?: string | undefined;
  /** The cost price of the product. */
  CostPrice?: number | undefined;
}

/** Represents a gift card history record with transaction details. */
export interface GiftCardHistoryDataResponse {
  /** The unique identifier of the gift card associated with the history record. */
  GiftCardId?: number;
  /** The unique identifier of the order associated with the gift card transaction. */
  OmsOrderId?: number;
  /** The unique identifier of the user associated with the order, if applicable. */
  OmsUserId?: number | undefined;
  /** The date and time when the transaction occurred. */
  TransactionDate?: Date;
  /** The amount of the transaction. */
  TransactionAmount?: number;
  /** The order number associated with the transaction. */
  OrderNumber?: string | undefined;
  /** The name of the customer involved in the transaction. */
  CustomerName?: string | undefined;
  /** The username of the individual who made the transaction. */
  UserName?: string | undefined;
  /** The culture code indicating the localization or region of the transaction. */
  CultureCode?: string | undefined;
  /** Additional notes or comments related to the transaction. */
  Notes?: string | undefined;
}

export interface ListUomResponse {
  PaginationDetail?: ZnodePaginationDetail;
  UomList?: PriceUomResponse[] | undefined;
}

export interface PriceResponseData {
  /** the unique identifier for the update price. */
  PriceListId?: number;
  /** The code associated with the price list. */
  ListCode?: string | undefined;
  /** The name of the price list. */
  ListName?: string | undefined;
  /** The date and time when the price list becomes active. */
  ActivationDate?: Date | undefined;
  /** The date and time when the price list expires. */
  ExpirationDate?: Date | undefined;
  /** The name of the currency associated with the account. */
  CurrencyName?: string | undefined;
  /** Flag indicating whether the account is a parent account. */
  IsParentAccount?: boolean;
  /** The name of the culture associated with the account. */
  CultureName?: string | undefined;
}

/** Represents the response data for pricing tiers. */
export interface PriceTierResponse {
  /** The unique identifier for the price tier. */
  PriceTierId?: number;
  /** The identifier for the associated price list (if applicable). */
  PriceListId?: number | undefined;
  /** The Stock Keeping Unit (SKU) associated with the product. */
  SKU?: string | undefined;
  /** The price for the specified quantity of the product. */
  Price?: number;
  /** The quantity threshold for the tiered price. */
  Quantity?: number;
  /** The identifier for the unit of measure (UOM) for the product. */
  UomId?: number | undefined;
  /** The size of the product unit. */
  UnitSize?: number | undefined;
  /** Custom information field 1 associated with the tiered pricing. */
  Custom1?: string | undefined;
  /** Custom information field 2 associated with the tiered pricing. */
  Custom2?: string | undefined;
  /** Custom information field 3 associated with the tiered pricing. */
  Custom3?: string | undefined;
}

/** Represents the response data for pricing unit of measure (UOM). */
export interface PriceUomResponse {
  /** The identifier of the unit of measure (UOM). */
  UomId?: number;
  /** The name of the unit of measure (UOM). */
  Uom?: string | undefined;
}

/** Represents pricing details associated with a SKU. */
export interface SKUPriceResponse {
  /** The unique identifier for the price. */
  PriceId?: number;
  /** The identifier for the associated price list (if applicable). */
  PriceListId?: number | undefined;
  /** The Stock Keeping Unit (SKU) associated with the pricing details. */
  SKU?: string | undefined;
  /** The sales price of the product. */
  SalesPrice?: number | undefined;
  /** The retail price of the product. */
  RetailPrice?: number;
  /** The identifier for the unit of measure (UOM) for the product. */
  UomId?: number | undefined;
  /** The size of the product unit. */
  UnitSize?: number | undefined;
  /** The activation date of the pricing details. */
  ActivationDate?: Date | undefined;
  /** The expiration date of the pricing details. */
  ExpirationDate?: Date | undefined;
  /** The external identifier associated with the product. */
  ExternalId?: string | undefined;
  /** The cost price of the product. */
  CostPrice?: number | undefined;
}

/** Represents a response model for updating pricing data. */
export interface UpdatePriceDataResponse {
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** The code associated with the updated price list. */
  ListCode?: string | undefined;
  /** The updated name of the price list. */
  ListName?: string | undefined;
  /** The identifier for the currency used in the updated pricing data. */
  CurrencyId?: number;
  /** The updated activation date of the pricing data. */
  ActivationDate?: Date | undefined;
  /** The updated expiration date of the pricing data. */
  ExpirationDate?: Date | undefined;
  /** The identifier for the culture associated with the updated pricing data. */
  CultureId?: number;
  /** The code representing the culture associated with the updated pricing data. */
  CultureCode?: string | undefined;
  /** The identifier for the updated price list. */
  PriceListId?: number;
}

/** Represents the response data for updating price list precedence, derived from the base update response. */
export interface UpdatePriceListPrecedenceDataResponse {
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** The identifier of the price list profile. */
  PriceListProfileId?: number;
  /** The identifier of the price list. */
  PriceListId?: number;
  /** The identifier of the portal profile. */
  PortalProfileId?: number;
  /** The precedence value for the price list. */
  Precedence?: number;
}

/** Represents a response model for updating pricing details associated with SKU. */
export interface UpdatePriceSKUResponse {
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** The unique identifier for the updated price. */
  PriceId?: number;
  /** The identifier for the associated price list (if applicable). */
  PriceListId?: number | undefined;
  /** The Stock Keeping Unit (SKU) associated with the updated pricing details. */
  SKU?: string | undefined;
  /** The updated sales price of the product. */
  SalesPrice?: number | undefined;
  /** The updated retail price of the product. */
  RetailPrice?: number;
  /** The identifier for the unit of measure (UOM) for the product. */
  UomId?: number | undefined;
  /** The updated size of the product unit. */
  UnitSize?: number | undefined;
  /** The updated activation date of the pricing details. */
  ActivationDate?: Date | undefined;
  /** The updated expiration date of the pricing details. */
  ExpirationDate?: Date | undefined;
  /** The updated external identifier associated with the product. */
  ExternalId?: string | undefined;
  /** The updated cost price of the product. */
  CostPrice?: number | undefined;
}

/** Represents the response data for updating tier prices, derived from the base update response. */
export interface UpdateTierPriceResponse {
  ModifiedBy?: number;
  ModifiedDate?: Date;
  /** The unique identifier for the price tier. */
  PriceTierId?: number;
  /** The identifier for the associated price list (if applicable). */
  PriceListId?: number | undefined;
  /** The Stock Keeping Unit (SKU) associated with the product. */
  SKU?: string | undefined;
  /** The price for the specified quantity of the product. */
  Price?: number;
  /** The quantity threshold for the tiered price. */
  Quantity?: number;
  /** The identifier for the unit of measure (UOM) for the product. */
  UomId?: number | undefined;
  /** The size of the product unit. */
  UnitSize?: number | undefined;
  /** Custom information field 1 associated with the tiered pricing. */
  Custom1?: string | undefined;
  /** Custom information field 2 associated with the tiered pricing. */
  Custom2?: string | undefined;
  /** Custom information field 3 associated with the tiered pricing. */
  Custom3?: string | undefined;
}

/** Represents the response data for user-specific pricing information. */
export interface UserPriceResponse {
  /** The identifier of the user-specific price list. */
  PriceListUserId?: number;
  /** The identifier of the associated price list. */
  PriceListId?: number;
  /** The identifier of the user. */
  UserId?: number;
  /** The optional precedence value for user-specific pricing. */
  Precedence?: number | undefined;
}

/** the data for requests related to the Update of Price. */
export interface UpdatePriceRequest {
  ModifiedBy?: number;
  /** the unique identifier for the update price. */
  PriceListId: number;
  /** The code associated with the price list. */
  ListCode?: string | undefined;
  /** The name of the price list. */
  ListName?: string | undefined;
  /** The ID of the currency associated with the price list. */
  CurrencyId: number;
  /** The date and time when the price list becomes active. */
  ActivationDate?: Date | undefined;
  /** The date and time when the price list expires. */
  ExpirationDate?: Date | undefined;
  /** The ID of the culture associated with the price list. */
  CultureId: number;
  /** The code representing the culture of the price list. */
  CultureCode?: string | undefined;
}

/** The response data for a list of gift cards, including pagination details and other relevant information. */
export interface GiftCardListDetailsResponse {
  PaginationDetail?: ZnodePaginationDetail;
  /** The list of gift card data responses. */
  GiftCardList?: GiftCardDataResponse[] | undefined;
  /** The value indicating whether the count includes referral commissions. */
  ReferralCommissionCount?: boolean;
}

export interface BrandListModelResponse {
  /** This model will return the Brand list details. */
  Brands?: BrandModelResponse[] | undefined;
}

/** Represents the response model for a Brand. */
export interface BrandModelResponse {
  /** The brand identifier. */
  BrandId?: number;
  /** The brand code. */
  BrandCode?: string | undefined;
  /** The brand name. */
  BrandName?: string | undefined;
  /** The media identifier. */
  MediaId?: number | undefined;
  /** The website link for the brand. */
  WebsiteLink?: string | undefined;
  /** The description of the brand. */
  Description?: string | undefined;
  /** The SEO title for the brand. */
  SEOTitle?: string | undefined;
  /** The SEO keywords for the brand. */
  SEOKeywords?: string | undefined;
  /** The SEO description for the brand. */
  SEODescription?: string | undefined;
  /** The SEO-friendly page name for the brand. */
  SEOFriendlyPageName?: string | undefined;
  /** The display order of the brand. */
  DisplayOrder?: number | undefined;
  /** Gets or sets a value indicating whether the brand is active. */
  IsActive?: boolean;
  /** The media path for the brand. */
  MediaPath?: string | undefined;
  /** The brand detail locale identifier. */
  BrandDetailLocaleId?: number;
  /** The CMS SEO detail identifier. */
  CMSSEODetailId?: number | undefined;
  /** The CMS SEO detail locale identifier. */
  CMSSEODetailLocaleId?: number | undefined;
  /** The locale identifier. */
  LocaleId?: number;
  /** The portal identifier. */
  PortalId?: number | undefined;
  /** The large image path for the brand. */
  ImageLargePath?: string | undefined;
  /** The medium image path for the brand. */
  ImageMediumPath?: string | undefined;
  /** The thumbnail image path for the brand. */
  ImageThumbNailPath?: string | undefined;
  /** The small image path for the brand. */
  ImageSmallPath?: string | undefined;
  /** The original image path for the brand. */
  OriginalImagepath?: string | undefined;
  /** The image name for the brand. */
  ImageName?: string | undefined;
}

/** Represents a response containing brand information. */
export interface BrandsResponse2 {
  Brands?: BrandModelResponse;
}

export interface CategoryListModelResponse {
  PaginationDetail?: ZnodePaginationDetail;
  CategoriesList?: CategoryListResponseModel;
  /** The list of locale information. */
  Locale?: LocaleModelResponse[] | undefined;
}

export interface CategoryListResponseModel {
  /** The list of locale information for the categories. */
  Locale?: LocaleModelResponse[] | undefined;
  /** The dictionary of attribute column names for the categories. */
  AttributeColumnName?: { [key: string]: any } | undefined;
  /** The list of XML data associated with the categories. */
  XmlDataList?: any[] | undefined;
}
/** Product inventory details. */
export interface ChildProductInventoryDetailResponse {
  /** PimProduct ID. */
  PimProductId?: number;
  /** Parent product SKU */
  ParentSKU?: string | undefined;
  /** The SKU of the product. */
  SKU?: string | undefined;
  /** The available quantity of the product in inventory. */
  InStockQty?: number;
  /** The price of the product. */
  Price?: number;
  /** A boolean value indicating whether purchasing of the product is disabled. */
  DisablePurchasing?: boolean;
  /** A boolean value indicating whether inventory tracking is disabled for the product. */
  DontTrackInventory?: boolean;
  /** A boolean value indicating whether back ordering is allowed for the product. */
  AllowBackOrdering?: boolean;
  /** The minimum quantity of product that can be purchased. */
  MinOrderQty?: number;
  /** The maximum quantity of product that can be purchased. */
  MaxOrderQty?: number;
}
export interface ConfigurableAttributeListResponse {
  /** The list of attributes. */
  Attributes?: PublishAttributesListResponse[] | undefined;
}

export interface ConfigurableAttributesResponse {
  /** The value of the attribute. */
  AttributeValue?: string | undefined;
  /** The text for the swatch. */
  SwatchText?: string | undefined;
  /** Indicates if the attribute is disabled. */
  IsDisabled?: boolean;
  /** The list of selected values for the attribute. */
  SelectValues?: ProductsAttributesSelectValuesResponse[] | undefined;
  /** The display order of the attribute. */
  DisplayOrder?: number;
}

/** The response model for product highlights. */
export interface HighlightModelResponse {
  /** Gets or sets the ID of the highlight. */
  HighlightId?: number;
  /** Gets or sets the locale ID associated with the highlight. */
  HighlightLocaleId?: number;
  /** Gets or sets the media ID associated with the highlight. */
  MediaId?: number | undefined;
  /** Gets or sets the path of the media associated with the highlight. */
  MediaPath?: string | undefined;
  /** Gets or sets a value indicating whether to display a popup for the highlight. */
  DisplayPopup?: boolean;
  /** Gets or sets the hyperlink associated with the highlight. */
  Hyperlink?: string | undefined;
  /** Gets or sets a value indicating whether the highlight is active. */
  IsActive?: boolean;
  /** Gets or sets the display order of the highlight. */
  DisplayOrder: number;
  /** Gets or sets the alt tag for the highlight image. */
  ImageAltTag?: string | undefined;
  /** Gets or sets the name of the highlight. */
  HighlightName?: string | undefined;
  /** Gets or sets the description of the highlight. */
  Description?: string | undefined;
  /** Gets or sets the type of the highlight. */
  HighlightType?: string | undefined;
  /** Gets or sets the code of the highlight. */
  HighlightCode: string;
}

/** Represents the response model for hydrated search activities. */
export interface HydratedSearchActivityResponse {
  /** The search keywords for the product. */
  SearchKeyword?: string | undefined;
}

/** Hydrated search brand list. */
export interface HydratedSearchBrandResponse {
  /** The brand identifier. */
  BrandId?: number;
  /** The brand code. */
  BrandCode?: string | undefined;
  /** The brand name. */
  BrandName?: string | undefined;
  /** The file path pointing to the brand's image. */
  ImagePath?: string | undefined;
  /** The SEO-friendly URL for the brand. */
  SEOUrl?: string | undefined;
}

/** List of hydrated search category. */
export interface HydratedSearchCategoryResponse {
  /** Unique Category identifier. */
  CategoryId?: number;
  /** The name of the category associated with the product. */
  CategoryName?: string | undefined;
  /** The file path pointing to the category's image. */
  ImagePath?: string | undefined;
  /** The SEO URL for the category. */
  SEOUrl?: string | undefined;
}

/** Hydrated search content page list. */
export interface HydratedSearchContentResponse {
  /** The content page identifier. */
  ContentPageId?: number;
  /** The content page name. */
  ContentPageName?: string | undefined;
  /** The SEO-friendly URL for the content page. */
  SEOUrl?: string | undefined;
}

/** Hydrated search product list. */
export interface HydratedSearchProductResponse {
  /** Identifier for the product. */
  ProductId?: number;
  /** The name of the product. */
  ProductName?: string | undefined;
  /** The file path pointing to image of this product. */
  ImagePath?: string | undefined;
  /** The SEO-friendly URL for the product. */
  SEOUrl?: string | undefined;
}

/** The list of hydrated search. */
export interface HydratedSearchResponse {
  /** The total count of products available in the search results. */
  TotalProductCount?: number;
  /** The list of HydratedSearchProductList. */
  HydratedSearchProductList?: HydratedSearchProductResponse[] | undefined;
  /** The list of HydratedSearchCategoryList model. */
  HydratedSearchCategoryList?: HydratedSearchCategoryResponse[] | undefined;
  /** The list of HydratedSearchBrandList model. */
  HydratedSearchBrandList?: HydratedSearchBrandResponse[] | undefined;
  /** The list of HydratedSearchActivityList model. */
  HydratedSearchActivityList?: HydratedSearchActivityResponse[] | undefined;
  /** The list of HydratedSearchContentList model. */
  HydratedSearchContentList?: HydratedSearchContentResponse[] | undefined;
  /** Indicates if my searches section enabled. */
  IsMySearchesEnabled?: boolean;
  /** Maximum results count for my searches section. */
  MySearchesResultCount?: number;
}

export interface LocaleModelResponse {
  /** The unique identifier for the locale. */
  LocaleId?: number;
  /** The name of the locale. */
  Name?: string | undefined;
  /** The code of the locale. */
  Code?: string | undefined;
  /** This value indicating whether the locale is active. */
  IsActive?: boolean;
  /** This value indicating whether the locale is the default. */
  IsDefault?: boolean;
}

/** Represents the response model that contains a collection of product attribute values. */
export interface PIMAttributesFamilyResponse {
  /** The list of product attribute values associated with the PIM attributes family. */
  Attributes?: PIMProductAttributeValuesResponse[] | undefined;
}

/** Represents the response model for a product attribute value in the PIM system. */
export interface PIMProductAttributeValuesResponse {
  /** The ID of the PIM attribute. */
  PimAttributeId?: number;
  /** The ID of the attribute type. */
  AttributeTypeId?: number | undefined;
  /** The name of the attribute type. */
  AttributeTypeName?: string | undefined;
  /** The code of the attribute. */
  AttributeCode?: string | undefined;
  /** The value indicating whether the attribute is required. */
  IsRequired?: boolean;
  /** The value indicating whether the attribute is localizable. */
  IsLocalizable?: boolean;
  /** The value indicating whether the attribute is filterable. */
  IsFilterable?: boolean;
  /** The name of the attribute. */
  AttributeName?: string | undefined;
  /** The value indicating whether the attribute is editable. */
  IsEditable?: boolean | undefined;
  /** The name of the control associated with the attribute. */
  ControlName?: string | undefined;
  /** The name of the validation applied to the attribute. */
  ValidationName?: string | undefined;
  /** The regular expression used for validation. */
  RegExp?: string | undefined;
  /** The value used for validation. */
  ValidationValue?: string | undefined;
  /** The value indicating whether the attribute uses a regular expression for validation. */
  IsRegExp?: boolean | undefined;
  /** The display order of the attribute. */
  DisplayOrder?: number | undefined;
  /** The value indicating whether the attribute is downloadable. */
  IsDownloadable?: boolean;
  /** The value indicating whether the attribute is a default attribute. */
  IsDefault?: boolean;
}

/** Represents the inventory details for the parent product. */
export interface ParentProductInventoryDetailResponse {
  /** PimProduct ID. */
  PimProductId?: number;
  /** Parent product SKU */
  ParentSKU?: string | undefined;
  /** The SKU of the product. */
  SKU?: string | undefined;
  /** The available quantity of the product in inventory. */
  InStockQty?: number;
  /** The price of the product. */
  Price?: number;
  /** A boolean value indicating whether purchasing of the product is disabled. */
  DisablePurchasing?: boolean;
  /** A boolean value indicating whether inventory tracking is disabled for the product. */
  DontTrackInventory?: boolean;
  /** A boolean value indicating whether back ordering is allowed for the product. */
  AllowBackOrdering?: boolean;
  /** The minimum quantity of product that can be purchased. */
  MinOrderQty?: number;
  /** The maximum quantity of product that can be purchased. */
  MaxOrderQty?: number;
  /** The type of the product. */
  ProductType?: string | undefined;
}

/** List model for the portal score. */
export interface PortalScoreListResponse {
  /** Portal score list */
  PortalScoreList?: PortalScoreResponse[] | undefined;
}

/** Portal Score model */
export interface PortalScoreResponse {
  /** Portal ID for the score */
  PortalId?: number;
  /** Catalog ID for the Score */
  CatalogId?: number | undefined;
  /** Score Type for the score, it may be Product/Category/Brand */
  ScoreType?: string | undefined;
  /** Primary key for the score, it may be of Product/Category/Brand */
  ScoreKeyId?: number | undefined;
  /** Actual score as per the order placed of the given score type Product/Category/Brand. */
  Score?: number;
}

/** Represents the response model for a list of product highlights. */
export interface ProductHighlightListResponse {
  /** Gets or sets the list of product highlight responses. */
  Highlights?: HighlightModelResponse[] | undefined;
}

export interface ProductsAttributesSelectValuesResponse {
  /** The value. */
  Value?: string | undefined;
  /** The code. */
  Code?: string | undefined;
  /** The display order. */
  DisplayOrder?: number;
  /** The text for the swatch. */
  SwatchText?: string | undefined;
}

export interface ProductsFeedListResponse {
  /** The list of product feed responses. */
  ProductFeeds?: ProductsFeedResponse[] | undefined;
}

/** Represents the response for a product feed. */
export interface ProductsFeedResponse {
  /** The ID of the product feed. */
  ProductFeedId?: number;
  /** The ID of the portal. */
  PortalId?: number;
  /** The ID of the locale. */
  LocaleId?: number;
  /** The title. */
  Title?: string | undefined;
  /** The link. */
  Link?: string | undefined;
  /** The description. */
  Description?: string | undefined;
  /** The ID of the product feed site map type. */
  ProductFeedSiteMapTypeId?: number;
  /** The ID of the product feed type. */
  ProductFeedTypeId?: number;
  /** The file count. */
  FileCount?: number;
}

/** Represents the inventory response for products, including both parent and child products. */
export interface ProductsInventoriesResponse {
  ParentProductInventoryDetailResponse?: ParentProductInventoryDetailResponse;
  /** The list of inventory details for the child products. */
  ChildProductInventoryDetailResponse?: ChildProductInventoryDetailResponse[] | undefined;
}

export interface ProductsPriceTierResponse {
  /** The price of the item. */
  Price?: number | undefined;
  /** The quantity of the item. */
  Quantity?: number | undefined;
  /** The minimum required quantity. */
  MinQuantity?: number | undefined;
  /** The maximum allowed quantity. */
  MaxQuantity?: number | undefined;
}

export interface PublishAttributeListResponse {
  /** The unique identifier for the attibute code. */
  AttributeCode?: string | undefined;
  /** The identifier for the attribute name. */
  AttributeName?: string | undefined;
  /** The identifier to get the attribute values. */
  AttributeValues?: string | undefined;
  /** The identifier to get the attribute type name. */
  AttributeTypeName?: string | undefined;
  /** The bool flag to identify it is personalizable or not. */
  IsPersonalizable?: boolean;
  /** The identifier for the display sequence. */
  DisplayOrder?: number;
  /** The identifier to identify it is disabled or not. */
  IsDisabled?: boolean;
}

export interface PublishAttributesListResponse {
  /** The code of the attribute. */
  AttributeCode?: string | undefined;
  /** The name of the attribute. */
  AttributeName?: string | undefined;
  /** The values of the attribute. */
  AttributeValues?: string | undefined;
  /** The type name of the attribute. */
  AttributeTypeName?: string | undefined;
  /** Indicates if the attribute is configurable. */
  IsConfigurable?: boolean;
  /** Indicates if the attribute is a swatch. */
  IsSwatch?: string | undefined;
  /** The display order of the attribute. */
  DisplayOrder?: number;
  /** The list of selected values for the attribute. */
  SelectValues?: ProductsAttributesSelectValuesResponse[] | undefined;
  /** The list of configurable attributes. */
  ConfigurableAttribute?: ConfigurableAttributesResponse[] | undefined;
  /** The code of the attribute value. */
  AttributeValueCode?: string | undefined;
  /** Indicates if the attribute is disabled. */
  IsDisabled?: boolean;
}

export interface PublishCategoriesListResponse {
  /** The unique identifier for PublishCategoryId categories. */
  PublishCategoryId?: number;
  /** The unique identifier for the parent catgeories. */
  ZnodeParentCategoryIds?: number[] | undefined;
  /** The unique identifier for the ZnodeCatalog id. */
  ZnodeCatalogId?: number;
  /** The products associated within the categories. */
  ProductIds?: number[] | undefined;
  /** The identifier for the locale. */
  LocaleId?: number;
  /** The identifier for the ImageSmallPath. */
  ImageSmallPath?: string | undefined;
  /** The published attibute response model. */
  Attributes?: PublishAttributeListResponse[] | undefined;
  /** The published category response model. */
  ParentCategory?: PublishCategoriesListResponse[] | undefined;
  /** The isactive flag for the categories. */
  IsActive?: boolean | undefined;
  /** The identifier for the catalog name. */
  CatalogName?: string | undefined;
  /** The identifier for the seo description. */
  SEODescription?: string | undefined;
  /** The identifier for the seokeywords. */
  SEOKeywords?: string | undefined;
  /** The title identifier for the seo. */
  SEOTitle?: string | undefined;
  /** The url identifier for the seo. */
  SEOUrl?: string | undefined;
  /** The identifier for the seocode. */
  SEOCode?: string | undefined;
  /** The flag to identify it is published or not. */
  PublishStatus?: string | undefined;
  /** The activation date identifier for the category. */
  ActivationDate?: Date | undefined;
  /** The expiration date identifier for the category. */
  ExpirationDate?: Date | undefined;
  /** The catgory name. */
  CategoryName?: string | undefined;
  /** Unique ideantidier to identify that the category is published or not. */
  IsPublish?: string | undefined;
  /** The identifier for the category code. */
  CategoryCode?: string | undefined;
}

export interface PublishCategoryListsResponse {
  /** This model will return the category list related data. */
  PublishCategories?: PublishCategoriesListResponse[] | undefined;
  PaginationDetail?: ZnodePaginationDetail;
}

export interface PublishProductsAttributeResponse {
  /** The code of the attribute. */
  AttributeCode?: string | undefined;
  /** The name of the attribute. */
  AttributeName?: string | undefined;
  /** The values of the attribute. */
  AttributeValues?: string | undefined;
  /** The type name of the attribute. */
  AttributeTypeName?: string | undefined;
  /** Indicates if the attribute is configurable. */
  IsConfigurable?: boolean;
  /** Indicates if the attribute is personalizable. */
  IsPersonalizable?: boolean;
  /** Indicates if the attribute is a custom field. */
  IsCustomField?: boolean;
  /** Indicates if the attribute is a swatch. */
  IsSwatch?: string | undefined;
  /** The display order of the attribute. */
  DisplayOrder?: number;
  /** The selected attribute values. */
  SelectedAttributeValue?: string[] | undefined;
  /** The select values associated with the attribute. */
  SelectValues?: ProductsAttributesSelectValuesResponse[] | undefined;
  /** Indicates if the attribute is disabled. */
  IsDisabled?: boolean;
}

export interface PublishedCategoryResponse {
  /** Unique code identifying the category. */
  CategoryCode?: string | undefined;
  /** Display name of the category. */
  Name?: string | undefined;
  /** Identifier for the published category. */
  PublishCategoryId?: number;
  /** Array of parent category IDs in the Znode system. */
  ZnodeParentCategoryIds?: number[] | undefined;
  /** Identifier for the Znode catalog. */
  ZnodeCatalogId?: number;
  /** Code of the catalog to which this category belongs. */
  CatalogCode?: string | undefined;
  /** Array of associated product IDs within this category. */
  ProductIds?: number[] | undefined;
  /** Version information of the category data. */
  Version?: string | undefined;
  SEODetails?: SEODetailsResponseModel2;
  /** Path to the large-sized category image. */
  ImageLargePath?: string | undefined;
  /** Path to the medium-sized category image. */
  ImageMediumPath?: string | undefined;
  /** Path to the thumbnail-sized category image. */
  ImageThumbNailPath?: string | undefined;
  /** Path to the small-sized category image. */
  ImageSmallPath?: string | undefined;
  /** SEO code associated with the category. */
  SEOCode?: string | undefined;
  /** List of attributes related to the category. */
  Attributes?: PublishAttributeListResponse[] | undefined;
  /** Promotion identifier applicable to the category. */
  PromotionId?: number;
  /** List of parent categories. */
  ParentCategory?: PublishedCategoryResponse[] | undefined;
  /** Indicates whether the category is active. */
  IsActive?: boolean | undefined;
  /** Name of the catalog to which this category belongs. */
  CatalogName?: string | undefined;
  /** Date when the category becomes active. */
  ActivationDate?: Date | undefined;
  /** Date when the category expires. */
  ExpirationDate?: Date | undefined;
  /** Portal identifier for portal-specific category data. */
  PortalId?: number;
  /** Locale identifier for localization support. */
  LocaleId?: number;
  /** Locale Code. */
  LocaleCode?: string | undefined;
  /** Store code. */
  StoreCode?: string | undefined;
}

/** Represents a request to email a friend about a product. */
export interface EmailAFriendRequest {
  /** The email ID of the sender. */
  YourMailId: string;
  /** The email ID of the friend. */
  FriendMailId: string;
  /** The locale Code. */
  LocaleCode?: string | undefined;
  /** The catalog Code. */
  CatalogCode: string;
  /** The store Code. */
  StoreCode: string;
  /** The name of the product. */
  ProductName: string;
  /** The URL of the product. */
  ProductUrl: string;
}

/** The request to generate a search report. */
export interface SearchReportRequest {
  /** The portal identifier associated with the CMS mapping. */
  StoreCode: string;
  /** The ID of the user requesting the report (optional). */
  UserId: number;
  /** The profile ID of the user requesting the report (optional). */
  UserProfileId?: number | undefined;
  /** The ID of the search profile used in the report. */
  SearchProfileId: number;
  /** The count of results to be included in the report. */
  ResultCount?: number;
  /** The keyword used in the search. The maximum length is 2000 characters. */
  SearchKeyword?: string | undefined;
  /** The transformed keyword used in the search. The maximum length is 2000 characters. */
  TransformationKeyword?: string | undefined;
}

/** Represents a request for adding items to a wishlist. */
export interface WishListRequest {
  /** The unique identifier of the user who is performing the wishlist operation. */
  UserName: string;
  /** SKU (Stock Keeping Unit) of the main product to be added to the wishlist. */
  SKU: string;
  /** Identifier for the portal or application where the wishlist operation is performed. */
  StoreCode: string;
  /** Optional additional SKUs of products related to the main product. */
  AddOnProductSKUs?: string | undefined;
}

export interface CategorySearchResponse {
  /** The unique identifier for the category. */
  CategoryId?: number;
  /** The name of the category. */
  CategoryName?: string | undefined;
  /** The title of the category. */
  Title?: string | undefined;
  /** The count associated with the category. */
  Count?: number;
  /** The SEO-friendly URL for the category. */
  SEOUrl?: string | undefined;
  /** The list of parent categories for the current category. */
  ParentCategories?: CategorySearchResponse[] | undefined;
}

/** The response containing a list of configurable product variants and pagination details. */
export interface ConfigurableProductVariantsListResponse {
  /** The list of configurable products. */
  ConfigurableProducts?: WebStoreConfigurableProductResponse[] | undefined;
}

export interface FullTextSearchResponse {
  /** The list of search facets. */
  Facets?: SearchFacetsResponse[] | undefined;
  /** The list of search products. */
  Products?: SearchProductsResponse[] | undefined;
  /** The total number of CMS pages found in the search. */
  TotalCMSPageCount?: number;
  /** The list of associated category IDs. */
  AssociatedCategoryIds?: number[] | undefined;
  PaginationDetail?: ZnodePaginationDetail;
}

/** The response model for highligth codes. */
export interface HighlightCodeResponse {
  /** The unique identifier for the highlight. */
  HighlightId?: number;
  /** The optional media identifier associated with the highlight. */
  MediaId?: number | undefined;
  /** The optional code for the highlight. */
  HighlightCode?: string | undefined;
  /** Indicates if a popup should be displayed. */
  DisplayPopup?: boolean | undefined;
  /** The optional hyperlink related to the highlight. */
  Hyperlink?: string | undefined;
  /** The optional identifier for the type of highlight. */
  HighlightTypeId?: number | undefined;
  /** Indicates if the highlight is active. */
  IsActive?: boolean | undefined;
  /** The optional order in which the highlight should be displayed. */
  DisplayOrder?: number | undefined;
}

/** The response for keyword search suggestions. */
export interface KeywordSearchSuggestionResponse {
  Search?: SearchKeywordResponse;
}

export interface PublishConfigurableAttributeResponse {
  /** The code of the attribute. */
  AttributeCode?: string | undefined;
  /** The name of the attribute. */
  AttributeName?: string | undefined;
  /** The values of the attribute. */
  AttributeValues?: string | undefined;
  /** Indicates if the attribute is a swatch. */
  IsSwatch?: string | undefined;
  /** The display order of the attribute. */
  DisplayOrder?: number;
}

/** The response for a report search. */
export interface ReportSearchResponse {
  /** The unique identifier for the search activity. */
  SearchActivityId?: number;
  /** The unique identifier for the portal. */
  PortalId?: number;
  /** The unique identifier for the user. */
  UserId?: number;
  /** The unique identifier for the search profile. */
  SearchProfileId?: number;
  /** The search keyword used in the report. */
  SearchKeyword?: string | undefined;
  /** The transformed keyword used in the report. */
  TransformationKeyword?: string | undefined;
  /** The total number of results found for the search. */
  ResultCount?: number;
  /** The unique identifier for the user profile. */
  UserProfileId?: number;
}

export interface SearchFacetsResponse {
  /** The name of the attribute. */
  AttributeName?: string | undefined;
  /** The code of the attribute. */
  AttributeCode?: string | undefined;
  /** The list of values for the attribute. */
  AttributeValues?: SearchFacetsValueResponse[] | undefined;
  /** The display order of the attribute. */
  DisplayOrder?: number;
}

/** Search feature details for the given or all stores. */
export interface SearchFeatureSettingResponse {
  /** Primary Key ID */
  SearchFeatureSettingId?: number;
  /** Portal Id for the feature, null for all stores. */
  PortalId?: number | undefined;
  /** Portal as display text. */
  PortalIdDisplayText?: string | undefined;
  /** Code of the portal. */
  PortalCode?: string | undefined;
  /** Name of the portal. */
  PortalName?: string | undefined;
  /** Weather the feature is for all store or single. */
  IsSystemDefined?: boolean;
  /** Code of the feature. */
  FeatureCode?: string | undefined;
  /** Represents if given feature is enabled or not. */
  IsEnabled?: boolean;
  /** Represents the maximum records count to be set for given feature. */
  MaxResultCount?: number;
}

/** Represents a response to a keyword search, including various details about the search results and their categorization. */
export interface SearchKeywordResponse {
  /** The unique identifier for the category. */
  CategoryId?: number;
  /** The name of the category. */
  Category?: string | undefined;
  /** The keyword used for the search. */
  Keyword?: string | undefined;
  /** Gets or sets a value indicating whether external ID is enabled. */
  ExternalIdEnabled?: boolean;
  /** Gets or sets a value indicating whether the external ID is not null. */
  ExternalIdNotNullCheck?: boolean;
  /** The list of inner search keywords. */
  InnerSearchKeywords?: string[] | undefined;
  /** The dictionary used to refine search results. */
  RefineBy?: { [key: string]: string[] } | undefined;
  /** The list of products within the category. */
  Products?: CategoryContentProductResponse[] | undefined;
  /** The list of categories associated with the search. */
  Categories?: CategorySearchResponse[] | undefined;
  /** The unique identifier for the catalog. */
  CatalogId?: number;
  /** The unique identifier for the locale. */
  LocaleId?: number;
  /** The unique identifier for the profile. */
  ProfileId?: number | undefined;
  /** The page number for the search results. */
  PageNumber?: number | undefined;
  /** The number of results per page. */
  PageSize?: number | undefined;
  /** The list of highlight terms. */
  HighlightList?: string[] | undefined;
  /** The fields that are searchable. */
  SearchableFields?: string[] | undefined;
  /** The fields that are facetable. */
  FacetableFields?: string[] | undefined;
  /** The field name used for highlighting. */
  HighlightFieldName?: string | undefined;
  /** The tags to be used after the highlight. */
  PostTags?: string | undefined;
  /** The tags to be used before the highlight. */
  PreTags?: string | undefined;
  /** The name of the index. */
  IndexName?: string | undefined;
  /** The size of the aggregation. */
  NumberOfAggregationSize?: number;
  /** The unique identifier for the portal. */
  PortalId?: number;
  /** Gets or sets a value indicating whether the search is a brand search. */
  IsBrandSearch?: boolean;
  /** Gets or sets a value indicating whether the response includes a facet list. */
  IsFacetList?: boolean;
  /** The suggested term for the search. */
  SuggestTerm?: string | undefined;
  /** Gets or sets a value indicating whether the search is performed from a suggestion. */
  IsSearchFromSuggestion?: boolean;
  /** The total count of products. */
  TotalProductCount?: number;
  /** The list of filters applied to the search results. */
  FilterList?: { [key: string]: string[] } | undefined;
  /** The dictionary that maps catalog IDs to locale IDs. */
  CatalogIdLocalIdDictionary?: { [key: string]: string[] } | undefined;
  /** Gets or sets a value indicating whether to use suggestions. */
  UseSuggestion?: boolean;
  /** The location associated with the search. */
  Location?: string | undefined;
  /** The unique identifier for the search profile. */
  SearchProfileId?: number;
  /** The total count of CMS pages. */
  TotalCMSPageCount?: number;
  /** The list of associated category IDs. */
  AssociatedCategoryIds?: number[] | undefined;
}

export interface UserWishListResponse {
  /** Unique identifier for the wishlist item. */
  Id?: number;
  /** SKU (Stock Keeping Unit) of the main product in the wishlist item. */
  SKU?: string | undefined;
  /** Optional additional SKUs of products related to the main product. */
  AddOnProductSKUs?: string | undefined;
  /** Identifier for the portal or application where the wishlist item belongs. */
  PortalId?: number;
}

export interface WebStoreConfigurableProductResponse {
  /** Represents the unique identifier for the published product. */
  PublishProductId?: number;
  /** Represents the stock keeping unit (SKU) of the product. */
  SKU?: string | undefined;
  /** Represents the name of the product. */
  Name?: string | undefined;
  /** Represents the path to the large image of the product. */
  ImageLargePath?: string | undefined;
  /** Represents the name of the image associated with the product. */
  ImageName?: string | undefined;
  ProductAttributes?: PublishConfigurableAttributeResponse[] | undefined;
  /** Represents an alternate name for the image associated with the product. */
  AlternateImageName?: string | undefined;
  /** Represents the message displayed when the product is in stock. */
  InStockMessage?: string | undefined;
  /** Represents the message displayed when the product is out of stock. */
  OutOfStockMessage?: string | undefined;
  /** Represents the message displayed when the product is on backorder. */
  BackOrderMessage?: string | undefined;
  /** Represents the display order of associated products. */
  AssociatedProductDisplayOrder?: number;
  /** Represents the name of the warehouse where the product is stored. */
  WarehouseName?: string | undefined;
  /** Represents the default inventory count of the product. */
  DefaultInventoryCount?: string | undefined;
  /** Represents the quantity of the product. */
  Quantity?: number | undefined;
  /** Represents the reorder level of the product. */
  ReOrderLevel?: number | undefined;
  /** Represents the sales price of the product. */
  SalesPrice?: number | undefined;
  /** Represents the retail price of the product. */
  RetailPrice?: number | undefined;
  /** Represents the currency code used for pricing. */
  CurrencyCode?: string | undefined;
  /** Represents a list of configurable attribute codes associated with the product. */
  ConfigurableAttributeCodeList?: string[] | undefined;
  /** Represents whether the product is set as default. */
  IsDefault?: boolean;
}

/** Represents a response object for a wish list item. */
export interface WishListResponse {
  PaginationDetail?: ZnodePaginationDetail;
  /** User wish list. */
  WishList?: UserWishListResponse[] | undefined;
  /** wish list products details. */
  WishListProducts?: PublishProductsDetailsResponse[] | undefined;
}

export interface WishListProductSkusResponse {
  UserWishListResponse: UserWishListResponse[];
}

/** Represents a response containing select values for attributes. */
export interface AttributesSelectValuesResponse {
  /** The value of the attribute. */
  Value?: string | undefined;
  /** The code of the attribute. */
  Code?: string | undefined;
  /** The display order of the attribute. */
  DisplayOrder?: number;
  /** The text for the swatch of the attribute. */
  SwatchText?: string | undefined;
  /** The path of the attribute. */
  Path?: string | undefined;
  /** The display order of the variant. */
  VariantDisplayOrder?: number;
  /** The SKU of the variant. */
  VariantSKU?: string | undefined;
}

export interface CategoryContentProductResponse {
  /** The external identifier of the product. */
  ExternalId?: string | undefined;
  /** The Znode product ID. */
  ZnodeProductId?: number;
  /** The version of the product. */
  Version?: number;
  /** The name of the product. */
  Name?: string | undefined;
  /** The name of the category to which the product belongs. */
  CategoryName?: string | undefined;
  /** The currency suffix for the product. */
  CurrencySuffix?: string | undefined;
  /** The rating of the product. */
  Rating?: number | undefined;
  /** The total number of reviews for the product. */
  TotalReviews?: number | undefined;
  /** The SEO URL of the product. */
  SEOUrl?: string | undefined;
  /** The Stock Keeping Unit (SKU) identifier for a product. */
  SKU?: string | undefined;
  /** The list of promotions associated with the product. */
  Promotions?: ProductPromotionResponse2[] | undefined;
  /** Product attributes. */
  Attributes?: PublishAttributeResponse2[] | undefined;
  /** The list of swatch attribute values for the product. */
  SwatchAttributesValues?: WebStoreAttributeValueSwatchResponse2[] | undefined;
  /** The path of the large image of the product. */
  ImageLargePath?: string | undefined;
  /** The path of the medium-sized image of the product. */
  ImageMediumPath?: string | undefined;
  /** The path of the thumbnail image of the product. */
  ImageThumbNailPath?: string | undefined;
  /** The path of the small image of the product. */
  ImageSmallPath?: string | undefined;
  /** The path of the small thumbnail image of the product. */
  ImageSmallThumbnailPath?: string | undefined;
  /** The message for products that are in stock. */
  InStockMessage?: string | undefined;
  /** The message for products that are out of stock. */
  OutOfStockMessage?: string | undefined;
  /** The message for products that are on backorder. */
  BackOrderMessage?: string | undefined;
  /** The list of category IDs associated with the product. */
  CategoryIds?: number[] | undefined;
  /** Product inventory details. */
  Inventory?: ProductsInventoryResponse2[] | undefined;
  /** The list of highlight strings for the product. */
  HighlightList?: ProductHighlightResponse[] | undefined;
}

export interface CategoryContentResponse {
  /** The list of facets associated with the category. */
  Facets?: SearchFacetResponse2[] | undefined;
  /** The list of products within the category. */
  Products?: CategoryContentProductResponse[] | undefined;
  /** The category ID of the product. */
  CategoryId?: number;
  /** The unique identifier for the catalog associated with the category. */
  CatalogId?: number;
  /** The unique identifier for the locale associated with the category. */
  LocaleId?: number;
  /** The page number for pagination purposes, if applicable. */
  PageNumber?: number | undefined;
  /** The page size for pagination purposes, if applicable. */
  PageSize?: number | undefined;
  /** The total count of products within the category. */
  TotalProductCount?: number;
}

/** Represents a response containing configurable attribute information. */
export interface ConfigurableAttributeResponse2 {
  /** The value of the attribute. */
  AttributeValue?: string | undefined;
  /** The image path for the attribute. */
  ImagePath?: string | undefined;
  /** The text for the swatch of the attribute. */
  SwatchText?: string | undefined;
  /** Indicates whether the attribute is disabled. */
  IsDisabled?: boolean;
  /** The list of select values for the attribute. */
  SelectValues?: AttributesSelectValuesResponse[] | undefined;
  /** The display order of the attribute. */
  DisplayOrder?: number;
}

export interface CustomerReviewResponse {
  /** The ID of the published product. */
  PublishProductId?: number | undefined;
  /** The rating given to the product. */
  Rating?: number | undefined;
  /** The headline of the review. */
  Headline?: string | undefined;
  /** The comments of the review. */
  Comments?: string | undefined;
  /** The name of the user who wrote the review. */
  UserName?: string | undefined;
  /** The location of the user who wrote the review. */
  UserLocation?: string | undefined;
  /** The status of the review. */
  Status?: string | undefined;
  /** The duration of the review. */
  Duration?: string | undefined;
}

export interface ImportTypeListResponse {
  /** Import types list Response. */
  ImportTypesList?: ImportTypesResponse[] | undefined;
}

export interface ImportTypesResponse {
  /** Import type name. */
  Name?: string | undefined;
  /** Import type head Id. */
  ImportHeadId?: number;
}

export interface ProductHighlightResponse {
  /** The name of the highlight. */
  HighlightName?: string | undefined;
  /** The code of the highlight. */
  HighlightCode?: string | undefined;
  /** The media path associated with the highlight. */
  MediaPath?: string | undefined;
  /** The display order of the highlight. */
  DisplayOrder?: number;
  /** The ID of the published product. */
  PublishProductId?: number;
  /** The SKU (Stock Keeping Unit) of the product. */
  SKU?: string | undefined;
}

/** Represents the details of product inventory. */
export interface ProductInventoryDetailsResponse {
  /** The name of the product. */
  ProductName?: string | undefined;
  /** The stock keeping unit (SKU) identifier for the product. */
  SKU?: string | undefined;
  /** The inventory details for the product across different locations. */
  Inventory?: ProductsInventoryResponse2[] | undefined;
}

/** Represents a response containing information about a product promotion. */
export interface ProductPromotionResponse2 {
  /** The ID of the product promotion. */
  ProductPromotionId?: number;
  /** The ID of the published product. */
  PublishProductId?: number;
  /** The ID of the promotion. */
  PromotionId?: number;
  /** The ID of the referral published product. */
  ReferralPublishProductId?: number;
  /** The quantity of the promotion product. */
  PromotionProductQuantity?: number;
  /** The type of the promotion. */
  PromotionType?: string | undefined;
  /** The message for the promotion. */
  PromotionMessage?: string | undefined;
  /** The expiration date of the promotion. */
  ExpirationDate?: Date;
  /** The activation date of the promotion. */
  ActivationDate?: Date;
  /** The list of product IDs associated with the promotion. */
  ProductIds?: number[] | undefined;
}

/** Represents a response object containing information about a product's inventory. */
export interface ProductsInventoryResponse2 {
  /** The quantity of the product available. */
  Quantity?: number;
  /** The name of the warehouse. */
  WarehouseName?: string | undefined;
  /** The code of the warehouse. */
  WarehouseCode?: string | undefined;
  /** The value indicating whether the product is from a warehouse. */
  IsFromWarehouse?: boolean;
  /** The value indicating whether the warehouse is the default one. */
  IsDefaultWarehouse?: boolean;
  /** The city where the warehouse is located. */
  WarehouseCityName?: string | undefined;
  /** The the state where the warehouse is located. */
  WarehouseStateName?: string | undefined;
  /** The postal code of the warehouse. */
  WarehousePostalCode?: string | undefined;
  /** The address of the warehouse. */
  WarehouseAddress?: string | undefined;
  /** The quantity of items that are on backorder. */
  BackOrderQuantity?: number;
  /** The expected date when backordered items will be available.
Nullable to indicate that the date might not be set. */
  BackOrderExpectedDate?: Date | undefined;
  /** The level at which reordering should occur.
Nullable to allow cases where a reorder level may not be applicable. */
  ReOrderLevel?: number | undefined;
  /** The external identifier for the item.
This can be used to map to an external system or database. */
  ExternalId?: string | undefined;
}

/** Represents a response containing information about a published attribute. */
export interface PublishAttributeResponse2 {
  /** The code of the attribute. */
  AttributeCode?: string | undefined;
  /** The name of the attribute. */
  AttributeName?: string | undefined;
  /** The values of the attribute. */
  AttributeValues?: string | undefined;
  /** The type name of the attribute. */
  AttributeTypeName?: string | undefined;
  /** Indicates if the attribute is a promotional rule condition. */
  IsPromoRuleCondition?: boolean;
  /** Indicates if the attribute is comparable. */
  IsComparable?: boolean;
  /** Indicates if the attribute contains HTML tags. */
  IsHtmlTags?: boolean;
  /** Indicates if the attribute is used as a facet. */
  IsFacets?: boolean;
  /** Indicates if the attribute is used in search. */
  IsUseInSearch?: boolean;
  /** Indicates if the attribute is configurable. */
  IsConfigurable?: boolean;
  /** Indicates if the attribute is personalizable. */
  IsPersonalizable?: boolean;
  /** Indicates if the attribute is a custom field. */
  IsCustomField?: boolean;
  /** Indicates if the attribute is a swatch. */
  IsSwatch?: string | undefined;
  /** The display order of the attribute. */
  DisplayOrder?: number;
  /** The selected attribute values. */
  SelectedAttributeValue?: string[] | undefined;
  /** The select values for the attribute. */
  SelectValues?: AttributesSelectValuesResponse[] | undefined;
  /** The configurable attributes. */
  ConfigurableAttribute?: ConfigurableAttributeResponse2[] | undefined;
  /** The code of the attribute value. */
  AttributeValueCode?: string | undefined;
  /** Indicates if the attribute is disabled. */
  IsDisabled?: boolean;
}

export interface PublishProductsDetailsResponse {
  /** The unique ID for the published product. */
  PublishProductId?: number;
  /** The list of Znode category IDs associated with the product. */
  ZnodeCategoryIds?: number[] | undefined;
  /** The Znode catalog ID associated with the product. */
  ZnodeCatalogId?: number;
  /** The locale ID associated with the product. */
  LocaleId?: number;
  /** Name of the product. */
  Name?: string | undefined;
  /** Product type. */
  ProductType?: string | undefined;
  /** The currency suffix. */
  CurrencySuffix?: string | undefined;
  /** The path of the large image associated with the product. */
  ImageLargePath?: string | undefined;
  /** The path of the medium-sized image associated with the product. */
  ImageMediumPath?: string | undefined;
  /** The path of the thumbnail image associated with the product. */
  ImageThumbNailPath?: string | undefined;
  /** The path of the small image associated with the product. */
  ImageSmallPath?: string | undefined;
  /** The original image path associated with the product. */
  OriginalImagepath?: string | undefined;
  /** A value indicating whether the product is a simple product. */
  IsSimpleProduct?: boolean;
  /** The message for in-stock availability. */
  InStockMessage?: string | undefined;
  /** The message for out-of-stock availability. */
  OutOfStockMessage?: string | undefined;
  /** The message for back-order availability. */
  BackOrderMessage?: string | undefined;
  /** The name of the category associated with the product. */
  CategoryName?: string | undefined;
  /** The name of the catalog associated with the product. */
  CatalogName?: string | undefined;
  /** A value indicating whether the product is active. */
  IsActive?: boolean;
  /** The Stock Keeping Unit (SKU) identifier for the product. */
  SKU?: string | undefined;
  /** The currency code associated with the culture. */
  CurrencyCode?: string | undefined;
  /** The culture code representing the language and region. */
  CultureCode?: string | undefined;
  /** The SEO description for the product. */
  SEODescription?: string | undefined;
  /** The SEO keywords for the product. */
  SEOKeywords?: string | undefined;
  /** The SEO title for the product. */
  SEOTitle?: string | undefined;
  /** The SEO URL for the product. */
  SEOUrl?: string | undefined;
  /** Product Category Ids. */
  ZnodeProductCategoryIds?: number[] | undefined;
  /** The list of tier prices for the product. */
  TierPriceList?: ProductsPriceTierResponse[] | undefined;
  /** The list of attributes for the product. */
  Attributes?: PublishAttributeResponse2[] | undefined;
  /** The list of promotions applicable to the product. */
  Promotions?: ProductPromotionResponse2[] | undefined;
  /** The list of customer reviews for the product. */
  ProductReviews?: CustomerReviewResponse[] | undefined;
  /** The list of add-ons available for the product. */
  AddOns?: WebStoreAddOnResponse[] | undefined;
  /** A list of products associated with the current group in the web store. */
  AssociatedGroupProducts?: WebStoreGroupProductsResponse[] | undefined;
  /** A list of published bundle products associated with the web store. */
  PublishBundleProducts?: PublishedBundleProductResponse[] | undefined;
  /** The available quantity of the product in stock. Null if the quantity is not specified. */
  Quantity?: number | undefined;
  /** The minimum stock level at which a reorder is triggered. Null if not applicable or set. */
  ReOrderLevel?: number | undefined;
  /** The price at which the product is currently being sold. This can change based on sales or discounts. Null if not set. */
  SalesPrice?: number | undefined;
  /** The original retail price of the product before any discounts or promotions. Null if not set. */
  RetailPrice?: number | undefined;
  /** The promotional price of the product if there are any ongoing promotions or sales. Null if no promotions are active. */
  PromotionalPrice?: number | undefined;
  /** A message related to the pricing of grouped products, such as bundles or sets. Null if not applicable. */
  GroupProductPriceMessage?: string | undefined;
  /** The final calculated price of the product after applying any discounts or promotions. Null if not set. */
  ProductPrice?: number | undefined;
  /** The ID of the wish list associated with the product, if the product has been added to the user's wish list. */
  WishListId?: number;
}

export interface PublishProductsListResponse {
  /** Product details list. */
  PublishProducts?: PublishProductsModel2[] | undefined;
  PaginationDetail?: ZnodePaginationDetail;
}

export interface PublishProductsModel2 {
  /** A unique identifier assigned to the published product. */
  PublishProductId?: number;
  /** Identifies the parent published product, if any, to which this product belongs. */
  ParentPublishProductId?: number;
  /** The stock keeping unit (SKU) of the parent published product. */
  ParentPublishProductSKU?: string | undefined;
  /** A collection of category identifiers associated with this product. */
  ZnodeCategoryIds?: number[] | undefined;
  /** Identifier to the catalog which this product belongs. */
  ZnodeCatalogId?: number;
  /** Specifies the locale (language and region) associated with this product. */
  LocaleId?: number;
  /** Name of the product. */
  Name?: string | undefined;
  /** The suffix indicating the currency used for pricing. */
  CurrencySuffix?: string | undefined;
  /** The file path pointing to the large-sized image of this product. */
  ImageLargePath?: string | undefined;
  /** The file path pointing to the medium-sized image of this product. */
  ImageMediumPath?: string | undefined;
  /** The file path pointing to the thumbnail image of this product. */
  ImageThumbNailPath?: string | undefined;
  /** The file path pointing to the small-sized image of this product. */
  ImageSmallPath?: string | undefined;
  /** The file path pointing to the small thumbnail image of this product. */
  ImageSmallThumbnailPath?: string | undefined;
  /** The file path pointing to the small image of the parent product, if applicable. */
  ParentProductImageSmallPath?: string | undefined;
  /** Identifies the catalog in which this product is published. */
  PublishedCatalogId?: number;
  /** The identifier for the portal associated with this product. */
  PortalId?: number;
  /** The name of the category to which this product belongs. */
  CategoryName?: string | undefined;
  /** The name of the catalog to which this product belongs. */
  CatalogName?: string | undefined;
  /** The type of the product. */
  ProductType?: string | undefined;
  /** Indicates whether this product is currently active. */
  IsActive?: boolean;
  /** A string indicating whether the product is published. */
  IsPublish?: string | undefined;
  /** The unique identifier for the product in the PIM. */
  PimProductId?: number;
  /** A list of category identifiers associated with this product. */
  ZnodeProductCategoryIds?: number[] | undefined;
  /** The stock keeping unit (SKU) assigned to this product. */
  SKU?: string | undefined;
  /** Indicates whether pricing information for this product is available upon request. */
  IsCallForPricing?: boolean;
  /** The price of a single unit of this product, if available. */
  UnitPrice?: number | undefined;
}

export interface PublishedBundleProductResponse {
  PublishProductId?: number;
  Attributes?: PublishAttributeResponse2[] | undefined;
  SKU?: string | undefined;
  InventoryMessage?: string | undefined;
  ShowAddToCart?: boolean;
  MinQuantity?: number | undefined;
  MaxQuantity?: number | undefined;
  AllowBackOrder?: boolean | undefined;
  TrackInventory?: boolean | undefined;
  ProductType?: string | undefined;
  Name?: string | undefined;
  Quantity?: number | undefined;
  ReOrderLevel?: number | undefined;
  DefaultWarehouseName?: string | undefined;
  DefaultInventoryCount?: string | undefined;
  AssociatedQuantity?: number | undefined;
  InStockMessage?: string | undefined;
  OutOfStockMessage?: string | undefined;
  BackOrderMessage?: string | undefined;
  ImageThumbNailPath?: string | undefined;
  ParentPublishProductId?: number;
  ParentBundleSKU?: string | undefined;
}

/** Represents the response for recently viewed products. */
export interface RecentViewProductsResponse {
  /** The unique identifier for the product. */
  ZnodeProductId?: number;
  /** The unique identifier for the catalog. */
  ZnodeCatalogId?: number;
}

export interface SearchKeywordsRedirectsListResponse {
  PaginationDetail?: ZnodePaginationDetail;
  /** A list of search keyword redirect responses. */
  KeywordsList?: SearchKeywordRedirectResponse[] | undefined;
}

/** The response containing details of a search keyword redirect. */
export interface SearchKeywordRedirectResponse {
  /** The unique identifier for the search keywords redirect. */
  SearchKeywordsRedirectId?: number;
  /** The identifier for the published catalog.
Nullable property. */
  PublishCatalogId?: number | undefined;
  /** The keywords that trigger the redirect. */
  Keywords?: string | undefined;
  /** The URL to which the keywords are redirected. */
  URL?: string | undefined;
  /** The locale identifier for the redirect.
Nullable property. */
  LocaleId?: number | undefined;
}
export interface SEOUrlsResponse {
  SeoUrl?: string | undefined;
  ProductId?: number | undefined;
  ProductName?: string | undefined;
  CategoryId?: number | undefined;
  CategoryName?: string | undefined;
  ContentPageId?: number | undefined;
  ContentPageName?: string | undefined;
  BrandId?: number | undefined;
  BrandName?: string | undefined;
  SeoCode?: string | undefined;
  Name?: string | undefined;
  SEOId?: number;
  IsActive?: boolean;
  SEOTitle?: string | undefined;
  SEOKeywords?: string | undefined;
  SEODescription?: string | undefined;
  CanonicalURL?: string | undefined;
  RobotTag?: string | undefined;
}

/** product search response. */
export interface ProductSearchResponse {
  /** Publish product is. */
  PublishProductId?: number;
  /** Znode categories associated to product. */
  ZnodeCategoryIds?: number[] | undefined;
  /** Product catalog id. */
  ZnodeCatalogId?: number;
  /** Znode locale Id. */
  LocaleId?: number;
  /** The name of the product. */
  Name?: string | undefined;
  /** The category ID of the product. */
  CategoryId?: number;
  /** The name of the category to which the product belongs. */
  CategoryName?: string | undefined;
  /** The currency suffix for the product. */
  CurrencySuffix?: string | undefined;
  /** The rating of the product. */
  Rating?: number | undefined;
  /** The total number of reviews for the product. */
  TotalReviews?: number | undefined;
  /** The SEO URL of the product. */
  SEOUrl?: string | undefined;
  /** The list of promotions associated with the product. */
  Promotions?: ProductPromotionResponse2[] | undefined;
  /** Product attributes. */
  Attributes?: PublishAttributeResponse2[] | undefined;
  /** The list of highlight strings for the product. */
  HighlightList?: string[] | undefined;
  /** The list of swatch attribute values for the product. */
  SwatchAttributesValues?: WebStoreAttributeValueSwatchResponse2[] | undefined;
  /** The add-ons associated with the product. */
  Addons?: WebStoreAddOnResponse[] | undefined;
  /** Associated group products. */
  AssociatedGroupProducts?: WebStoreGroupProductResponse[] | undefined;
  /** The path of the large image of the product. */
  ImageLargePath?: string | undefined;
  /** The path of the medium-sized image of the product. */
  ImageMediumPath?: string | undefined;
  /** The path of the thumbnail image of the product. */
  ImageThumbNailPath?: string | undefined;
  /** The path of the small image of the product. */
  ImageSmallPath?: string | undefined;
  /** The path of the small thumbnail image of the product. */
  ImageSmallThumbnailPath?: string | undefined;
  /** The message for products that are in stock. */
  InStockMessage?: string | undefined;
  /** The message for products that are out of stock. */
  OutOfStockMessage?: string | undefined;
  /** The message for products that are on backorder. */
  BackOrderMessage?: string | undefined;
  /** The list of category IDs associated with the product. */
  CategoryIds?: number[] | undefined;
  /** Product inventory details. */
  Inventory?: ProductsInventoryResponse2[] | undefined;
}

export interface SearchFacetResponse2 {
  /** The name of the attribute associated with the facet. */
  AttributeName?: string | undefined;
  /** The code of the attribute associated with the facet. */
  AttributeCode?: string | undefined;
  /** The list of values for the attribute associated with the facet. */
  AttributeValues?: SearchFacetValueResponse2[] | undefined;
  /** The unique identifier for the control type associated with the facet. */
  ControlTypeId?: number;
  /** The display order of the facet. */
  DisplayOrder?: number;
  /** The type of control associated with the facet. */
  ControlType?: string | undefined;
}

export interface SearchFacetValueResponse2 {
  /** The value of the attribute associated with the facet. */
  AttributeValue?: string | undefined;
  /** The count of items within this facet value. */
  FacetCount?: number;
  /** The label for the facet value. */
  Label?: string | undefined;
  /** The maximum value of a range, if applicable. */
  RangeMax?: string | undefined;
  /** The minimum value of a range, if applicable. */
  RangeMin?: string | undefined;
  /** The end value of a range, if applicable. */
  RangeEnd?: string | undefined;
  /** The start value of a range, if applicable. */
  RangeStart?: string | undefined;
  /** The display order of the facet value, if applicable. */
  DisplayOrder?: number | undefined;
}

/** Represents a response containing information about a web store add-on. */
export interface WebStoreAddOnResponse {}

/** Represents a response containing swatch information for a web store attribute value. */
export interface WebStoreAttributeValueSwatchResponse2 {}

/** Represents a response containing information about a web store group product. */
export interface WebStoreGroupProductResponse {}

export interface WebStoreGroupProductsResponse {
  /** Unique identifier for the published product. */
  PublishProductId?: number;
  /** Name of the group or collection that the product belongs to. */
  Name?: string | undefined;
  /** Specific name of the product within the group. */
  ProductName?: string | undefined;
  /** ID representing the locale or region for localization purposes. */
  LocaleId?: number;
  /** Suffix representing the currency (e.g., $, €, etc.) based on the locale. */
  CurrencySuffix?: string | undefined;
  /** URL path to the large version of the product image. */
  ImageLargePath?: string | undefined;
  /** URL path to the medium-sized version of the product image. */
  ImageMediumPath?: string | undefined;
  /** URL path to the thumbnail version of the product image. */
  ImageThumbNailPath?: string | undefined;
  /** URL path to the small version of the product image. */
  ImageSmallPath?: string | undefined;
  /** URL path to the smaller thumbnail version of the product image. */
  ImageSmallThumbnailPath?: string | undefined;
  /** List of attributes associated with the published product, like color, size, etc. */
  Attributes?: PublishAttributeResponse2[] | undefined;
  /** Message displayed when the product is in stock. */
  InStockMessage?: string | undefined;
  /** Message displayed when the product is out of stock. */
  OutOfStockMessage?: string | undefined;
  /** Message displayed when the product is available for backorder. */
  BackOrderMessage?: string | undefined;
  /** Display order of the associated product in a collection. */
  AssociatedProductDisplayOrder?: number;
  /** Addons associated with the group products. */
  Addons?: WebStoreAddOnResponse[] | undefined;
}

/** Represents the SEO detail response containing various SEO-related properties. */
export interface SEODetailResponse {
  /** The SEO identifier. */
  SEOId?: number | undefined;
  /** The SEO title.
The maximum length is 100 characters. */
  SEOTitle?: string | undefined;
  /** The SEO description.
The maximum length is 1000 characters. */
  SEODescription?: string | undefined;
  /** The SEO keywords.
The maximum length is 100 characters. */
  SEOKeywords?: string | undefined;
  /** The SEO URL.
The maximum length is 1000 characters. */
  SEOUrl?: string | undefined;
  /** The locale identifier. */
  LocaleId?: number;
  /** The portal identifier. */
  PortalId?: number;
  /** The robot tag. */
  RobotTag?: string | undefined;
  /** The SEOTypeName identifier. */
  SEOTypeName?: string | undefined;
}

export interface SEODetailsResponseModel2 {
  /** The identifier for the itemname. */
  ItemName?: string | undefined;
  /** The product name identifier. */
  ProductName?: string | undefined;
  /** The unique identifier doe the cmsseodetails. */
  CMSSEODetailId?: number;
  /** The unique identifier for the cmsseodetailslocalid. */
  CMSSEODetailLocaleId?: number;
  /** The unique identifier for the cmsseotypeid. */
  CMSSEOTypeId?: number;
  /** The unique identifier for the seoid. */
  SEOId?: number | undefined;
  /** The type name identifier for the seo. */
  SEOTypeName?: string | undefined;
  /** The seo title for the seo. */
  SEOTitle?: string | undefined;
  /** The description identifier for the seo. */
  SEODescription?: string | undefined;
  /** The seokeyworeds identifier for the seo. */
  SEOKeywords?: string | undefined;
  /** The identifier for the seo. */
  SEOUrl?: string | undefined;
  /** The flag for the redirection. */
  IsRedirect?: boolean | undefined;
  /** The metainformation is stored in this identifier. */
  MetaInformation?: string | undefined;
  /** The identifier for the existing seo url. */
  OldSEOURL?: string | undefined;
  /** The unique identifier for the perticular local. */
  LocaleId?: number;
  /** The unique identifier for the  cmscontentpagesid. */
  CMSContentPagesId?: number;
  /** The identifier for the PortalId. */
  PortalId?: number;
  /** The identifier to identify the publish status. */
  PublishStatus?: string | undefined;
  /** The flag for set is publish. */
  IsPublish?: boolean | undefined;
  /** The identifier to select the portal. */
  Portals?: SelectListItem[] | undefined;
  /** The identifier to select the local. */
  Locales?: SelectListItem[] | undefined;
  /** The idenrtifer to identify that is all store configured. */
  IsAllStore?: boolean;
  /** The unique id for the pim products. */
  PimProductId?: number;
  /** The unique identifier for the seo. */
  SEOCode?: string | undefined;
  /** The flag to check the acitve state. */
  IsActive?: string | undefined;
  /** The unique identifier for the publish state id. */
  PublishStateId?: number;
  /** The identifier for cannonical url. */
  CanonicalURL?: string | undefined;
  /** The identifier for the robottag. */
  RobotTag?: string | undefined;
}

export interface SearchFacetsValueResponse {
  /** The attribute value. */
  AttributeValue?: string | undefined;
  /** The count of facets associated with this attribute value. */
  FacetCount?: number;
  /** The label associated with the attribute value. */
  Label?: string | undefined;
  /** The display order of the attribute value. */
  DisplayOrder?: number | undefined;
}

/** Search feature details for the given or all stores. */
export interface SearchFeatureSettingListRequest {
  /** The list of search feature settings for the store. */
  SearchFeatureSettingList?: SearchFeatureSettingRequest[] | undefined;
}

/** Search feature details for the given or all stores. */
export interface SearchFeatureSettingListResponse {
  PaginationDetail?: ZnodePaginationDetail;
  /** The list of search feature settings for the store. */
  SearchFeatureSettingList?: SearchFeatureSettingResponse[] | undefined;
}

/** Request model for SearchFeatureSetting */
export interface SearchFeatureSettingRequest {
  /** Primary Key ID */
  SearchFeatureSettingId?: number;
  /** Portal Id for the feature, null for all stores. */
  PortalId?: number | undefined;
  /** Weather the feature is for all store or single. */
  IsSystemDefined?: boolean;
  /** Code of the feature. */
  FeatureCode?: string | undefined;
  /** Represents if given feature is enabled or not. */
  IsEnabled?: boolean;
  /** Represents the maximum records count to be set for given feature. */
  MaxResultCount?: number;
}

export interface SearchProductsResponse {
  /** The Znode product ID. */
  ZnodeProductId?: number;
  /** The locale ID associated with the product. */
  LocaleId?: number;
  /** The name of the product. */
  Name?: string | undefined;
  /** The name of the category to which the product belongs. */
  CategoryName?: string | undefined;
  /** The currency suffix for the product. */
  CurrencySuffix?: string | undefined;
  /** The rating of the product. */
  Rating?: number | undefined;
  /** The total number of reviews for the product. */
  TotalReviews?: number | undefined;
  /** The SEO description of the product. */
  SEODescription?: string | undefined;
  /** The SEO keywords associated with the product. */
  SEOKeywords?: string | undefined;
  /** The SEO title of the product. */
  SEOTitle?: string | undefined;
  /** The SEO URL of the product. */
  SEOUrl?: string | undefined;
  /** The Stock Keeping Unit (SKU) identifier for a product. */
  SKU?: string | undefined;
  /** The path of the large image of the product. */
  ImageLargePath?: string | undefined;
  /** The path of the medium-sized image of the product. */
  ImageMediumPath?: string | undefined;
  /** The path of the thumbnail image of the product. */
  ImageThumbNailPath?: string | undefined;
  /** The path of the small image of the product. */
  ImageSmallPath?: string | undefined;
  /** The path of the small thumbnail image of the product. */
  ImageSmallThumbnailPath?: string | undefined;
  /** The message for products that are in stock. */
  InStockMessage?: string | undefined;
  /** The message for products that are out of stock. */
  OutOfStockMessage?: string | undefined;
  /** The message for products that are on backorder. */
  BackOrderMessage?: string | undefined;
  /** The list of category IDs associated with the keyword search result. */
  CategoryIds?: number[] | undefined;
  /** Product attributes. */
  Attributes?: PublishProductsAttributeResponse[] | undefined;
  /** The list of swatch attribute values for the product. */
  SwatchAttributesValues?: WebStoreAttributeValueSwatchResponse2[] | undefined;
  /** Product inventory details. */
  Inventory?: ProductsInventoryResponse2[] | undefined;
  /** The list of highlight strings for the product. */
  HighlightList?: ProductHighlightResponse[] | undefined;
}

/** Represents a stock notification request. */
export interface StockNotificationRequest {
  /** The parent SKU. */
  ParentSKU: string;
  /** The product SKU. */
  ProductSKU: string;
  /** The email ID. */
  EmailId: string;
  /** The quantity. */
  Quantity: number;
  PortalId: number;
  /** The catalog ID. */
  CatalogId: number;
}

export interface FilterTuple {
  Item1?: string | undefined;
  Item2?: string | undefined;
  Item3?: string | undefined;
  FilterName?: string | undefined;
  FilterOperator?: string | undefined;
  FilterValue?: string | undefined;
}

export interface BooleanResponse {
  ErrorMessage?: string;
  HasError?: boolean;
  IsSuccess?: boolean;
}

export interface ZnodeErrorDetail {
  ErrorCode?: number | undefined;
  ErrorMessage?: string | undefined;
  HasError?: boolean;
  StatusCode?: HttpStatusCode;
}

export interface ZnodePaginationDetail {
  PageIndex?: number | undefined;
  PageSize?: number | undefined;
  TotalPages?: number | undefined;
  TotalResults?: number | undefined;
}

export enum ApplicationTypesEnum {
  _0 = 0,
  _1 = 1,
  _2 = 2,
  _3 = 3,
}

export interface WebStoreLocatorResponse {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  ActionMode?: string | undefined;
  Custom1?: string | undefined;
  Custom2?: string | undefined;
  Custom3?: string | undefined;
  Custom4?: string | undefined;
  Custom5?: string | undefined;
  ErrorCode?: number | undefined;
  ErrorMessage?: string | undefined;
  HasError?: boolean;
  CustomModelState?: { [key: string]: string } | undefined;
  ErrorDetailList?: { [key: string]: string } | undefined;
  StoreLocatorList?: StoreLocatorDataModel[] | undefined;
}

export interface StoreLocatorDataModel {
  CreatedBy?: number;
  CreatedDate?: Date;
  ModifiedBy?: number;
  ModifiedDate?: Date;
  ActionMode?: string | undefined;
  Custom1?: string | undefined;
  Custom2?: string | undefined;
  Custom3?: string | undefined;
  Custom4?: string | undefined;
  Custom5?: string | undefined;
  PortalId: number;
  DisplayOrder: number;
  StoreName: string;
  StoreLocationCode: string;
  AddressId?: number;
  PortalAddressId?: number;
  IsActive?: boolean;
  MapQuestURL?: string | undefined;
  MediaPath?: string | undefined;
  Longitude?: number | undefined;
  Latitude?: number | undefined;
  MediaId?: number;
  Address1: string;
  Address2?: string | undefined;
  Address3?: string | undefined;
  DisplayName?: string | undefined;
  CountryName: string;
  StateName: string;
  StateCode?: string | undefined;
  CityName: string;
  PostalCode: string;
  PhoneNumber: string;
  FaxNumber?: string | undefined;
  ExternalId?: string | undefined;
  Portalname?: string | undefined;
  CompanyName?: string | undefined;
}

export interface WebStoreCaseCreateRequestModel {
  /** The store code where the case was submitted.
Represents the unique identifier for the store. */
  StoreCode?: string | undefined;
  /** Username of the reviewer. */
  UserName: string;
  /** The user ID of the case owner.
Represents the person responsible for handling the case. */
  OwnerUserId?: number;
  /** The case status ID.
Represents the current status of the case, such as Open, Closed, or Pending. */
  CaseStatusId?: number;
  /** The case priority ID.
Represents the priority level of the case, such as Low, Medium, or High. */
  CasePriorityId?: number;
  /** The case type ID.
Represents the type of inquiry, such as a complaint, question, or feedback. */
  CaseTypeId?: number;
  /** The origin of the case.
Represents where the case was submitted from, such as email, phone, or web. */
  CaseOrigin?: string | undefined;
  /** The title of the case.
Represents the brief summary or subject line of the case. */
  Title?: string | undefined;
  /** The description of the case.
Represents the detailed explanation of the inquiry or issue. */
  Description?: string | undefined;
  /** The first name of the customer submitting the case.
Represents the customer's first name. */
  FirstName?: string | undefined;
  /** The last name of the customer submitting the case.
Represents the customer's last name. */
  LastName?: string | undefined;
  /** The company name associated with the customer.
Represents the company name if the customer is representing an organization. */
  CompanyName?: string | undefined;
  /** The email ID of the customer.
Represents the contact email address of the customer. */
  EmailId?: string | undefined;
  /** The phone number of the customer.
Represents the contact phone number of the customer. */
  PhoneNumber?: string | undefined;
  /** Gets or sets a custom field for additional data related to the case.
Represents a user-defined field that can store any extra information. */
  Custom1?: string | undefined;
  /** Gets or sets another custom field for additional data related to the case.
Represents another user-defined field that can store extra information. */
  Custom2?: string | undefined;
  /** Gets or sets another custom field for additional data related to the case.
Represents another user-defined field that can store extra information. */
  Custom3?: string | undefined;
  /** Gets or sets another custom field for additional data related to the case.
Represents another user-defined field that can store extra information. */
  Custom4?: string | undefined;
  /** Gets or sets another custom field for additional data related to the case.
Represents another user-defined field that can store extra information. */
  Custom5?: string | undefined;
}

export interface PublishCatalogProductListResponse {
  /** Product details list. */
  PublishProducts?: PublishProductsModel[] | undefined;
  /** The list of configurable products. */
  ConfigurableProducts?: WebStoreConfigurableProductResponse[] | undefined;
}

/** validate SKU request model. */
export interface ValidateSKUsRequest {
  /** This helps to pass in query parameters (Comma-separated string or single value).
Supports values with special characters and allows spaces after commas. */
  skus: string;
}

/** Product list for validated SKUs. */
export interface ValidatedProductListResponse {
  /** List of validated product. */
  Products?: ValidatedProductResponse[] | undefined;
}

/** Represents the validated response of a product with its attributes and status details. */
export interface ValidatedProductResponse {
  /** Gets or sets the name of the product. */
  Name?: string | undefined;
  /** Gets or sets the Stock Keeping Unit (SKU) of the product. */
  SKU?: string | undefined;
  /** Gets or sets the unique identifier for the product. */
  Id?: number;
  /** Gets or sets the type/category of the product. */
  ProductType?: string | undefined;
  /** Gets or sets the retail price of the product. */
  RetailPrice?: number | undefined;
  /** Gets or sets the inventory code for the product. */
  InventoryCode?: string | undefined;
  /** Gets or sets a value indicating whether the product is obsolete. */
  IsObsolete?: string | undefined;
  /** Gets or sets the maximum quantity allowed for the product. */
  MaxQuantity?: number | undefined;
  /** Gets or sets the minimum quantity required for the product. */
  MinQuantity?: number | undefined;
  /** Gets or sets a value indicating whether the product is active. */
  IsActive?: boolean;
  /** Gets or sets a value indicating whether the product is personalizable. */
  IsPersonalizable?: boolean;
  /** Gets or sets the quantity of the product available on hand. */
  QuantityOnHand?: number | undefined;
  /** Gets or sets a value indicating whether the product has an active promotion. */
  HasPromotion?: boolean;
  /** Gets or sets the version identifier for the product details. */
  VersionId?: number;
  /** flag to check the SKU is valid or not. */
  IsValidSKU?: boolean;
}

export interface GenerateTokenRequestModel {
  /** The password of the user. */
  Password: string;
  StoreCode: string;
}

/** The user login token response. */
export interface UserLoginTokenResponse {
  ErrorCode?: number;
  HasError?: boolean;
  ErrorMessage?: string;
  LoginToken?: string | undefined;
}
